{"ast":null,"code":"import _asyncToGenerator from \"C:/Hierarchy/Hierarchy PL/hierarchy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { StudentsResult } from 'models/students-result.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction ShowStudentsComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const student_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r1.student_id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r1.student_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r1.student_surname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.facultyName(student_r1.faculty_id));\n  }\n}\n\nexport class ShowStudentsComponent {\n  constructor(service) {\n    this.service = service;\n    this.StudentList = new StudentsResult();\n    this.facultyNames = [];\n  }\n\n  ngOnInit() {\n    this.refreshStudentList();\n  }\n\n  facultyName(val) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.service.getFacultyName(val).then(data => {\n        if (data.success) {\n          _this.facultyNames[0] = data.result_set[0];\n          return _this.facultyNames[0].faculty_name;\n        } else {\n          return alert(data.userMessage);\n        }\n      });\n    })();\n  }\n\n  refreshStudentList() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.StudentList.result_set = [];\n      yield _this2.service.getStudentList().then(data => {\n        if (data.success) {\n          _this2.StudentList = data;\n        } else {\n          alert(data.userMessage);\n        }\n      });\n    })();\n  }\n\n}\n\nShowStudentsComponent.ɵfac = function ShowStudentsComponent_Factory(t) {\n  return new (t || ShowStudentsComponent)(i0.ɵɵdirectiveInject(i1.SharedService));\n};\n\nShowStudentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowStudentsComponent,\n  selectors: [[\"app-show-students\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ShowStudentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0);\n      i0.ɵɵelementStart(1, \"thead\");\n      i0.ɵɵelementStart(2, \"tr\");\n      i0.ɵɵelementStart(3, \"th\");\n      i0.ɵɵtext(4, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\");\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Surname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Faculty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"tbody\");\n      i0.ɵɵtemplate(12, ShowStudentsComponent_tr_12_Template, 9, 4, \"tr\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.StudentList.result_set);\n    }\n  },\n  directives: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaG93LXN0dWRlbnRzLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["C:\\Hierarchy\\Hierarchy PL\\hierarchy\\src\\app\\students\\show-students\\show-students.component.ts","C:\\Hierarchy\\Hierarchy PL\\hierarchy\\src\\app\\students\\show-students\\show-students.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { StudentsResult } from 'models/students-result.model';\nimport { SharedService } from 'src/app/shared.service';\nimport { FacultyResult } from 'models/faculty-result.model';\nimport { Faculty } from 'models/faculty.model';\n\n@Component({\n  selector: 'app-show-students',\n  templateUrl: './show-students.component.html',\n  styleUrls: ['./show-students.component.css']\n})\nexport class ShowStudentsComponent implements OnInit {\n\n  constructor(private service:SharedService) { }\n\n  StudentList:StudentsResult= new StudentsResult();\n  facultyNames: Faculty[] =[];\n  ngOnInit(): void {\n    this.refreshStudentList();\n    \n  }\n  async facultyName(val:number){\n    await this.service.getFacultyName(val).then((data) =>{\n      if(data.success){\n      this.facultyNames[0] = data.result_set[0];\n      return this.facultyNames[0].faculty_name;\n      }else{\n        return alert(data.userMessage);\n      }\n    });\n\n  }\n  async refreshStudentList(){\n \n    this.StudentList.result_set = [];\n    \n    await this.service.getStudentList().then((data) => {\n      \n      if (data.success) {\n       this.StudentList=data;\n      } else {\n        alert(data.userMessage);\n      }\n  });\n}\n}\n\n","<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Surname</th>\n            <th>Faculty</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let student of StudentList.result_set\">\n            <td>{{student.student_id}}</td>\n            <td>{{student.student_name}}</td>\n            <td>{{student.student_surname}}</td>\n            <td >{{facultyName(student.faculty_id)}}</td>\n           \n        </tr>\n    </tbody>\n\n</table>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}