{"ast":null,"code":"import _asyncToGenerator from \"C:/Hierarchy/Hierarchy PL/hierarchy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { StudentsResult } from 'models/students-result.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction ShowStudentsComponent_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelementStart(8, \"button\", 2);\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const student_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r1.Name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(student_r1.surname);\n  }\n}\n\nexport class ShowStudentsComponent {\n  constructor(service) {\n    this.service = service;\n    this.StudentList = new StudentsResult();\n  }\n\n  ngOnInit() {\n    this.refreshStudentList();\n  }\n\n  refreshStudentList() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.StudentList.result_set = [];\n      yield _this.service.getStudentList().then(data => {\n        if (data.success) {\n          _this.StudentList = data;\n        } else {\n          alert(data.userMessage);\n        }\n      });\n    })();\n  }\n\n}\n\nShowStudentsComponent.ɵfac = function ShowStudentsComponent_Factory(t) {\n  return new (t || ShowStudentsComponent)(i0.ɵɵdirectiveInject(i1.SharedService));\n};\n\nShowStudentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowStudentsComponent,\n  selectors: [[\"app-show-students\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-light\", \"mr-1\"]],\n  template: function ShowStudentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0);\n      i0.ɵɵelementStart(1, \"thead\");\n      i0.ɵɵelementStart(2, \"tr\");\n      i0.ɵɵelementStart(3, \"th\");\n      i0.ɵɵtext(4, \"StudentId\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\");\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Surname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"tbody\");\n      i0.ɵɵtemplate(10, ShowStudentsComponent_tr_10_Template, 10, 3, \"tr\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.StudentList.result_set);\n    }\n  },\n  directives: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaG93LXN0dWRlbnRzLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["C:\\Hierarchy\\Hierarchy PL\\hierarchy\\src\\app\\students\\show-students\\show-students.component.ts","C:\\Hierarchy\\Hierarchy PL\\hierarchy\\src\\app\\students\\show-students\\show-students.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { StudentsResult } from 'models/students-result.model';\nimport { SharedService } from 'src/app/shared.service';\n\n@Component({\n  selector: 'app-show-students',\n  templateUrl: './show-students.component.html',\n  styleUrls: ['./show-students.component.css']\n})\nexport class ShowStudentsComponent implements OnInit {\n\n  constructor(private service:SharedService) { }\n\n  StudentList:StudentsResult= new StudentsResult();\n  ngOnInit(): void {\n    this.refreshStudentList();\n  }\n\n  async refreshStudentList(){\n \n    this.StudentList.result_set = [];\n    \n    await this.service.getStudentList().then((data) => {\n      \n      if (data.success) {\n       this.StudentList=data;\n      } else {\n        alert(data.userMessage);\n      }\n  });\n}\n}\n\n","<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th>StudentId</th>\n            <th>Name</th>\n            <th>Surname</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let student of StudentList.result_set\">\n            <td>{{student.id}}</td>\n            <td>{{student.Name}}</td>\n            <td>{{student.surname}}</td>\n            <td>\n                <button type= \"button\" class=\"btn btn-light mr-1\">Edit</button>\n            </td>\n        </tr>\n    </tbody>\n\n</table>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}