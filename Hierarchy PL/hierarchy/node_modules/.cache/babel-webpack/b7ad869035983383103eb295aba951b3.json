{"ast":null,"code":"import _asyncToGenerator from \"C:/Hierarchy/Hierarchy PL/hierarchy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { StudentsResult } from 'models/students-result.model';\nimport { Students } from 'models/students.model';\nlet ShowStudentsComponent = class ShowStudentsComponent {\n  constructor(service, ModalService) {\n    this.service = service;\n    this.ModalService = ModalService;\n    this.StudentList = new StudentsResult();\n    this.ActivateAddStudentComp = false;\n    this.ActivateEditStudentComp = false;\n    this.student = new Students();\n  }\n\n  ngOnInit() {\n    this.refreshStudentList();\n  }\n\n  refreshStudentList() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.service.getStudentList().then(data => {\n        if (data.success) {\n          _this.StudentList = data;\n        } else {\n          alert(data.userMessage);\n        }\n      });\n    })();\n  }\n\n  show_add() {\n    this.ModalTitle = \"Apply a new student\";\n    this.ActivateAddStudentComp = true;\n  }\n\n  close() {\n    this.ActivateAddStudentComp = false;\n    this.ActivateEditStudentComp = false;\n    this.ModalService.closed.subscribe(() => this.refreshStudentList());\n  }\n\n  show_edit(item) {\n    this.student = item;\n    this.ModalTitle = \"Edit student\";\n    this.ActivateEditStudentComp = true;\n  }\n\n};\nShowStudentsComponent = __decorate([Component({\n  selector: 'app-show-students',\n  templateUrl: './show-students.component.html',\n  styleUrls: ['./show-students.component.css']\n})], ShowStudentsComponent);\nexport { ShowStudentsComponent };","map":{"version":3,"sources":["C:\\Hierarchy\\Hierarchy PL\\hierarchy\\src\\app\\students\\show-students\\show-students.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAA4E,eAA5E;AACA,SAAS,cAAT,QAA+B,8BAA/B;AACA,SAAS,QAAT,QAAyB,uBAAzB;AAaA,IAAa,qBAAqB,GAAlC,MAAa,qBAAb,CAAkC;AAEhC,EAAA,WAAA,CAAoB,OAApB,EAAkD,YAAlD,EAA+E;AAA3D,SAAA,OAAA,GAAA,OAAA;AAA8B,SAAA,YAAA,GAAA,YAAA;AAGlD,SAAA,WAAA,GAA4B,IAAI,cAAJ,EAA5B;AAwBF,SAAA,sBAAA,GAA+B,KAA/B;AACA,SAAA,uBAAA,GAAgC,KAAhC;AACA,SAAA,OAAA,GAAmB,IAAI,QAAJ,EAAnB;AA5BI;;AAGF,EAAA,QAAQ,GAAA;AACN,SAAK,kBAAL;AAED;;AAGI,EAAA,kBAAkB,GAAA;AAAA;;AAAA;AAGzB,YAAM,KAAI,CAAC,OAAL,CAAa,cAAb,GAA8B,IAA9B,CAAoC,IAAD,IAAS;AAE5C,YAAI,IAAI,CAAC,OAAT,EAAkB;AACjB,UAAA,KAAI,CAAC,WAAL,GAAiB,IAAjB;AAGA,SAJD,MAIO;AACL,UAAA,KAAK,CAAC,IAAI,CAAC,WAAN,CAAL;AACD;AACJ,OATG,CAAN;AAHyB;AAgBxB;;AAQD,EAAA,QAAQ,GAAA;AACN,SAAK,UAAL,GAAgB,qBAAhB;AACA,SAAK,sBAAL,GAA4B,IAA5B;AACD;;AACD,EAAA,KAAK,GAAA;AACH,SAAK,sBAAL,GAA4B,KAA5B;AACA,SAAK,uBAAL,GAA+B,KAA/B;AACA,SAAK,YAAL,CAAkB,MAAlB,CAAyB,SAAzB,CAAmC,MAAM,KAAK,kBAAL,EAAzC;AACD;;AACD,EAAA,SAAS,CAAC,IAAD,EAAc;AACrB,SAAK,OAAL,GAAe,IAAf;AACA,SAAK,UAAL,GAAgB,cAAhB;AACA,SAAK,uBAAL,GAA+B,IAA/B;AAGD;;AAnDiC,CAAlC;AAAa,qBAAqB,GAAA,UAAA,CAAA,CALjC,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,mBADD;AAET,EAAA,WAAW,EAAE,gCAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,+BAAD;AAHF,CAAD,CAKwB,CAAA,EAArB,qBAAqB,CAArB;SAAA,qB","sourcesContent":["import { Component, OnInit , Renderer2, RendererFactory2, TemplateRef} from '@angular/core';\nimport { StudentsResult } from 'models/students-result.model';\nimport { Students } from 'models/students.model';\nimport { SharedService } from 'src/app/shared.service';\nimport {BsModalRef} from 'ngx-bootstrap/modal';\nimport { MDBModalService } from 'angular-bootstrap-md';\n\n\n\ndeclare var $: any;\n@Component({\n  selector: 'app-show-students',\n  templateUrl: './show-students.component.html',\n  styleUrls: ['./show-students.component.css']\n})\nexport class ShowStudentsComponent implements OnInit {\n\n  constructor(private service:SharedService, public ModalService: MDBModalService) {\n   }\n\n  StudentList:StudentsResult= new StudentsResult();\n  ngOnInit(): void {\n    this.refreshStudentList();\n    \n  }\n  \n  ModalTitle: string;\n async refreshStudentList(){\n\n    \nawait this.service.getStudentList().then((data) => {\n      \n      if (data.success) {\n       this.StudentList=data;\n       \n    \n      } else {\n        alert(data.userMessage);\n      }\n  });\n  \n  \n  \n}\nActivateAddStudentComp:boolean=false;\nActivateEditStudentComp:Boolean=false;\nstudent:Students = new Students();\nmodalRef:BsModalRef;\n\n\n\nshow_add(){\n  this.ModalTitle=\"Apply a new student\";\n  this.ActivateAddStudentComp=true;\n}\nclose(){\n  this.ActivateAddStudentComp=false;\n  this.ActivateEditStudentComp = false;\n  this.ModalService.closed.subscribe(() => this.refreshStudentList());\n}\nshow_edit(item:Students){\n  this.student = item;\n  this.ModalTitle=\"Edit student\";\n  this.ActivateEditStudentComp = true;\n\n\n}\n}\n\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}