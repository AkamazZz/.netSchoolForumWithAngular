{"ast":null,"code":"import _asyncToGenerator from \"C:/Hierarchy/Hierarchy PL/hierarchy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Students } from 'models/students.model';\nimport { SubjectsResult } from 'models/subjects-result.model';\nimport { FadeInOut } from 'src/app/animations';\nimport { StudentSubject } from 'models/student-subject.model';\nlet ShowSubjectComponent =\n/*function Validate(value:number){\r\n  document.getElementById('subjectInput').addEventListener('change', function (e) {\r\n    if(value < 0){\r\n      value = '';\r\n    } else if (value >100) {\r\n      value = '';\r\n    }\r\n\r\n}*/\nclass ShowSubjectComponent {\n  constructor(service) {\n    this.service = service;\n    this.onCreate = new EventEmitter();\n    this.studentSubject = new Students();\n    this.StudentSubjectList = new SubjectsResult();\n    this.SubjectListToAdd = new SubjectsResult();\n    this.SubjectToAdd = new StudentSubject();\n    this.AssessmentList = [];\n  }\n\n  ngOnInit() {\n    this.onCreate.emit(null);\n    this.RefreshSubjects();\n    this.RefreshSubjectListByStudent();\n    this.RefreshAssessmentList();\n  }\n\n  UpdateGrade(grade) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (grade != null) {\n        yield _this.service.UpdateGrade(grade).then(data => {\n          if (data.result_set) {\n            alert('The grade has been changed');\n          } else {\n            alert('Something went wrong');\n          }\n        });\n      } else {\n        alert(\"You didn't provide data\");\n      }\n    })();\n  }\n\n  RefreshAssessmentList() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.service.GetGradeByStudent(_this2.studentSubject.student_id).then(data => {\n        if (data.success) {\n          _this2.AssessmentList = data.result_set;\n        }\n      }).catch(error => {\n        alert(error.error.userMessage + 'Student does not have assessments');\n      });\n    })();\n  }\n\n  RefreshSubjectListByStudent() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.service.GetSubjectByStudent(_this3.studentSubject.student_id).then(data => {\n        if (data.success) {\n          _this3.StudentSubjectList = data;\n\n          if (data.result_set.length == 0) {}\n        } else {\n          alert(data.userMessage);\n        }\n      });\n    })();\n  }\n\n  deleteSubjectOfStudent(student_id, subject_id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (confirm('Are you sure?')) {\n        let result = new SubjectsResult();\n        yield _this4.service.DeleteSubjectOfStudent(student_id, subject_id).then(data => {\n          result.success = data.success;\n          result.userMessage = data.userMessage;\n\n          if (result.success) {\n            alert('You have successfully deleted subject');\n\n            _this4.RefreshSubjectListByStudent();\n          }\n        }).catch(error => {\n          alert(error.error.userMessage + 'Student does not have this subject');\n        });\n      }\n    })();\n  }\n\n  createGrade(grade) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this5.service.CreateGrade(grade).then(data => {\n        if (data.success) {\n          alert('grade has been created as ');\n\n          _this5.RefreshAssessmentList();\n        }\n\n        alert('grade had been created before ');\n      }).catch(error => {\n        alert(error.error.userMessage + 'There is no such subject or grade');\n      });\n    })();\n  }\n\n  RefreshSubjects() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this6.service.GetSubjects().then(data => {\n        if (data.success) {\n          _this6.SubjectListToAdd = data;\n        }\n      }).catch(error => {\n        alert(error.error.userMessage + 'There is no such subject or grade');\n      });\n    })();\n  }\n\n  ngAfterViewInit() {\n    this.RefreshSubjectListByStudent();\n  }\n\n  AddSubjectTOStudent(add) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      add.student_id = _this7.studentSubject.student_id;\n      yield _this7.service.AddSubjectToStudent(add).then(data => {\n        if (data.success && data.result_set != null) {\n          alert('The subject has been added');\n\n          _this7.RefreshAssessmentList();\n\n          _this7.RefreshSubjectListByStudent();\n        } else {\n          alert('grade had been created before ');\n        }\n      }).catch(error => {\n        alert(error.error.userMessage);\n      });\n    })();\n  }\n\n};\n\n__decorate([Output()], ShowSubjectComponent.prototype, \"onCreate\", void 0);\n\n__decorate([Input()], ShowSubjectComponent.prototype, \"studentSubject\", void 0);\n\n__decorate([Input()], ShowSubjectComponent.prototype, \"ActivateShowSubjectComp\", void 0);\n\nShowSubjectComponent = __decorate([Component({\n  selector: 'app-show-subject',\n  templateUrl: './show-subject.component.html',\n  styleUrls: ['./show-subject.component.css'],\n  animations: [FadeInOut]\n})\n/*function Validate(value:number){\r\n  document.getElementById('subjectInput').addEventListener('change', function (e) {\r\n    if(value < 0){\r\n      value = '';\r\n    } else if (value >100) {\r\n      value = '';\r\n    }\r\n\r\n}*/\n], ShowSubjectComponent);\nexport { ShowSubjectComponent };","map":{"version":3,"sources":["C:\\Hierarchy\\Hierarchy PL\\hierarchy\\src\\app\\subject\\show-subject\\show-subject.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Directive, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Students } from 'models/students.model';\nimport { SubjectsResult } from 'models/subjects-result.model';\nimport { SharedService } from 'src/app/shared.service';\nimport { FadeInOut } from 'src/app/animations';\nimport { Assessment } from 'models/assessment.model';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Subject } from 'models/subject.model';\nimport { StudentSubject } from 'models/student-subject.model';\nimport { ThisReceiver } from '@angular/compiler';\n\n@Component({\n  selector: 'app-show-subject',\n  templateUrl: './show-subject.component.html',\n  styleUrls: ['./show-subject.component.css'],\n  animations: [\n    FadeInOut,\n  ]\n})\n/*function Validate(value:number){\n  document.getElementById('subjectInput').addEventListener('change', function (e) {\n    if(value < 0){\n      value = '';\n    } else if (value >100) {\n      value = '';\n    }\n\n}*/\nexport class ShowSubjectComponent implements OnInit {\n  @Output() onCreate: EventEmitter<any> = new EventEmitter<any>();\n  @Input() studentSubject: Students = new Students();\n  @Input() ActivateShowSubjectComp: boolean;\n  StudentSubjectList: SubjectsResult = new SubjectsResult();\n  SubjectListToAdd: SubjectsResult = new SubjectsResult();\n  SubjectToAdd:StudentSubject = new StudentSubject();\n  constructor(private service: SharedService) { }\n\n  ngOnInit(): void {\n    this.onCreate.emit(null); \n    this.RefreshSubjects();\n    this.RefreshSubjectListByStudent();\n    this.RefreshAssessmentList();\n  }\n  AssessmentList: Assessment[]=[];\nasync UpdateGrade(grade:Assessment){\n  if(grade!=null){\n  await this.service.UpdateGrade(grade).then((data)=>{\n  if(data.result_set){\n    alert('The grade has been changed')\n  }else{\n    alert('Something went wrong')\n  }\n})\n  }else{\n    alert(\"You didn't provide data\");\n  }\n\n}\n  async RefreshAssessmentList(){\n    await this.service.GetGradeByStudent(this.studentSubject.student_id).then((data)=>{\n      if(data.success){\n        this.AssessmentList = data.result_set;\n      }\n      \n    })\n    .catch((error) => {\n      alert(\n        error.error.userMessage +\n          'Student does not have assessments'\n      );\n    });\n  }\n  async RefreshSubjectListByStudent(){\n     await this.service.GetSubjectByStudent(this.studentSubject.student_id).then((data)=> {\n      \n        if (data.success) {\n         this.StudentSubjectList = data;\n        if(data.result_set.length == 0){\n\n        }\n    \n        } else {\n          alert(data.userMessage);\n        }\n      })\n  }\n async deleteSubjectOfStudent(student_id: number, subject_id:number){\n    if(confirm('Are you sure?')){\n      let result = new SubjectsResult();\n    await this.service\n      .DeleteSubjectOfStudent(student_id, subject_id)\n      .then((data) => {\n        result.success = data.success;\n        result.userMessage = data.userMessage;\n        if (result.success) {\n          alert('You have successfully deleted subject');\n          this.RefreshSubjectListByStudent();\n        } \n       \n      })\n      .catch((error) => {\n        alert(\n          error.error.userMessage +\n            'Student does not have this subject'\n        );\n      });\n    }\n  }\n  \n  async createGrade(grade:Assessment){\n    await this.service.CreateGrade(grade).then((data)=>{\n      if(data.success){\n        alert('grade has been created as ');\n        this.RefreshAssessmentList();\n\n      }\n      alert('grade had been created before ');\n    })\n    .catch((error) => {\n      alert(\n        error.error.userMessage +\n          'There is no such subject or grade'\n      );\n    })\n  }\n  async RefreshSubjects(){\n    await this.service.GetSubjects().then((data)=> {\n      if(data.success){\n        this.SubjectListToAdd = data;\n      }\n    })\n    .catch((error) => {\n      alert(\n        error.error.userMessage +\n          'There is no such subject or grade'\n      );\n    })\n  \n  }\n  ngAfterViewInit() {\n  this.RefreshSubjectListByStudent() }\n  async AddSubjectTOStudent(add:StudentSubject){\n    add.student_id =this.studentSubject.student_id;\n    await this.service.AddSubjectToStudent(add).then((data)=>{\n      if(data.success && data.result_set != null){\n        alert('The subject has been added');\n        this.RefreshAssessmentList();\n        this.RefreshSubjectListByStudent();\n      }else{\n      alert('grade had been created before ');\n      }\n    })\n    .catch((error) => {\n      alert(\n        error.error.userMessage \n      );\n    })\n  }\n}\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}