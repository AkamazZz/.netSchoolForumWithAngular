{"ast":null,"code":"import _asyncToGenerator from \"C:/Hierarchy/Hierarchy PL/hierarchy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { StudentsResult } from 'models/students-result.model';\nimport { Faculty } from 'models/faculty.model';\nlet ShowStudentsComponent = class ShowStudentsComponent {\n  constructor(service) {\n    this.service = service;\n    this.StudentList = new StudentsResult();\n    this.facultyNames = new Faculty();\n  }\n\n  ngOnInit() {\n    this.refreshStudentList();\n  }\n\n  facultyName(val) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.service.getFacultyName(val).subscribe(data => {\n        _this.facultyNames = data;\n        let names;\n        names = _this.facultyNames.faculty_name;\n        return names;\n      });\n    })();\n  }\n\n  refreshStudentList() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.StudentList.result_set = [];\n      yield _this2.service.getStudentList().then(data => {\n        if (data.success) {\n          _this2.StudentList = data;\n\n          for (let i = 0; i < data.result_set.length; i++) {\n            let id = data.result_set[i].faculty_id;\n\n            let name = _this2.facultyName(id);\n\n            data.result_set[i].faculty_name = name;\n          }\n        } else {\n          alert(data.userMessage);\n        }\n      });\n    })();\n  }\n\n};\nShowStudentsComponent = __decorate([Component({\n  selector: 'app-show-students',\n  templateUrl: './show-students.component.html',\n  styleUrls: ['./show-students.component.css']\n})], ShowStudentsComponent);\nexport { ShowStudentsComponent };","map":{"version":3,"sources":["C:\\Hierarchy\\Hierarchy PL\\hierarchy\\src\\app\\students\\show-students\\show-students.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAAkC,eAAlC;AACA,SAAS,cAAT,QAA+B,8BAA/B;AAGA,SAAS,OAAT,QAAwB,sBAAxB;AAQA,IAAa,qBAAqB,GAAlC,MAAa,qBAAb,CAAkC;AAEhC,EAAA,WAAA,CAAoB,OAApB,EAAyC;AAArB,SAAA,OAAA,GAAA,OAAA;AAEpB,SAAA,WAAA,GAA4B,IAAI,cAAJ,EAA5B;AACA,SAAA,YAAA,GAAwB,IAAI,OAAJ,EAAxB;AAH8C;;AAI9C,EAAA,QAAQ,GAAA;AACN,SAAK,kBAAL;AAED;;AAEY,EAAA,WAAW,CAAC,GAAD,EAAW;AAAA;;AAAA;AAEjC,YAAM,KAAI,CAAC,OAAL,CAAa,cAAb,CAA4B,GAA5B,EAAiC,SAAjC,CAA4C,IAAD,IAAS;AACxD,QAAA,KAAI,CAAC,YAAL,GAAoB,IAApB;AACA,YAAI,KAAJ;AACA,QAAA,KAAK,GAAG,KAAI,CAAC,YAAL,CAAkB,YAA1B;AACA,eAAO,KAAP;AAED,OANK,CAAN;AAFiC;AAUlC;;AACK,EAAA,kBAAkB,GAAA;AAAA;;AAAA;AAEtB,MAAA,MAAI,CAAC,WAAL,CAAiB,UAAjB,GAA8B,EAA9B;AAEA,YAAM,MAAI,CAAC,OAAL,CAAa,cAAb,GAA8B,IAA9B,CAAoC,IAAD,IAAS;AAEhD,YAAI,IAAI,CAAC,OAAT,EAAkB;AACjB,UAAA,MAAI,CAAC,WAAL,GAAiB,IAAjB;;AAEC,eAAI,IAAI,CAAC,GAAC,CAAV,EAAa,CAAC,GAAC,IAAI,CAAC,UAAL,CAAgB,MAA/B,EAAsC,CAAC,EAAvC,EAA0C;AACxC,gBAAI,EAAE,GAAG,IAAI,CAAC,UAAL,CAAgB,CAAhB,EAAmB,UAA5B;;AACA,gBAAI,IAAI,GAAG,MAAI,CAAC,WAAL,CAAiB,EAAjB,CAAX;;AACA,YAAA,IAAI,CAAC,UAAL,CAAgB,CAAhB,EAAmB,YAAnB,GAAkC,IAAlC;AACD;AACF,SARD,MAQO;AACL,UAAA,KAAK,CAAC,IAAI,CAAC,WAAN,CAAL;AACD;AACJ,OAbO,CAAN;AAJsB;AAkBzB;;AAxCiC,CAAlC;AAAa,qBAAqB,GAAA,UAAA,CAAA,CALjC,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,mBADD;AAET,EAAA,WAAW,EAAE,gCAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,+BAAD;AAHF,CAAD,CAKwB,CAAA,EAArB,qBAAqB,CAArB;SAAA,qB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { StudentsResult } from 'models/students-result.model';\nimport { SharedService } from 'src/app/shared.service';\nimport { FacultyResult } from 'models/faculty-result.model';\nimport { Faculty } from 'models/faculty.model';\nimport { stringify } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-show-students',\n  templateUrl: './show-students.component.html',\n  styleUrls: ['./show-students.component.css']\n})\nexport class ShowStudentsComponent implements OnInit {\n\n  constructor(private service:SharedService) { }\n\n  StudentList:StudentsResult= new StudentsResult();\n  facultyNames: Faculty = new Faculty();\n  ngOnInit(): void {\n    this.refreshStudentList();\n    \n  }\n  \n  public async facultyName(val:number){\n    \n    await this.service.getFacultyName(val).subscribe((data) =>{\n      this.facultyNames = data;\n      let names: string;\n      names = this.facultyNames.faculty_name;\n      return names;\n      \n    });\n\n  }\n  async refreshStudentList(){\n \n    this.StudentList.result_set = [];\n    \n    await this.service.getStudentList().then((data) => {\n      \n      if (data.success) {\n       this.StudentList=data;\n       \n        for(let i=0; i<data.result_set.length;i++){\n          let id = data.result_set[i].faculty_id;\n          let name = this.facultyName(id);\n          data.result_set[i].faculty_name = name ;\n        }\n      } else {\n        alert(data.userMessage);\n      }\n  });\n}\n}\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}