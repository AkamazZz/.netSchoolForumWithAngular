{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://dynamic-mat-table/lib/cores/type.ts","ng://dynamic-mat-table/lib/utilies/text.utils.ts","ng://dynamic-mat-table/lib/cores/table-data-source.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/dynamic-mat-table.service.ts","ng://dynamic-mat-table/lib/cores/table.core.directive.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/filter/compare/abstract-filter.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/filter/compare/text-filter.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/filter/compare/number-filter.ts","ng://dynamic-mat-table/lib/international/table-Intl.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/filter/header-filter.component.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/print-dialog/print-dialog.component.ts","ng://dynamic-mat-table/lib/models/resize-column.mode.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/dynamic-mat-table.component.ts","ng://dynamic-mat-table/lib/utilies/html.helper.ts","ng://dynamic-mat-table/lib/cores/dynamic-cell/dynamic-cell.directive.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/row-menu/row-menu.component.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/row-menu/row-menu.module.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/table-menu/table-menu.component.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/table-menu/table-menu.module.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/filter/filter-event.directive.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/filter/header-filter.module.ts","ng://dynamic-mat-table/lib/cores/fixed-size-table-virtual-scroll-strategy.ts","ng://dynamic-mat-table/lib/cores/table-item-size.directive.ts","ng://dynamic-mat-table/lib/cores/table-virtual-scroll.module.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/extensions/toolbar/toolbar.component.ts","ng://dynamic-mat-table/lib/dynamic-mat-table/dynamic-mat-table.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","r","e","ar","push","error","isNullorUndefined","clone","obj","isArray","array_1","forEach","item","deepClone","array_2","c_1","getOwnPropertyNames","f","field","getObjectProp","fieldName","defaultValue","variable","_i","v","titleCase","sentence","toLowerCase","split","toUpperCase","slice","join","TableVirtualScrollDataSource","_this","_super","filterMap","defineProperty","data","toTranslate","tranList","keys","keys_1","keys_1_1","k","fieldTotalTran","_c","e_2","_d","toPrint","key","getFilter","setFilter","filters","Observable","subscriber","setTimeout","refreshFilterPredicate","complete","clearFilter","clearData","conditionsString","fieldCondition","fieldFilter","row","array","toString","type","filterFunction_1","Function","filterPredicate","filter","pagingData","_paginator","end","pageIndex","pageSize","start","_updateChangeSubscription","initStreams","sort","_sort","paginator","internalPageChanges","_internalPageChanges","_filter","renderData","_renderData","dataStream","_data","sortChange","merge","initialized","of","pageChange","page","filteredData","combineLatest","pipe","map","_a","_filterData","orderedData","_orderData","paginatedData","_renderChangesSubscription","unsubscribe","Subscription","add","subscribe","dataToRender$","dataOfRange$","streamsReady","ReplaySubject","MatTableDataSource","TableService","getFormattedTime","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","downloadBlob","blob","filename","navigator","msSaveBlob","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","exportToCsv","columns","rows","selectionModel","tableName","fields","c","exportable","display","csvContent","name","header","cell","toExport","toLocaleString","replace","search","Blob","Uint8Array","exportToJson","JSON","stringify","loadSavedColumnInfo","columnInfo","saveName","localStorage","loadedInfo","getItem","parse","saveColumnInfo","setItem","Injectable","args","providedIn","TableCoreDirective","tableService","cdr","backgroundColor","contextMenuItems","expandColumn","defaultWidth","minWidth","printConfig","rowHeight","headerHeight","footerHeight","headerEnable","footerEnable","onTableEvent","EventEmitter","onRowEvent","settingChange","paginationChange","progressColumn","displayedColumns","tvsDataSource","_rowSelectionModel","SelectionModel","_tablePagination","tablePagingMode","viewportClass","showProgress","tableSetting","direction","columnSetting","visibaleActionMenu","scrollStrategy","viewport","scrollStrategyMode","updatePagination","pageSizeOptions","_rowSelectionMode","isMultipleSelection","selection","shift","saveSetting","unshift","initSystemField","index","id","option","_expandComponent","tableColumns","settingFields","settingField","printable","enableContextMenu","sticky","width","updateColumn","refreshTableSetting","setDisplayedColumns","dataLen","clear","scrollTo","top","behavior","expandedElement","detectChanges","colunm","indexOf","visibleTableMenu","refreshGrid","table","renderRows","moveRow","from","to","moveItemInArray","moveColumn","refreshColumn","currentOffset_1","measureScrollOffset","raiseEvent","emit","isAllSelected","selected","masterToggle","select","event","sender","onRowSelectionChange","toggle","Directive","selector","ChangeDetectorRef","ViewChild","MatSort","static","MatPaginator","Input","HostBinding","Output","MatTable","CdkVirtualScrollViewport","AbstractFilter","hasValue","parameters","operations","TextFilter","languagePack","_selectedIndex","operationList","fn","predicate","text","filterLabels","TextContains","TextEquals","TextStartsWith","TextEndsWith","TextEmpty","TextNotEmpty","Text","getOperations","dynamicVariable","a","statement","selectedValue","toSql","sql","NumberFilter","NumberEquals","NumberNotEquals","NumberGreaterThan","NumberLessThan","NumberEmpty","NumberNotEmpty","Number","TableIntl","menuLabels","saveData","fullScreen","saveTableSetting","jsonFile","csvFile","printTable","filterMode","filterLocalMode","filterServerMode","sortMode","sortLocalMode","sortServerMode","printMode","printYesMode","printNoMode","pinMode","pinNoneMode","pinStartMode","pinEndMode","thereIsNoColumn","paginatorLabels","changes","Subject","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","getRangeLabel","startIndex","Math","max","min","tableLabels","NoData","Clear","Search","And","Or","CategoryContains","CategoryNotContains","listAnimation","trigger","transition","query","opacity","stagger","animate","optional","HeaderFilterComponent","service","filterChanged","filterList","addNewFilter","values","menu","menuOpen","ngOnDestroy","eventsSubscription","ngOnInit","selectedIndex","ngAfterViewInit","menuOpened","focusToLastInput","filterInputList","last","focus","filterAction_OnClick","action","splice","clearColumn_OnClick","applyFilter_OnClick","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","animations","ContentChildren","MatMenuTrigger","PrintTableDialogComponent","dialogRef","print","printDoc","printContentRef","nativeElement","innerHTML","popupWinindow","window","open","write","close","MatDialogRef","Inject","MAT_DIALOG_DATA","ResizeColumn","resizeHandler","widthUpdate","tableAnimation","transform","expandAnimation","state","height","minHeight","cellTooltipDefaults","showDelay","hideDelay","touchendHideDelay","position","DynamicMatTableComponent","dialog","renderer","overlayContainer","contextMenuPosition","x","y","dragDropData","dragColumnIndex","dropColumnIndex","printing","printTemplate","resizeColumn","indexTrackFn","currentContextMenuSender","getContainerElement","addEventListener","preventDefault","delay","w","alternativeRowStyle","normalRowStyle","trackColumn","refreshUI","checkViewportSize","_b","scrollToOffset","offsetChange","offset","renderedRangeStream","expand","dataSource","pagination","ellipsis","cellRef","clientHeight","maxHeight","rowStyle","setting","cellClass","column","clas","cellStyle","cellIcon","cellName","icon","filter_onChanged","pending","onContextMenu","time","getTime","contextMenu","closeMenu","clientX","clientY","menuData","focusFirstItem","openMenu","onContextMenuItemClick","tableMenuActionChange","element","tbl","elementRef","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","rowSelectionModel","headerFilterList","hf","displayedFields","title","params","tablePrintParameters","rowMenuActionChange","contextMenuItem","console","log","doRendering","getViewportSize","pagination_onChange","reload_onClick","onResizeColumn","startX","pageX","startWidth","target","parentElement","clientWidth","currentResizeIndex","previousElementSibling","mouseMove","resizableMousemove","listen","buttons","rtl","dx","resizableMouseup","expandRow","rowIndex","mode","allData","onRowSelection","rowSelectionMode","rowSelectionable","onCellClick","clickable","onRowDblClick","onRowClick","dragStarted","dropListDropped","currentIndex","previousIndex","drop","container","copyProperty","providers","provide","MAT_TOOLTIP_DEFAULT_OPTIONS","useValue","MatDialog","Renderer2","OverlayContainer","DynamicCellDirective","compiler","cfr","vc","parent","componentRef","ngOnChanges","initComponent","currentValue","instance","destroy","componentFactory","resolveComponentFactory","component","createComponent","updateInput","Compiler","ComponentFactoryResolver","ViewContainerRef","RowMenuComponent","rowActionChange","actionMenus","visibleActionMenus","menuOnClick","stopPropagation","am","rowActionMenu","visible","disabled","color","menuButton_OnClick","components","RowMenuModule","NgModule","declarations","exports","imports","CommonModule","FormsModule","MatButtonModule","MatIconModule","MatMenuModule","TableMenuComponent","menuActionChange","currentColumn","reverseDirection","currentTableSetting","originalTableSetting","screenMode_OnClick","columnMenuDropped","columnIndex","toggleSelectedColumn","colFound","find","col","apply_OnClick","setting_onClick","cancel_OnClick","isVisible","saveSetting_OnClick","clearFilter_OnClick","download_OnClick","print_OnClick","_overlayRef","_host","TableMenuModule","MatCheckboxModule","DragDropModule","MatRadioModule","FilterEventDirective","onClick","HostListener","HeaderFilterModule","MatFormFieldModule","MatInputModule","MatSelectModule","ReactiveFormsModule","FixedSizeTableVirtualScrollStrategy","indexChange","stickyChange","BehaviorSubject","scrolledIndexChange","distinctUntilChanged","onDataLengthChanged","attach","detach","onContentScrolled","updateContent","setTotalContentSize","dataLength","onContentRendered","onRenderedOffsetChanged","scrollToIndex","setConfig","configs","bufferMultiplier","getRenderedRange","scrollOffset","amount","ceil","buffer","skip","round","renderedOffset","setRenderedContentOffset","setRenderedRange","_tableVirtualScrollDirectiveStrategyFactory","tableDir","defaults","TableItemSizeDirective","zone","alive","headerEnabled","footerEnabled","dataSourceChanges","isAlive","isStickyEnabled","def","reduce","prevState","ngAfterContentInit","switchDataSourceOrigin","_switchDataSource","connectDataSource","tap","stickyPositions","initStickyPositions","takeWhile","stickyOffset","setSticky","Error","takeUntil","switchMap","run","config","querySelectorAll","el","baseOffset","has","get","bottom","Map","set","offsetTop","VIRTUAL_SCROLL_STRATEGY","useFactory","deps","forwardRef","NgZone","ContentChild","TableVirtualScrollModule","ToolbarComponent","_el","itemList","actionClick","normalItemList","floatItemList","onKeyup","float","item_onClick","ElementRef","createCompiler","compilerFactory","tableIntl","paginatorIntl","MatPaginatorIntl","ExtentionsModule","DynamicMatTableModule","MatTableModule","ScrollingModule","MatSortModule","MatProgressBarModule","MatPaginatorModule","MatDialogModule","MatDividerModule","MatTooltipModule","MatRippleModule","COMPILER_OPTIONS","ɵ0","multi","CompilerFactory","useClass","JitCompilerFactory","entryComponents","forced","nullSkip","undefinedSkip","fi","includes","char"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\r\n// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\r\n\r\n// |||||||||||||||||||||||||||||||||||||| Utils ||||||||||||||||||||||||||||||||||||||||||||||||||\r\n/**\r\n * check object is null or undefined\r\n */\r\nexport function isNullorUndefined(value: any): boolean {\r\n    if ( value === null || value === undefined) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n/**\r\n * clone object but refrence variable not change\r\n */\r\nexport function clone<T>(obj: any): any {\r\n    if ( obj === null || obj === undefined) {\r\n      return obj;\r\n    } else if ( Array.isArray(obj)) {\r\n      const array: T[] = [];\r\n      obj.forEach( item => array.push( Object.assign({}, item)));\r\n      return array;\r\n    } else {\r\n      return Object.assign({}, obj);\r\n    }\r\n  }\r\n\r\n/**\r\n * clone object and all refrence variable but may be there is a circle loop.\r\n */\r\nexport function deepClone<T>(obj: any) {\r\n    if ( obj === null || obj === undefined) {\r\n      return obj;\r\n    } else if ( Array.isArray(obj)) {\r\n      const array: T[] = [];\r\n      obj.forEach( item => array.push( deepClone<typeof item>(item) ));\r\n      return array as T[];\r\n    } else {\r\n      const c = Object.assign({} as T, obj);\r\n      const fields: string[] = Object.getOwnPropertyNames(obj);\r\n      fields.forEach( f => {\r\n        const field = obj[f];\r\n        if ( field !== null && typeof field === 'object' ) {\r\n          c[f] = deepClone<typeof field>(field);\r\n        }\r\n      });\r\n      return c;\r\n    }\r\n}\r\n\r\nexport function getObjectProp(fieldName: string, defaultValue: any, ...variable: any[]) {\r\n    for (const v in variable) {\r\n      if (variable[v] && !isNullorUndefined(variable[v][fieldName])) {\r\n        return variable[v][fieldName];\r\n      }\r\n    }\r\n    return defaultValue;\r\n}\r\n\r\nexport function copy(from: any, to: any, forced: boolean = false, nullSkip: boolean = true, undefinedSkip: boolean = true) {\r\n    if (from === null || from === undefined) {\r\n        return;\r\n    }\r\n    if (to === null || to === undefined) {\r\n        to = {};\r\n    }\r\n    const f: string[] = Object.keys(from);\r\n    const t: string[] = Object.keys(to);\r\n    f.forEach( fi => {\r\n        if (forced === true || t.includes(fi) === true) {\r\n            if (!(from[fi] === null && nullSkip === true) && !(from[fi] === undefined && undefinedSkip === true)) {\r\n                to[fi] = from[fi];\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\r\n\r\n// |||||||||||||||||||||||||||||||||||| Text Utils |||||||||||||||||||||||||||||||||||||||||||||||\r\n/**\r\n * Transforms a camelCase string into a readable text format\r\n * @example textify('helloWorld!')\r\n * // Hello world!\r\n */\r\nexport function textify(text: string) {\r\n    return text\r\n      .replace(/([A-Z])/g, char => ` ${char.toLowerCase()}`)\r\n      .replace(/^([a-z])/, char => char.toUpperCase());\r\n}\r\n\r\n  /**\r\n   * Transforms a text string into a title case text format\r\n   * @example titleCase('hello world!')\r\n   * // Hello Workd!\r\n   */\r\nexport function titleCase(value: string) {\r\n    const sentence = value.toLowerCase().split(' ');\r\n    for (let i = 0; i < sentence.length; i++) {\r\n       sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\r\n    }\r\n    return sentence.join(' ');\r\n}\r\n\r\n\r\nexport interface Dictionary<T> {\r\n  [Key: string]: T;\r\n}","/**\r\n * Simplifies a string (trims and lowerCases)\r\n */\r\nexport function simplify(s: string): string {\r\n  return `${s}`.trim().toLowerCase();\r\n}\r\n\r\n/**\r\n * Transforms a camelCase string into a readable text format\r\n * @example textify('helloWorld!')\r\n * // Hello world!\r\n */\r\nexport function textify(text: string) {\r\n  return text\r\n    .replace(/([A-Z])/g, char => ` ${char.toLowerCase()}`)\r\n    .replace(/^([a-z])/, char => char.toUpperCase());\r\n}\r\n\r\n/**\r\n * Transforms a text string into a title case text format\r\n * @example titleCase('hello world!')\r\n * // Hello Workd!\r\n */\r\nexport function titleCase(value: string) {\r\n  const sentence = value.toLowerCase().split(' ');\r\n  for (let i = 0; i < sentence.length; i++) {\r\n     sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);\r\n  }\r\n  return sentence.join(' ');\r\n}\r\n","import { BehaviorSubject, combineLatest, merge, Observable, of, ReplaySubject, Subject, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { AbstractFilter } from '../dynamic-mat-table/extensions/filter/compare/abstract-filter';\r\nimport { titleCase } from '../utilies/text.utils';\r\n\r\nexport  class TableVirtualScrollDataSource<T> extends MatTableDataSource<T> {\r\n  public dataToRender$: Subject<T[]>;\r\n  public dataOfRange$: Subject<T[]>;\r\n  private streamsReady: boolean;\r\n  private filterMap: HashMap<AbstractFilter[]> = {};\r\n\r\n  get allData(): T[] {\r\n    return this.data;\r\n  }\r\n\r\n  toTranslate(): any[] {\r\n    const tranList = [];\r\n    const keys: string[] = Object.keys( this.filterMap );\r\n    for ( const k of keys) {\r\n      let fieldTotalTran = '';\r\n      for ( const f of this.filterMap[k]) {\r\n        fieldTotalTran += f.toPrint();\r\n      }\r\n      if ( fieldTotalTran !== '') {\r\n        tranList.push( { key: titleCase(k) , value: fieldTotalTran} );\r\n      }\r\n    }\r\n    return tranList;\r\n  }\r\n\r\n  getFilter(fieldName: string): AbstractFilter[] {\r\n    return this.filterMap[fieldName];\r\n  }\r\n\r\n  setFilter(fieldName: string, filters: AbstractFilter[]): Observable<null> {\r\n    this.filterMap[fieldName] = filters;\r\n    return new Observable(subscriber => {\r\n      setTimeout(() => {\r\n        this.refreshFilterPredicate();\r\n        subscriber.next();\r\n        subscriber.complete();\r\n      }, 200); // for show progress\r\n    });\r\n  }\r\n\r\n  clearFilter(fieldName: string = null) {\r\n    if (fieldName != null ) {\r\n      delete this.filterMap[fieldName];\r\n    } else {\r\n      this.filterMap = {};\r\n    }\r\n    this.refreshFilterPredicate();\r\n  }\r\n\r\n  clearData() {\r\n    this.data = [];\r\n  }\r\n\r\n  public refreshFilterPredicate() {\r\n    let conditionsString = '';\r\n    Object.keys(this.filterMap).forEach(key => {\r\n      let fieldCondition = '';\r\n      this.filterMap[key].forEach((fieldFilter, row, array) => {\r\n        if (row < array.length - 1) {\r\n          fieldCondition += fieldFilter.toString(key) + (fieldFilter.type === 'and' ? ' && ' : ' || ');\r\n        } else {\r\n          fieldCondition += fieldFilter.toString(key);\r\n        }\r\n      });\r\n      if (fieldCondition !== '') {\r\n        conditionsString += ` ${conditionsString === '' ? '' : ' && '} ( ${fieldCondition} )`;\r\n      }\r\n    });\r\n    if (conditionsString !== '') {\r\n      const filterFunction = new Function('_a$', 'return ' + conditionsString);\r\n      this.filterPredicate = (data: T, filter: string) => filterFunction(data) as boolean;\r\n    } else {\r\n      this.filterPredicate = (data: T, filter: string) => true;\r\n    }\r\n    this.filter = conditionsString;        \r\n  }\r\n\r\n  // When client paging active use for reterive paging data\r\n  pagingData(data) {\r\n    const p: MatPaginator = (this as any)._paginator;\r\n    if ( p && p !== null) {\r\n      const end = (p.pageIndex + 1) * p.pageSize;\r\n      const start = p.pageIndex * p.pageSize;\r\n      return data.slice(start, end);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  _updateChangeSubscription() {\r\n    this.initStreams();\r\n    const sort: MatSort | null = (this as any)._sort;\r\n    const paginator: MatPaginator | null = (this as any)._paginator;\r\n    const internalPageChanges: Subject<void> = (this as any)._internalPageChanges;\r\n    const filter: BehaviorSubject<string> = (this as any)._filter;\r\n    const renderData: BehaviorSubject<T[]> = (this as any)._renderData;\r\n    const dataStream: BehaviorSubject<T[]> = (this as any)._data;\r\n\r\n    const sortChange: Observable<Sort | null | void> = sort ?\r\n      merge(sort.sortChange, sort.initialized) as Observable<Sort | void> : of(null);\r\n    const pageChange: Observable<PageEvent | null | void> = paginator ?\r\n      merge(paginator.page, internalPageChanges, paginator.initialized) as Observable<PageEvent | void> : of(null);\r\n\r\n    // First Filter\r\n    const filteredData = combineLatest([dataStream, filter]).pipe(map(([data]) => this._filterData(data)));\r\n    // Second Order\r\n    const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\r\n    // Last Paging\r\n    const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this.pagingData(data)));\r\n\r\n    this._renderChangesSubscription?.unsubscribe();\r\n    this._renderChangesSubscription = new Subscription();\r\n    this._renderChangesSubscription.add(paginatedData.subscribe(data => this.dataToRender$.next(data)));\r\n    this._renderChangesSubscription.add(this.dataOfRange$.subscribe(data => renderData.next(data)));\r\n  }\r\n\r\n  private initStreams() {\r\n    if (!this.streamsReady) {\r\n      this.dataToRender$ = new ReplaySubject<T[]>(1);\r\n      this.dataOfRange$ = new ReplaySubject<T[]>(1);\r\n      this.streamsReady = true;\r\n    }\r\n  }\r\n}\r\n\r\nexport interface HashMap<T> {\r\n  [key: string]: T;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TableField } from '../models/table-field.model';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TableService {\r\n  public tableName: string;\r\n\r\n  constructor() {}\r\n\r\n  /************************************* Local Export *****************************************/\r\n  static getFormattedTime() {\r\n    const today = new Date();\r\n    const y = today.getFullYear();\r\n    const m = today.getMonth() + 1;\r\n    const d = today.getDate();\r\n    const h = today.getHours();\r\n    const mi = today.getMinutes();\r\n    const s = today.getSeconds();\r\n    return y + \"-\" + m + \"-\" + d + \"-\" + h + \"-\" + mi + \"-\" + s;\r\n  }\r\n\r\n  // private downloadBlob(blob: any, filename: string) {\r\n  //   if (navigator.msSaveBlob) { // IE 10+\r\n  //     navigator.msSaveBlob(blob, filename);\r\n  //   } else {\r\n  //     const link = document.createElement('a');\r\n  //     if (link.download !== undefined) {\r\n  //       // Browsers that support HTML5 download attribute\r\n  //       const link = window.document.createElement('a');\r\n  //       const date = new Date();\r\n  //       link.className = 'download' + date.getUTCFullYear() + date.getUTCMonth() + date.getUTCSeconds();\r\n  //       link.setAttribute('href', blob);\r\n  //       link.setAttribute('download', filename);\r\n  //       link.style.visibility = 'hidden';\r\n  //       link.click();\r\n  //       // setTimeout(() => {\r\n  //       //   const g = document.body.getElementsByClassName(link.className);\r\n  //       //   document.body.removeChild(link);\r\n  //       // });\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  private downloadBlob(blob: Blob | any, filename: string) {\r\n    if (navigator.msSaveBlob) {\r\n      // IE 10+\r\n      navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      if (link.download !== undefined) {\r\n        // Browsers that support HTML5 download attribute\r\n        const url = URL.createObjectURL(blob);\r\n        link.setAttribute(\"href\", url);\r\n        link.setAttribute(\"download\", filename);\r\n        link.style.visibility = \"hidden\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n    }\r\n  }  \r\n\r\n  public exportToCsv<T>( columns: TableField<T>[], rows: object[], selectionModel: SelectionModel<any>, filename: string = \"\") {\r\n    filename = filename === \"\" ? this.tableName + TableService.getFormattedTime() + \".csv\" : filename;\r\n    if (!rows || !rows.length) {\r\n      return;\r\n    }    \r\n    const fields = columns.filter((c) => c.exportable !== false && c.display !== 'hiden');\r\n    const separator = \",\";\r\n    const CR_LF = \"\\n\"; //'\\u0D0A';\r\n    const keys = fields.map( f => f.name);\r\n    const headers = fields.map( f => f.header);\r\n    const csvContent = headers.join(separator) + CR_LF +\r\n      rows\r\n        .map((row) => {\r\n          return fields.map((f) => {              \r\n              let cell = f.toExport(row, \"csv\") || \"\";\r\n              cell = cell instanceof Date ? cell.toLocaleString() : cell.toString().replace(/\"/g, '\"\"');\r\n              if (cell.search(/(\"|,|\\n)/g) >= 0) {\r\n                cell = `\"${cell}\"`;\r\n              }\r\n              return cell;\r\n            }).join(separator);\r\n        }).join(CR_LF);\r\n    \r\n    const blob = new Blob([\r\n      new Uint8Array([0xEF, 0xBB, 0xBF]), /* UTF-8 BOM */\r\n      csvContent], {type : 'text/csv;charset=utf-8'});    \r\n    this.downloadBlob(blob, filename);\r\n  }\r\n\r\n  public exportToJson(rows: object[], filename: string = \"\") {\r\n    filename =\r\n      filename === \"\"\r\n        ? this.tableName + TableService.getFormattedTime() + \".json\"\r\n        : filename;\r\n    const blob = new Blob([JSON.stringify(rows)], {\r\n      type: \"text/csv;charset=utf-8;\",\r\n    });\r\n    this.downloadBlob(blob, filename);\r\n  }\r\n\r\n  /************************************* Save Setting into storage *****************************************/\r\n  public loadSavedColumnInfo(\r\n    columnInfo: TableField<any>[],\r\n    saveName?: string\r\n  ): TableField<any>[] {\r\n    // Only load if a save name is passed in\r\n    if (saveName) {\r\n      if (!localStorage) {\r\n        return;\r\n      }\r\n\r\n      const loadedInfo = localStorage.getItem(`${saveName}-columns`);\r\n\r\n      if (loadedInfo) {\r\n        return JSON.parse(loadedInfo);\r\n      }\r\n      this.saveColumnInfo(columnInfo);\r\n      return columnInfo;\r\n    }\r\n  }\r\n\r\n  public saveColumnInfo(\r\n    columnInfo: TableField<any>[],\r\n    saveName: string = this.tableName\r\n  ): void {\r\n    // console.log(saveName);\r\n    if (saveName) {\r\n      if (!localStorage) {\r\n        return;\r\n      }\r\n\r\n      localStorage.setItem(`${saveName}-columns`, JSON.stringify(columnInfo));\r\n    }\r\n  }\r\n}\r\n","import { IRowEvent, IRowActionMenuEvent, TableRow, TableSelectionMode, ITableEvent } from '../models/table-row.model';\r\nimport { TableVirtualScrollDataSource } from './table-data-source';\r\nimport { ViewChild, Input, Output, EventEmitter, HostBinding, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { TableField } from '../models/table-field.model';\r\nimport { titleCase } from '../utilies/text.utils';\r\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\r\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { TableService } from '../dynamic-mat-table/dynamic-mat-table.service';\r\nimport { TablePagination, TablePaginationMode } from '../models/table-pagination.model';\r\nimport { PrintConfig } from '../models/print-config.model';\r\nimport { TableSetting, Direction } from '../models/table-setting.model';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { Directive } from '@angular/core';\r\nimport { clone, getObjectProp, isNullorUndefined } from './type';\r\nimport { TableScrollStrategy } from './fixed-size-table-virtual-scroll-strategy';\r\nimport { ContextMenuItem } from '../models/context-menu.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[core]'\r\n})\r\nexport class TableCoreDirective<T extends TableRow> {\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator; \r\n  @Input() public dataSource: BehaviorSubject<any[]>;\r\n  @Input() backgroundColor: string = null;\r\n  @Input()\r\n  @HostBinding('style.direction')\r\n  get direction(): Direction {\r\n    return this.tableSetting?.direction;\r\n  }\r\n  set direction(value: Direction) {\r\n    this.tableSetting.direction = value;\r\n  }\r\n\r\n  @Input() contextMenuItems: ContextMenuItem[] = [];\r\n  @Input()\r\n  get ScrollStrategyType() {\r\n    return this.tableSetting.scrollStrategy;\r\n  }\r\n  set ScrollStrategyType(value: TableScrollStrategy) {        \r\n    this.viewport['_scrollStrategy'].scrollStrategyMode = value;\r\n    this.tableSetting.scrollStrategy = value;\r\n  }\r\n\r\n  @Input()\r\n  get pagingMode() {\r\n    return this.tablePagingMode;\r\n  }\r\n  set pagingMode(value: TablePaginationMode) {\r\n    this.tablePagingMode = value;\r\n    this.updatePagination();\r\n  }\r\n\r\n  @Input()\r\n  get pagination() {\r\n    return this._tablePagination;\r\n  }\r\n  set pagination(value: TablePagination) {\r\n    if (value && value !== null) {\r\n      this._tablePagination = value;\r\n      if ( isNullorUndefined(this._tablePagination.pageSizeOptions)) {\r\n        this._tablePagination.pageSizeOptions = [5, 10, 25, 100];\r\n      }\r\n      if ( isNullorUndefined(this._tablePagination.pageSizeOptions)) {\r\n        this._tablePagination.pageSize = this._tablePagination.pageSizeOptions[0];\r\n      }\r\n      this.updatePagination();\r\n    }\r\n  } \r\n\r\n  @Input()\r\n  get rowSelectionModel() {\r\n    return this._rowSelectionModel;\r\n  }\r\n  set rowSelectionModel(value: SelectionModel<T>) { \r\n    if (!isNullorUndefined(value)) {\r\n      if (this._rowSelectionMode && value && this._rowSelectionMode !== 'none') {\r\n        this._rowSelectionMode = (value.isMultipleSelection() === true ? 'multi': 'single');\r\n      }\r\n      this._rowSelectionModel = value;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  get rowSelectionMode() {\r\n    return this._rowSelectionMode;\r\n  }\r\n  set rowSelectionMode(selection: TableSelectionMode) {    \r\n    selection = selection || 'none';\r\n    this._rowSelectionModel = selection === 'none' ? null : new SelectionModel<T>(selection === 'multi', []);    \r\n    if(selection === 'none' && this._rowSelectionMode !== 'none' && this.displayedColumns[0] === 'row-checkbox') {\r\n      this.displayedColumns.shift();            \r\n      this.saveSetting(this.tableSetting,false);\r\n    } else if(selection !== 'none' && this._rowSelectionMode === 'none') {\r\n      this.displayedColumns.unshift('row-checkbox');            \r\n      this.saveSetting(this.tableSetting,false);\r\n    }\r\n    this._rowSelectionMode = selection;    \r\n  }\r\n\r\n  @Input()\r\n  get tableName() {\r\n    return this.tableService.tableName;\r\n  }\r\n  set tableName(value: string) {\r\n    this.tableService.tableName = value;\r\n  }\r\n\r\n  @Input()\r\n  get showProgress() {\r\n    return this.progressColumn.length > 0;\r\n  }\r\n  set showProgress(value: boolean) {\r\n    this.progressColumn = [];\r\n    if (value === true) {\r\n      this.progressColumn.push('progress');\r\n    }\r\n  } \r\n\r\n  // private totalRecord = 0;\r\n\r\n  // @Input() \r\n  // get dataSource() {    \r\n  //   if(isNullorUndefined(this.tvsDataSource)) {      \r\n  //     return null;\r\n  //   }    \r\n  //   if (this.totalRecord !== this.tvsDataSource.allData.length) {      \r\n  //     this.initSystemField(this.tvsDataSource.allData);\r\n  //   }\r\n  //   return this.tvsDataSource;\r\n  // } \r\n  // set dataSource(value: TableVirtualScrollDataSource<T>) {           \r\n  //   this.clear();    \r\n  //   if (!isNullorUndefined(value)) {      \r\n  //     this.initSystemField(value.data);\r\n  //     this.tvsDataSource = value;\r\n  //     this.tvsDataSource.sort = this.sort;\r\n  //     (this.tvsDataSource as any)._paginator = value;      \r\n  //   } \r\n  // }\r\n\r\n  protected initSystemField(data: any[]) {    \r\n    data = data.map( (item, index) => {\r\n      item.id = index ;\r\n      item.option = item.option || {};      \r\n      return item;\r\n    });\r\n  }\r\n\r\n  public expandColumn = [];\r\n  private _expandComponent: any;\r\n  @Input()\r\n  get expandComponent(): any {    \r\n    return this._expandComponent;\r\n  }\r\n  set expandComponent(value: any) {    \r\n    this._expandComponent = value;\r\n    if (this._expandComponent !== null && this._expandComponent !== undefined) {\r\n      this.expandColumn = ['expandedDetail'];\r\n    } else {\r\n      this.expandColumn = [];\r\n    }\r\n  }\r\n\r\n  @Input() public rowContextMenuItems: ContextMenuItem[];\r\n  @Input() defaultWidth: number = null;\r\n  @Input() minWidth = 120;\r\n  @Input()\r\n  get columns() {\r\n    return this.tableColumns;\r\n  }\r\n  set columns(fields: TableField<T>[]) {\r\n    (fields || []).forEach((f, i) => {\r\n      // key name error //\r\n      if (f.name.toLowerCase() === 'id') {\r\n        throw 'Field name is reserved.[\"id\"]';\r\n      }      \r\n      const settingFields = (this.tableSetting.columnSetting || []).filter(s => s.name === f.name);\r\n      const settingField = settingFields.length > 0 ? settingFields[0] : null;\r\n      // default value for fields\r\n      f.printable = f.printable || true;\r\n      f.exportable = f.exportable || true;\r\n      f.toExport = f.toExport || ((value, type) => typeof value === 'object' ? null : value || '');\r\n      f.toPrint = (value) =>  typeof value === 'object' ? null : value || '';\r\n      f.enableContextMenu = f.enableContextMenu || true;\r\n      f.header = f.header || titleCase(f.name);\r\n      f.display = getObjectProp('display', 'visible' , settingField, f );\r\n      f.filter = getObjectProp('filter', 'client-side' , settingField, f );\r\n      f.sort = getObjectProp('sort', 'client-side' , settingField, f );\r\n      f.sticky = getObjectProp('sticky', 'none' , settingField, f );\r\n      f.width =  getObjectProp('width', this.defaultWidth , settingField, f );\r\n    });\r\n    this.tableColumns = fields;   \r\n    this.updateColumn();     \r\n  }\r\n\r\n  public updateColumn() {\r\n    if (isNullorUndefined(this.tableSetting.columnSetting)) {\r\n      this.tableSetting.columnSetting = clone(this.tableColumns);\r\n      this.refreshTableSetting();\r\n    }\r\n    this.setDisplayedColumns();\r\n  }\r\n\r\n  /*************************************** I/O parameters *********************************/\r\n  @Input() printConfig: PrintConfig = {};  \r\n  @Input() sticky: boolean;\r\n  @Input() pending: boolean;\r\n  @Input() rowHeight = 48;\r\n  @Input() headerHeight = 56;\r\n  @Input() footerHeight = 48;\r\n  @Input() headerEnable = true;\r\n  @Input() footerEnable = false;\r\n  @Input() showNoData: boolean;\r\n  @Input() showReload: boolean;  \r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onTableEvent: EventEmitter<ITableEvent> = new EventEmitter();\r\n  @Output() onRowEvent: EventEmitter<IRowEvent> = new EventEmitter();\r\n  @Output() settingChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() paginationChange: EventEmitter<TablePagination> = new EventEmitter();\r\n  \r\n\r\n  //**this event is deperact and move to onRowEvent */\r\n  // @Output() rowActionMenuChange: EventEmitter<IRowActionMenuEvent<any>> = new EventEmitter();\r\n  \r\n  /*************************************** Expand Row *********************************/\r\n  expandedElement: TableRow | null;\r\n\r\n  constructor(public tableService: TableService, public cdr: ChangeDetectorRef) {    \r\n    this.showProgress = true;\r\n    this.tableSetting = {\r\n      direction: 'ltr',\r\n      columnSetting: null,\r\n      visibaleActionMenu: null\r\n    };\r\n  }\r\n\r\n  // Variables //\r\n  progressColumn: string[] = [];\r\n  displayedColumns: string[] = [];\r\n  // private menus: TableMenu[] = [];\r\n  public tableColumns: TableField<T>[];\r\n  public tvsDataSource: TableVirtualScrollDataSource<T> = new TableVirtualScrollDataSource<T>([]);\r\n\r\n  private _rowSelectionMode: TableSelectionMode;\r\n  private _rowSelectionModel = new SelectionModel<T>(true, []);\r\n  private _tablePagination: TablePagination = { };\r\n  public tablePagingMode: TablePaginationMode  = 'none';\r\n  public viewportClass: 'viewport' | 'viewport-with-pagination' = 'viewport-with-pagination';\r\n  tableSetting: TableSetting;\r\n\r\n  /**************************************** Refrence Variables ***************************************/\r\n  @ViewChild(MatTable, { static: true }) table !: MatTable<any>;\r\n  @ViewChild(CdkVirtualScrollViewport, { static: true }) viewport !: CdkVirtualScrollViewport;    \r\n  /**************************************** Methods **********************************************/\r\n\r\n  refreshTableSetting() {\r\n    // this.tableSetting = clone(this.tableSetting);\r\n  }\r\n\r\n  updatePagination() {    \r\n    if (isNullorUndefined(this.tvsDataSource)){\r\n      return;\r\n    }      \r\n    if (this.tablePagingMode === 'client-side' || this.tablePagingMode === 'server-side') {\r\n      this.viewportClass = 'viewport-with-pagination';\r\n      if ( !isNullorUndefined(this.tvsDataSource.paginator)) {\r\n        let dataLen = this.tvsDataSource.paginator.length;\r\n        if (!isNullorUndefined(this._tablePagination.length) && this._tablePagination.length > dataLen) {\r\n          dataLen = this._tablePagination.length;\r\n        }\r\n        this.tvsDataSource.paginator.length = dataLen;\r\n      } \r\n    } else {\r\n      this.viewportClass = 'viewport';\r\n      if ((this.tvsDataSource as any)._paginator !== undefined) {\r\n        delete (this.tvsDataSource as any)._paginator;\r\n      }\r\n    } \r\n    this.tvsDataSource.refreshFilterPredicate();\r\n  }\r\n\r\n  public clear() {\r\n    if (!isNullorUndefined(this.tvsDataSource)) {\r\n      if (this.viewport) {\r\n        this.viewport.scrollTo({ top: 0, behavior: 'auto' });\r\n      }\r\n      this.tvsDataSource.clearData();\r\n      this.expandedElement = null;\r\n    }\r\n    if(this._rowSelectionModel) {\r\n      this._rowSelectionModel.clear();\r\n    }\r\n    this.cdr.detectChanges()\r\n  }  \r\n \r\n  setDisplayedColumns() {    \r\n    if (this.columns) {\r\n      this.displayedColumns = [];\r\n      this.columns.forEach((colunm, index) => {\r\n        colunm.index = index;\r\n        if (colunm.display === undefined || colunm.display === 'visible' || colunm.display === 'prevent-hidden') {\r\n          this.displayedColumns.push(colunm.name);\r\n        }        \r\n      }); \r\n      //bugfixed because of double header show\r\n      // if ((this._rowSelectionMode === 'multi' || this._rowSelectionMode === 'single') && this.displayedColumns.indexOf('row-checkbox') === -1) {\r\n      //   this.displayedColumns.unshift('row-checkbox');\r\n      // } \r\n      setTimeout( () => {\r\n        if ((this._rowSelectionMode === 'multi' || this._rowSelectionMode === 'single') && this.displayedColumns.indexOf('row-checkbox') === -1) {\r\n          this.displayedColumns.unshift('row-checkbox');\r\n        }\r\n      }, 0); \r\n\r\n      if (this.tableSetting.visibleTableMenu !== false) {\r\n        this.displayedColumns.push('table-menu');\r\n      }\r\n    }\r\n    // this.updatePagination();\r\n  }\r\n\r\n  /************************************ Drag & Drop Column *******************************************/ \r\n  public refreshGrid() {\r\n    this.cdr.detectChanges()\r\n    this.table.renderRows();\r\n  }\r\n\r\n  public moveRow(from: number, to: number) {\r\n    if (from >= 0 && from < this.tvsDataSource.data.length  && to >= 0 && to < this.tvsDataSource.data.length ) {      \r\n      this.tvsDataSource.data[from].id = to;\r\n      this.tvsDataSource.data[to].id = from;        \r\n      moveItemInArray(this.tvsDataSource.data, from, to);\r\n      this.tvsDataSource.data = Object.assign([], this.tvsDataSource.data);\r\n    }\r\n  }\r\n\r\n  moveColumn(from: number, to: number) {\r\n    setTimeout(() => {\r\n      moveItemInArray(this.columns, from, to);\r\n      this.refreshColumn(this.columns);\r\n    });\r\n  }\r\n\r\n  refreshColumn(columns: TableField<T>[]) {\r\n    if (this.viewport) {      \r\n      const currentOffset = this.viewport.measureScrollOffset();\r\n      this.columns = columns;\r\n      this.setDisplayedColumns();\r\n      setTimeout(() => this.viewport.scrollTo({ top: currentOffset, behavior: 'auto' }), 0);\r\n    }\r\n  }\r\n\r\n  saveSetting(tableSetting: TableSetting, raiseEvent: boolean = false) {    \r\n    if (tableSetting !== null) {\r\n      this.tableSetting = tableSetting;\r\n      this.refreshColumn(tableSetting.columnSetting);\r\n    }\r\n    if (raiseEvent === true) {\r\n      this.settingChange.emit(this.tableSetting);\r\n    }\r\n  }\r\n\r\n  /************************************ Selection Table Row *******************************************/\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this._rowSelectionModel.selected.length;\r\n    const numRows = this.tvsDataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this._rowSelectionModel.clear() :\r\n      this.tvsDataSource.data.forEach(row => this._rowSelectionModel.select(row));    \r\n    this.onRowEvent.emit({ event: 'MasterSelectionChange', sender:  this._rowSelectionModel});\r\n  }\r\n\r\n  onRowSelectionChange(e: any, row: T) {\r\n    if (e) {      \r\n      this._rowSelectionModel.toggle(row);\r\n      this.onRowEvent.emit({ event: 'RowSelectionChange', sender:  this._rowSelectionModel});\r\n    }\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  // checkboxLabel(row?: T): string {\r\n  //   if (!row) {\r\n  //     return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n  //   }\r\n  //   return `${this._rowSelectionModel.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\r\n  // } \r\n\r\n}\r\n\r\n","export abstract class AbstractFilter<T = any> {\r\n  /*\r\n    type variable is array because in future may be\r\n    control have two or more parameters such as ranger[from, to]\r\n  */\r\n  public parameters?: [{value: T, text: string}];\r\n  public type: 'and' | 'or';\r\n  abstract selectedIndex: number;\r\n  abstract readonly selectedValue: FilterOperation;\r\n  abstract toString(dynamicVariable: any): string;\r\n  abstract toPrint(): string;\r\n  abstract toSql(): string;\r\n  abstract getOperations(): FilterOperation[];\r\n  public hasValue() {\r\n    if (this.parameters !== null) {\r\n      return this.parameters.filter( p => p.value != null && p.value !== undefined && p.value.toString() !== '').length > 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport  interface FilterOperation {\r\n  predicate: string;\r\n  text: string;\r\n}\r\n","import { AbstractFilter, FilterOperation } from './abstract-filter';\r\nimport { TableIntl } from '../../../../international/table-Intl';\r\n\r\nconst contains = 'a.toString().includes(b)';\r\nconst equals = 'a.toString() === b.toString()';\r\nconst startsWith = 'a.toString().startsWith(b)';\r\nconst endsWith = 'a.toString().endsWith(b.toString())';\r\nconst empty = '!a';\r\nconst notEmpty = '!!a';\r\nconst operations = [contains, equals, startsWith, endsWith, empty, notEmpty];\r\n\r\nexport class TextFilter extends AbstractFilter<string> {\r\n  private static sql = ['LIKE \"%[*]%\"', '= \"[*]\"', 'LIKE \"%[*]\"', 'LIKE \"[*]%\"', 'IS NULL', 'IS NOT NULL'];\r\n  private static operationList: FilterOperation[] = [];\r\n\r\n  constructor(public languagePack: TableIntl) {\r\n    super();\r\n    this._selectedIndex = 0;\r\n    if ( TextFilter.operationList.length === 0) { // init for first time\r\n      operations.forEach(fn => {\r\n        TextFilter.operationList.push({ predicate: fn, text: null});\r\n      });\r\n    }\r\n    TextFilter.operationList[0].text = languagePack.filterLabels.TextContains;    // contains //\r\n    TextFilter.operationList[1].text = languagePack.filterLabels.TextEquals;      // equals //\r\n    TextFilter.operationList[2].text = languagePack.filterLabels.TextStartsWith;  // startsWith //\r\n    TextFilter.operationList[3].text = languagePack.filterLabels.TextEndsWith;    // endsWith //\r\n    TextFilter.operationList[4].text = languagePack.filterLabels.TextEmpty;       // empty //\r\n    TextFilter.operationList[5].text = languagePack.filterLabels.TextNotEmpty;    // notEmpty //\r\n  }\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _selectedIndex: number = null;\r\n  get selectedIndex(): number {\r\n    return this._selectedIndex;\r\n  }\r\n  set selectedIndex(value: number) {\r\n    this._selectedIndex = value;\r\n    // init filter parameters\r\n    if (value === 0 || value === 1 || value === 2 || value === 3 ) { // contains equals startsWith endsWith\r\n      this.parameters = [{ value: '', text: this.languagePack.filterLabels.Text }];\r\n    } else { // empty notEmpty\r\n      this.parameters = null;\r\n    }\r\n  }\r\n\r\n  get selectedValue(): FilterOperation {\r\n    if (this._selectedIndex !== null) {\r\n      return TextFilter.operationList[this._selectedIndex];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public getOperations(): FilterOperation[] {\r\n    return TextFilter.operationList;\r\n  }\r\n\r\n  public toString(dynamicVariable: any): string {\r\n    const a = '_a$';\r\n    const b = '_b$';\r\n    const predicate = this.selectedValue.predicate.replace('a', a).replace('b', b);\r\n    const statement = predicate.replace(a, `${a}['${dynamicVariable}']?.toString()?.toLowerCase()`);\r\n    // one static parameters equals  notEquals greaterThan lessThan //\r\n    if (this._selectedIndex === 0 ||\r\n      this._selectedIndex === 1 ||\r\n      this._selectedIndex === 2 ||\r\n      this._selectedIndex === 3 ) {\r\n        const value = '\\'' + (this.parameters[0].value !== null ? this.parameters[0].value.toLowerCase() : ' null ') + '\\'';\r\n        return statement.replace('_b$', value);\r\n    } else { // without static parameters\r\n      return statement;\r\n    }\r\n  }\r\n\r\n  public toPrint(): string {\r\n    return TextFilter.operationList[this._selectedIndex].text + ' ' + this.parameters[0].value + ' ' + (this.type || '') + ' ';\r\n  }\r\n\r\n  public toSql(): string {\r\n    return TextFilter.sql[this._selectedIndex].replace('[*]', (this.parameters[0].value || '')) + (this.type || '') + ' ';\r\n  }\r\n}\r\n\r\n","import { AbstractFilter, FilterOperation } from './abstract-filter';\r\nimport { TableIntl } from '../../../../international/table-Intl';\r\n\r\nconst equals = 'a === b';\r\nconst notEquals = 'a !== b';\r\nconst greaterThan = 'a > b';\r\nconst lessThan = 'a < b';\r\nconst empty = '!a';\r\nconst notEmpty = '!!a';\r\nconst operations = [equals, notEquals, greaterThan, lessThan, empty, notEmpty];\r\n\r\nexport class NumberFilter extends AbstractFilter<number> {\r\n  private static sql = ['=', '<>', '>', '<', 'IS NULL', 'IS NOT NULL'];\r\n  private static operationList: FilterOperation[] = [];\r\n  // private languageText: LanguagePack;\r\n\r\n  constructor(public languagePack: TableIntl) {\r\n    super();\r\n    if ( NumberFilter.operationList.length === 0) {\r\n      operations.forEach(fn => {\r\n        NumberFilter.operationList.push({ predicate: fn, text: null});\r\n      });\r\n    }\r\n    NumberFilter.operationList[0].text = languagePack.filterLabels.NumberEquals;      // equals //\r\n    NumberFilter.operationList[1].text = languagePack.filterLabels.NumberNotEquals;   // notEquals //\r\n    NumberFilter.operationList[2].text = languagePack.filterLabels.NumberGreaterThan; // greaterThan //\r\n    NumberFilter.operationList[3].text = languagePack.filterLabels.NumberLessThan;    // lessThan //\r\n    NumberFilter.operationList[4].text = languagePack.filterLabels.NumberEmpty;       // empty //\r\n    NumberFilter.operationList[5].text = languagePack.filterLabels.NumberNotEmpty;    // notEmpty //\r\n  }\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _selectedIndex: number = null;\r\n  get selectedIndex(): number {\r\n    return this._selectedIndex;\r\n  }\r\n  set selectedIndex(value: number) {\r\n    this._selectedIndex = value;\r\n    // init filter parameters\r\n    if (value === 0 || value === 1 || value === 2 || value === 3 ) { // equals notEquals greaterThan lessThan\r\n      this.parameters = [{ value: null, text: this.languagePack.filterLabels.Number }];\r\n    } else { // empty notEmpty\r\n      this.parameters = null;\r\n    }\r\n  }\r\n\r\n  get selectedValue(): FilterOperation {\r\n    if (this._selectedIndex !== null) {\r\n      return NumberFilter.operationList[this._selectedIndex];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public getOperations(): FilterOperation[] {\r\n    return NumberFilter.operationList;\r\n  }\r\n\r\n  public toString(dynamicVariable: any): string {\r\n    const a = '_a$';\r\n    const b = '_b$';\r\n    const predicate = this.selectedValue.predicate.replace('a', a).replace('b', b);\r\n    const statement = predicate.replace(a, `${a}['${dynamicVariable}']`);\r\n    // one static variable (equals, notEquals,greaterThan,lessThan)\r\n    if (this._selectedIndex === 0 ||\r\n      this._selectedIndex === 1 ||\r\n      this._selectedIndex === 2 ||\r\n      this._selectedIndex === 3 ) {\r\n        const value = this.parameters[0].value ? this.parameters[0].value.toString() : ' null ';\r\n        return statement.replace(b, value);\r\n    } else { // none static variable (empty, notEmpty)\r\n      return statement;\r\n    }\r\n  }\r\n\r\n  public toPrint(): string {\r\n    return NumberFilter.operationList[this._selectedIndex].text + ' ' + this.parameters[0].value + ' ' + (this.type || '') + ' ';\r\n  }\r\n\r\n  public toSql(): string {\r\n    return NumberFilter.sql[this._selectedIndex] + ' ' + (this.parameters[0].value || '') + ' ' + (this.type || '') + ' ';\r\n  }\r\n}\r\n","import { LanguagePack, TableLabels, FilterLabels, MenuLabels } from '../models/language-pack.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatPaginatorIntl } from '@angular/material/paginator';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TableIntl implements LanguagePack {\r\n  menuLabels: MenuLabels = {\r\n    saveData: 'Save Data',\r\n    fullScreen: 'Full Screen',\r\n    \r\n    columnSetting: 'Column Setting',\r\n    saveTableSetting: 'Save Table Setting',\r\n    clearFilter: 'Clear Filter',\r\n    jsonFile: 'Json File',\r\n    csvFile: 'CSV File',\r\n    printTable: 'Print Table',\r\n    filterMode: 'Filter Mode:',\r\n    filterLocalMode: 'Local',\r\n    filterServerMode: 'Server',\r\n    sortMode: 'Sort Mode:',\r\n    sortLocalMode: 'Local',\r\n    sortServerMode: 'Server',\r\n    printMode: 'Print Mode',\r\n    printYesMode: 'Yes',\r\n    printNoMode: 'No',\r\n    pinMode: 'Pin Mode:',\r\n    pinNoneMode: 'None',\r\n    pinStartMode: 'Start',\r\n    pinEndMode: 'End',\r\n    thereIsNoColumn: 'There is no column.'\r\n  };\r\n\r\n  paginatorLabels: MatPaginatorIntl = {\r\n    changes:  new Subject<void>(),\r\n    itemsPerPageLabel: 'Items per page:',\r\n    nextPageLabel: 'Next Page:',\r\n    previousPageLabel: 'Previous Page:',\r\n    firstPageLabel: 'First Page:',\r\n    lastPageLabel: 'Last Page:',\r\n    getRangeLabel : (page: number, pageSize: number, length: number) => {\r\n      if (length === 0 || pageSize === 0) { return `0 of ${length}`; }\r\n      length = Math.max(length, 0);\r\n      const startIndex = page * pageSize;\r\n      const endIndex = startIndex < length ?\r\n          Math.min(startIndex + pageSize, length) :\r\n          startIndex + pageSize;\r\n      return `${startIndex + 1} - ${endIndex} of ${length}`;\r\n    }\r\n  };\r\n\r\n  tableLabels: TableLabels =\r\n  {\r\n    NoData: 'No records found.'\r\n  };\r\n\r\n  filterLabels: FilterLabels = {\r\n    Clear: 'Clear',\r\n    Search: 'Search',\r\n    And: 'And',\r\n    Or: 'Or',\r\n    /* Text Compare */\r\n    Text: 'Text',\r\n    TextContains: 'Contains',\r\n    TextEmpty: 'Empty',\r\n    TextStartsWith: 'Starts With',\r\n    TextEndsWith: 'Ends With',\r\n    TextEquals: 'Equals',\r\n    TextNotEmpty: 'Not Empty',\r\n    /* Number Compare */\r\n    Number: 'Number',\r\n    NumberEquals: 'Equals',\r\n    NumberNotEquals: 'Not Equals',\r\n    NumberGreaterThan: 'Greater Than',\r\n    NumberLessThan: 'Less Than',\r\n    NumberEmpty: 'Empty',\r\n    NumberNotEmpty: 'Not Empty',\r\n    /* Category List Compare */\r\n    CategoryContains: 'Contains',\r\n    CategoryNotContains: 'Not Contains',\r\n    /* Boolean Compare */\r\n    /* Date Compare */\r\n  };\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, HostBinding, Output, ViewChild,\r\n         Input, EventEmitter, OnInit, ChangeDetectorRef, QueryList, ViewChildren, OnDestroy, ContentChildren } from '@angular/core';\r\nimport { TableField } from './../../../models/table-field.model';\r\nimport { TableService } from '../../dynamic-mat-table.service';\r\nimport { TextFilter } from './compare/text-filter';\r\nimport { NumberFilter } from './compare/number-filter';\r\nimport { AbstractFilter } from './compare/abstract-filter';\r\nimport { transition, trigger, query, style, stagger, animate } from '@angular/animations';\r\nimport { TableIntl } from '../../../international/table-Intl';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { isNullorUndefined } from '../../../cores/type';\r\nimport { Subscription } from 'rxjs';\r\n\r\nconst listAnimation = trigger('listAnimation', [\r\n  transition('* <=> *', [\r\n    query(':enter',\r\n      [style({ opacity: 0 }), stagger('10ms', animate('400ms ease-out', style({ opacity: 1 })))],\r\n      { optional: true }\r\n    ),\r\n  ])\r\n]);\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'header-filter',\r\n  templateUrl: './header-filter.component.html',\r\n  styleUrls: ['./header-filter.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [listAnimation]\r\n})\r\nexport class HeaderFilterComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @Input() field?: TableField<any>;\r\n  @Output() filterChanged: EventEmitter<AbstractFilter[]> = new EventEmitter<AbstractFilter[]>();\r\n\r\n  @ContentChildren('filterInput') filterInputList !: QueryList<MatInput>;\r\n  @ViewChild(MatMenuTrigger, { static: true }) menu !: MatMenuTrigger;\r\n\r\n  private filterList: AbstractFilter[] = [];\r\n  private eventsSubscription: Subscription;\r\n  @Input()\r\n  get filters(): AbstractFilter[] {\r\n    if ( isNullorUndefined(this.filterList) === true || this.filterList.length === 0) {\r\n      this.filterList = [];\r\n      this.addNewFilter(this.field.type || 'text');\r\n    }\r\n    return this.filterList;\r\n  }\r\n  set filters(values: AbstractFilter[]) {\r\n    this.filterList = values;\r\n  }\r\n\r\n  @HostBinding('class.has-value')\r\n  get hasValue(): boolean {\r\n    return this.filters && this.filters.filter( f => f.hasValue() === true).length > 0;\r\n  }\r\n\r\n  @HostBinding('class.show-trigger')\r\n  get showTrigger(): boolean {\r\n    if(this.menu === undefined) { \r\n      return false;\r\n    } else {\r\n      return this.menu.menuOpen || this.hasValue;\r\n    }\r\n  }\r\n\r\n  constructor(public languagePack: TableIntl, public service: TableService, private cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnDestroy(): void {    \r\n    if (this.eventsSubscription) {\r\n      this.eventsSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (isNullorUndefined(this.filters)) {\r\n      this.filters = [];\r\n      this.addNewFilter(this.field.type);\r\n    }\r\n  }\r\n\r\n  addNewFilter(type: string = 'text') {\r\n    switch (type || 'text') {\r\n      case 'text': {\r\n        this.filterList.push(new TextFilter(this.languagePack));\r\n        break;\r\n      }\r\n      case 'number': {\r\n        this.filterList.push(new NumberFilter(this.languagePack));\r\n        break;\r\n      }\r\n      case 'date': {\r\n        // this.compare = new DateCompare(service);\r\n        break;\r\n      }\r\n      case 'boolean': {\r\n        // this.compare = new BooleanCompare(service);\r\n        break;\r\n      }\r\n      default: this.filterList.push(new TextFilter(this.languagePack));\r\n    }\r\n    this.filters[this.filters.length - 1].selectedIndex = 0;\r\n    return this.filters[this.filters.length - 1];\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.menu) {\r\n      this.eventsSubscription = this.menu.menuOpened.subscribe(() => this.focusToLastInput());\r\n    }\r\n  }\r\n\r\n  focusToLastInput() {\r\n    setTimeout(() => {\r\n      if (this.filterInputList.length > 0) {\r\n        this.filterInputList.last.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  filterAction_OnClick(index, action) {\r\n    if (action === 0 || action === 1) { // and or\r\n      this.filters[index].type = action === 0 ? 'and' : 'or';\r\n      if (this.filters.length === index + 1) {\r\n        this.addNewFilter(this.field.type);\r\n        this.focusToLastInput();\r\n      }\r\n    } else if (action === 2 && this.filters.length > 1) { // delete\r\n      setTimeout(() => {\r\n        this.filters.splice(index, 1);\r\n        this.cdr.detectChanges();\r\n        this.focusToLastInput();\r\n      }); // bug for delete filter item(unwanted reaction close menu)\r\n    }\r\n  }\r\n\r\n  clearColumn_OnClick() {\r\n    this.filterList = [];\r\n    this.filterChanged.emit(this.filterList);\r\n  }\r\n\r\n  applyFilter_OnClick() {\r\n    this.filterChanged.emit(this.filterList);\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit, ViewChild, ElementRef, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { PrintConfig } from '../../../models/print-config.model';\r\n\r\n// tslint:disable-next-line:max-line-length\r\nconst styles = 'body{margin:15px;}table{width:100%;border-collapse:collapse;}h2{text-align:center;}th.mat-header-cell{text-align:center;}div{text-align:center;margin:30px }tr{border-bottom:1px solid }td,th{padding:10px; text-align: center }.param-list{text-align: left;border:solid gray;border-width: 0px 0px 2px 0;margin-bottom: 10px;padding-bottom: 10px;}.param {display: inline-block;margin: 10px;}';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'print-dialog',\r\n  templateUrl: './print-dialog.component.html',\r\n  styleUrls: ['./print-dialog.component.scss']\r\n})\r\nexport class PrintTableDialogComponent implements OnInit {\r\n  @ViewChild('printContentRef', {static: true}) printContentRef !: ElementRef;\r\n\r\n  constructor( public dialogRef: MatDialogRef<PrintTableDialogComponent>, @Inject(MAT_DIALOG_DATA) public printTable: PrintConfig) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  print() {\r\n    setTimeout(() => {\r\n      const dialogConfig = 'width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no';\r\n      const printDoc = `\r\n    <html>\r\n      <head>\r\n        <style> ${styles} </style>\r\n      </head>\r\n      <body onload=\"window.print();\" onafterprint=\"window.close()\">\r\n        ${this.printContentRef.nativeElement.innerHTML}\r\n      </body>\r\n    </html>\r\n    `;\r\n\r\n      const popupWinindow = window.open('', '_blank', dialogConfig);\r\n      popupWinindow.document.write(printDoc);\r\n      popupWinindow.document.close();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Subject } from 'rxjs';\r\n\r\nexport class ResizeColumn {\r\n  startX: number;\r\n  startWidth: number;\r\n  isResizingRight: boolean;\r\n  currentResizeIndex: number;\r\n  resizeHandler?: 'left' | 'right' = null;\r\n  public widthUpdate: Subject<{i: number, w: number}> = new Subject<{i: number, w: number}>();\r\n}\r\n","import { Component, OnInit, AfterViewInit,\r\n         QueryList, ElementRef, ViewChild, TemplateRef, Renderer2, ChangeDetectionStrategy, ChangeDetectorRef, Input, OnDestroy, ContentChildren} from '@angular/core';\r\nimport { TableCoreDirective } from '../cores/table.core.directive';\r\nimport { TableService } from './dynamic-mat-table.service';\r\nimport { TableRow } from '../models/table-row.model';\r\nimport { TableField } from '../models/table-field.model';\r\nimport { AbstractFilter } from './extensions/filter/compare/abstract-filter';\r\nimport { TablePagination } from '../models/table-pagination.model';\r\nimport { HeaderFilterComponent } from './extensions/filter/header-filter.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PrintTableDialogComponent } from './extensions/print-dialog/print-dialog.component';\r\nimport { trigger, transition, style, animate, query, stagger, state } from '@angular/animations';\r\nimport { ResizeColumn } from '../models/resize-column.mode';\r\nimport { TableIntl } from '../international/table-Intl';\r\nimport { TableMenuActionChange } from './extensions/table-menu/table-menu.component';\r\nimport { CdkDragDrop, CdkDragStart, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { isNullorUndefined } from '../cores/type';\r\nimport { TableSetting } from '../models/table-setting.model';\r\nimport { delay } from 'rxjs/operators';\r\nimport { FixedSizeTableVirtualScrollStrategy } from '../cores/fixed-size-table-virtual-scroll-strategy';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { ContextMenuItem } from '../models/context-menu.model';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { MatTooltipDefaultOptions, MAT_TOOLTIP_DEFAULT_OPTIONS } from '@angular/material/tooltip';\r\nimport { requestFullscreen } from '../utilies/html.helper';\r\nimport { TableVirtualScrollDataSource } from '../cores/table-data-source';\r\n\r\nexport const tableAnimation = trigger('tableAnimation', [\r\n  transition('void => *', [\r\n    query(':enter', style({ transform: 'translateX(-50%)', opacity: 0 }), {\r\n      //limit: 5,\r\n      optional: true,\r\n    }),\r\n    query(':enter',\r\n      stagger('0.01s', [\r\n        animate('0.5s ease', style({ transform: 'translateX(0%)', opacity: 1 })\r\n        ),\r\n      ]),\r\n      {  \r\n        //limit: 5, \r\n        optional: true }\r\n    ),\r\n  ]),\r\n]);\r\n\r\nexport const expandAnimation = trigger('detailExpand', [\r\n  state('collapsed', style({height: '0px', minHeight: '0'})),\r\n  state('expanded', style({height: '*'})),\r\n  transition('expanded <=> collapsed', animate('100ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n]); \r\n \r\nexport const cellTooltipDefaults: MatTooltipDefaultOptions = {\r\n  showDelay: 500,\r\n  hideDelay: 400,\r\n  touchendHideDelay: 1000,\r\n  position: 'above',\r\n};\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'dynamic-mat-table',\r\n  templateUrl: './dynamic-mat-table.component.html',\r\n  styleUrls: ['./dynamic-mat-table.component.scss'],\r\n  animations: [tableAnimation, expandAnimation], \r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: cellTooltipDefaults}\r\n  ],\r\n})\r\nexport class DynamicMatTableComponent<T extends TableRow> extends TableCoreDirective<T> implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('tbl', {static: true}) tbl; \r\n  @Input()\r\n  get setting() {\r\n    return this.tableSetting;\r\n  } \r\n  set setting(value: TableSetting) {    \r\n    if ( !isNullorUndefined(value) ) {\r\n      value.columnSetting = value.columnSetting || this.tableSetting.columnSetting;\r\n      value.alternativeRowStyle = value.alternativeRowStyle || this.tableSetting.alternativeRowStyle;\r\n      value.columnSetting = value.columnSetting || this.tableSetting.columnSetting;\r\n      value.direction = value.direction || this.tableSetting.direction;\r\n      value.normalRowStyle = value.normalRowStyle || this.tableSetting.normalRowStyle;      \r\n      value.visibaleActionMenu = value.visibaleActionMenu || this.tableSetting.visibaleActionMenu;\r\n      value.visibleTableMenu = value.visibleTableMenu || this.tableSetting.visibleTableMenu;\r\n      this.tableSetting = value;\r\n      this.setDisplayedColumns();\r\n    }\r\n  } \r\n\r\n  @ViewChild(MatMenuTrigger) contextMenu: MatMenuTrigger;\r\n  public contextMenuPosition = { x: '0px', y: '0px' };  \r\n  @ViewChild('printRef', { static: true }) printRef !: TemplateRef<any>;\r\n  @ViewChild('printContentRef', { static: true }) printContentRef !: ElementRef;\r\n  @ContentChildren(HeaderFilterComponent) headerFilterList !: QueryList<HeaderFilterComponent>;  \r\n  private dragDropData = {dragColumnIndex: -1, dropColumnIndex: -1};\r\n  private eventsSubscription: Subscription;\r\n  printing = true;\r\n  printTemplate: TemplateRef<any> = null;\r\n  resizeColumn: ResizeColumn = new ResizeColumn();\r\n  // mouse resize\r\n  resizableMousemove: () => void;\r\n  resizableMouseup: () => void;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private renderer: Renderer2,\r\n    public languagePack: TableIntl,\r\n    public tableService: TableService,\r\n    public cdr: ChangeDetectorRef,\r\n    private overlayContainer: OverlayContainer\r\n  ) {\r\n    super(tableService, cdr); \r\n    this.overlayContainer.getContainerElement().addEventListener('contextmenu', (e) =>{\r\n      e.preventDefault(); return false;\r\n    });\r\n    \r\n    this.eventsSubscription = this.resizeColumn.widthUpdate.pipe(delay(100)).subscribe((data) => {\r\n      this.columns[data.i].width = data.w;\r\n      if (this.tableSetting.columnSetting[data.i]) {\r\n        this.tableSetting.columnSetting[data.i].width = data.w;\r\n      }\r\n      this.refreshGrid();\r\n    });\r\n  }\r\n\r\n  indexTrackFn = (index: number) => {    \r\n    return index;\r\n  };\r\n\r\n  trackColumn(index: number, item: TableField<T>): string {\r\n    return `${item.index}`;\r\n  }\r\n\r\n  ngOnDestroy(): void {    \r\n    if (this.eventsSubscription) {\r\n      this.eventsSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  public refreshUI() {\r\n    const scrollStrategy: FixedSizeTableVirtualScrollStrategy = this.viewport['_scrollStrategy'];        \r\n    scrollStrategy?.viewport?.checkViewportSize();\r\n    scrollStrategy?.viewport?.scrollToOffset(0);    \r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnInit() {    \r\n    const scrollStrategy: FixedSizeTableVirtualScrollStrategy = this.viewport['_scrollStrategy'];\r\n\r\n    scrollStrategy.offsetChange.subscribe(offset => {      \r\n      // console.log(offset);\r\n    })\r\n    this.viewport.renderedRangeStream.subscribe( t => {\r\n      // in expanding row scrolling make not good apperance therefor close it.\r\n      if (this.expandedElement && this.expandedElement.option && this.expandedElement.option.expand) {\r\n        // console.log('clear', t); \r\n        // this.expandedElement.option.expand = false;\r\n        // this.expandedElement = null;\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.tvsDataSource.paginator = this.paginator;\r\n    this.tvsDataSource.sort = this.sort;    \r\n    this.dataSource.subscribe(x => {\r\n      //console.log(x);      \r\n      this.initSystemField(x);\r\n      this.tvsDataSource.data = x;\r\n      // this.cdr.detectChanges();\r\n      setTimeout(() =>{\r\n        this.refreshUI();\r\n      }, 0);\r\n    });\r\n\r\n    this.tvsDataSource.sort.sortChange.subscribe(sort => {\r\n      this.pagination.pageIndex = 0;\r\n      this.onTableEvent.emit({ event: 'SortChanged', sender: sort })\r\n    });\r\n\r\n    // this.dataSource.dataOfRange$.subscribe((data) => {\r\n    //   // console.log('dataOfRange');\r\n    // });\r\n  }\r\n\r\n  public get inverseOfTranslation(): number {\r\n    if (!this.viewport || !this.viewport[\"_renderedContentOffset\"]) {\r\n      return -0;\r\n    }\r\n    let offset = this.viewport[\"_renderedContentOffset\"];\r\n    return -offset;\r\n  }   \r\n\r\n  // TO DO\r\n  ellipsis(cellRef) {\r\n    // console.log(cellRef.clientHeight);\r\n    // console.log(cellRef.scrollHeight);\r\n    if (cellRef.clientHeight > this.rowHeight) {\r\n      cellRef.style.maxHeight = '48px';\r\n    }\r\n  }\r\n\r\n  rowStyle(row) {\r\n    let style: any =  row?.option?.style || {};\r\n    if (this.setting.alternativeRowStyle && row.id % 2 === 0) {\r\n      // style is high priority\r\n      style = { ...this.setting.alternativeRowStyle ,...style};\r\n    }\r\n    if (this.setting.rowStyle) {\r\n      style = { ...this.setting.rowStyle ,...style};\r\n    }    \r\n    return style;\r\n  }\r\n\r\n  cellClass(option, column) {\r\n    let clas = null;\r\n    if (option && column.name) {\r\n      clas = option[column.name] ? option[column.name].style : null;\r\n    }\r\n    \r\n    if ( clas === null) {\r\n      return column.cellClass;\r\n    } else {\r\n      return {...clas, ...column.cellClass};\r\n    }\r\n  }\r\n\r\n  cellStyle(option, column) {\r\n    let style = null;\r\n    if (option && column.name) {\r\n      style = option[column.name] ? option[column.name].style : null;\r\n    }\r\n    \r\n    if ( style === null) {\r\n      return column.cellStyle;\r\n    } else {\r\n      return {...style, ...column.cellStyle};\r\n    }\r\n  }\r\n\r\n  cellIcon(option, cellName) {\r\n    if (option && cellName) {\r\n      return option[cellName] ? option[cellName].icon : null;\r\n    } else {\r\n      return null;\r\n    }    \r\n  }\r\n\r\n  filter_onChanged(column: TableField<T>, filter: AbstractFilter[]) {\r\n    this.pending = true;\r\n    this.tvsDataSource.setFilter(column.name, filter).subscribe(() => {\r\n      this.pending = false;\r\n    });\r\n  }\r\n\r\n  currentContextMenuSender: any = {};\r\n  onContextMenu(event: MouseEvent, column: TableField<T>, row: any) {    \r\n    if(this.currentContextMenuSender?.time && (new Date().getTime() - this.currentContextMenuSender.time) < 500) {\r\n      return;\r\n    }\r\n    this.contextMenu.closeMenu();\r\n    if (this.contextMenuItems?.length === 0 ) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.currentContextMenuSender = { column: column, row: row, time: new Date().getTime()};\r\n    this.contextMenu.menuData = this.currentContextMenuSender;\r\n    this.contextMenu.menu.focusFirstItem('mouse');    \r\n    this.onRowEvent.emit({ event: 'BeforContextMenuOpen', sender: {row: row, column: column, contextMenu: this.contextMenuItems}});\r\n    this.contextMenu.openMenu();\r\n  }\r\n\r\n  onContextMenuItemClick(data: ContextMenuItem) {    \r\n    this.contextMenu.menuData.item = data;\r\n    this.onRowEvent.emit({ event: 'ContextMenuClick', sender: this.contextMenu.menuData });\r\n  }\r\n\r\n  tableMenuActionChange(e: TableMenuActionChange) {\r\n    if (e.type === 'TableSetting') {      \r\n       this.saveSetting(e.data, false);\r\n    } else if(e.type === 'FullScreenMode') {\r\n      requestFullscreen(this.tbl.elementRef);\r\n    } else if (e.type === 'Download') {\r\n      if (e.data === 'CSV') {\r\n        this.tableService.exportToCsv<T>(\r\n          this.columns,\r\n          this.tvsDataSource.filteredData,\r\n          this.rowSelectionModel\r\n        );\r\n      } else if (e.data === 'JSON') {\r\n        this.tableService.exportToJson(this.tvsDataSource.filteredData);\r\n      }\r\n    } else if (e.type === 'FilterClear') {\r\n      this.tvsDataSource.clearFilter();\r\n      this.headerFilterList.forEach((hf) => hf.clearColumn_OnClick());\r\n    } else if (e.type === 'Print') {\r\n      this.printConfig.displayedFields = this.columns\r\n        .filter((c) => isNullorUndefined(c.printable) || c.printable === true)\r\n        .map((o) => o.name);\r\n      this.printConfig.title = this.printConfig.title || this.tableName;\r\n      this.printConfig.direction = this.tableSetting.direction || 'ltr';\r\n      this.printConfig.columns = this.tableColumns;\r\n      this.printConfig.data = this.tvsDataSource.filteredData;\r\n      const params = this.tvsDataSource.toTranslate();\r\n      this.printConfig.tablePrintParameters = [];\r\n      params.forEach((item) => {\r\n        this.printConfig.tablePrintParameters.push(item);\r\n      });\r\n\r\n      this.dialog.open(PrintTableDialogComponent, {\r\n        width: '90vw',\r\n        data: this.printConfig,\r\n      });\r\n    } else if (e.type === 'SaveSetting') {\r\n      this.saveSetting(null, true);\r\n    }\r\n  }\r\n\r\n  rowMenuActionChange(contextMenuItem: ContextMenuItem, row: any) {\r\n    console.log('contextMenuItem');    \r\n    this.onRowEvent.emit({ event: 'RowActionMenu', sender: {row: row, action: contextMenuItem}});\r\n    // this.rowActionMenuChange.emit({actionItem: contextMenuItem, rowItem: row });\r\n  }\r\n\r\n  doRendering(e) {\r\n    this.pending = false;\r\n    if (this.viewport.getViewportSize() === 0) {\r\n      // console.log('zero');\r\n    }\r\n  }\r\n\r\n  pagination_onChange(e: TablePagination) {\r\n    // console.log(e);\r\n    this.pending = true;\r\n    this.tvsDataSource.refreshFilterPredicate(); // pagination Bugfixed\r\n    this.paginationChange.emit(e);\r\n  } \r\n\r\n  reload_onClick(){\r\n    this.onTableEvent.emit({ sender: null, event: 'ReloadData'});\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////\r\n\r\n  onResizeColumn(event: any, index: number, type: 'left' | 'right') {\r\n    // console.log(index,type);    \r\n    this.resizeColumn.resizeHandler = type;\r\n    this.resizeColumn.startX = event.pageX;\r\n    // console.log(this.resizeColumn.resizeHandler, this.resizeColumn.startX);\r\n    if (this.resizeColumn.resizeHandler === 'right') {\r\n      this.resizeColumn.startWidth = event.target.parentElement.clientWidth;\r\n      this.resizeColumn.currentResizeIndex = index;\r\n    } else {\r\n      if (event.target.parentElement.previousElementSibling === null) {\r\n        // for first column not resize\r\n        return;\r\n      } else {\r\n        this.resizeColumn.startWidth =\r\n          event.target.parentElement.previousElementSibling.clientWidth;\r\n        this.resizeColumn.currentResizeIndex = index;\r\n      }\r\n    }\r\n    event.preventDefault();\r\n    this.mouseMove(index);\r\n  }\r\n\r\n  mouseMove(index: number) {\r\n    this.resizableMousemove = this.renderer.listen(\r\n      'document',\r\n      'mousemove',\r\n      (event) => {\r\n        if (this.resizeColumn.resizeHandler !== null && event.buttons) {\r\n          const rtl = this.direction === 'rtl' ? -1 : 1;\r\n          let width = 0;\r\n          if (this.resizeColumn.resizeHandler === 'right') {\r\n            const dx = event.pageX - this.resizeColumn.startX;\r\n            width = this.resizeColumn.startWidth + rtl * dx;\r\n          } else {\r\n            const dx = this.resizeColumn.startX - event.pageX;\r\n            width = this.resizeColumn.startWidth - rtl * dx;\r\n          }\r\n          if ( this.resizeColumn.currentResizeIndex === index && width > this.minWidth ) {\r\n            this.resizeColumn.widthUpdate.next({\r\n              i: index - (this.resizeColumn.resizeHandler === 'left' ? 1 : 0),\r\n              w: width,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    );\r\n    this.resizableMouseup = this.renderer.listen(\r\n      'document',\r\n      'mouseup',\r\n      (event) => {\r\n        if (this.resizeColumn.resizeHandler !== null) {\r\n          this.resizeColumn.resizeHandler = null;\r\n          this.resizeColumn.currentResizeIndex = -1;       \r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  public expandRow(rowIndex: number, mode: boolean = true) {    \r\n    if( rowIndex === null || rowIndex === undefined) {\r\n      throw 'Row index is not defined.';      \r\n    }\r\n    if (this.expandedElement === this.tvsDataSource.allData[rowIndex]) {\r\n      this.expandedElement.option.expand = mode;    \r\n      this.expandedElement = this.expandedElement === this.tvsDataSource.allData[rowIndex] ? null : this.tvsDataSource.allData[rowIndex];    \r\n    } else {\r\n      if (this.expandedElement && this.expandedElement !== this.tvsDataSource.allData[rowIndex]) {\r\n        this.expandedElement.option.expand = false;      \r\n      }\r\n      this.expandedElement = null;      \r\n      if (mode === true) {    \r\n        // this.viewport.scrollToIndex(rowIndex, 'smooth');      \r\n        // setTimeout( () => {\r\n        //   this.expandedElement = this.expandedElement === this.dataSource.allData[rowIndex] ? null : this.dataSource.allData[rowIndex];    \r\n        //   if (this.expandedElement.option === undefined || this.expandedElement.option === null) {\r\n        //     this.expandedElement.option = { expand: false};\r\n        //   }\r\n        //   this.expandedElement.option.expand = true;\r\n        //   this.refreshGrid();\r\n        // }, 300);\r\n        this.expandedElement = this.expandedElement === this.tvsDataSource.allData[rowIndex] ? null : this.tvsDataSource.allData[rowIndex];    \r\n        if (this.expandedElement.option === undefined || this.expandedElement.option === null) {\r\n          this.expandedElement.option = { expand: false};\r\n        }\r\n        this.expandedElement.option.expand = true;\r\n      }\r\n    }    \r\n  }\r\n\r\n  onRowSelection(e, row, column: TableField<T>) {\r\n    if (this.rowSelectionMode && this.rowSelectionMode !== 'none' && column.rowSelectionable !== false) {\r\n      this.onRowSelectionChange(e, row);\r\n    }\r\n  }\r\n\r\n  onCellClick(e, row, column: TableField<T>) {    \r\n    this.onRowSelection(e, row, column);\r\n    if (column.clickable !== false) {\r\n      this.onRowEvent.emit({ event: 'CellClick', sender: {row: row, column: column} });\r\n    }\r\n  }\r\n\r\n  onRowDblClick(e, row) {    \r\n    this.onRowEvent.emit({ event: e, sender: {row: row} });\r\n  }\r\n\r\n  onRowClick(e, row) {\r\n    this.onRowEvent.emit({ event: 'RowClick', sender: {row: row} });    \r\n  }\r\n\r\n  /************************************ Drag & Drop Column *******************************************/\r\n\r\n  dragStarted(event: CdkDragStart) {\r\n    // console.log(event);    \r\n    // debugger  \r\n    // this.dragDropData.dragColumnIndex = event.source.;\r\n  }\r\n \r\n  dropListDropped(event: CdkDragDrop<string[]>) {    \r\n    if (event) {\r\n      this.dragDropData.dropColumnIndex = event.currentIndex;\r\n      this.moveColumn(event.previousIndex, event.currentIndex);\r\n    }\r\n  }\r\n\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n\r\n    // updates moved data and table, but not dynamic if more dropzones\r\n    // this.dataSource.data = clonedeep(this.dataSource.data);\r\n  }\r\n  /************************************  *******************************************/\r\n \r\n  copyProperty(from: any, to: any) {\r\n    const keys = Object.keys(from);\r\n    keys.forEach( key => {\r\n      if (from[key] !== undefined && from[key] === null) {\r\n        to[key] = Array.isArray(from[key]) ? Object.assign([], from[key]) : Object.assign({}, from[key]);\r\n      }\r\n    });\r\n  } \r\n}\r\n\r\n\r\n","import { ElementRef } from \"@angular/core\";\r\n\r\nexport function requestFullscreen(element: ElementRef) {\r\n    if (element.nativeElement.requestFullscreen) {\r\n      element.nativeElement.requestFullscreen();\r\n    } else if (element.nativeElement.webkitRequestFullscreen) { /* Safari */\r\n      element.nativeElement.webkitRequestFullscreen();\r\n    } else if (element.nativeElement.msRequestFullscreen) { /* IE11 */\r\n      element.nativeElement.msRequestFullscreen();\r\n    }\r\n  }","import { Compiler, ComponentFactoryResolver, ComponentRef, Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewContainerRef } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { DynamicMatTableComponent } from '../../dynamic-mat-table/dynamic-mat-table.component';\r\nimport { TableField } from '../../models/table-field.model';\r\nimport { IRowEvent } from '../../models/table-row.model';\r\nimport { IDynamicCell } from './IDynamicCell';\r\n\r\n@Directive({\r\n  selector: '[dynamicCell]'\r\n})\r\nexport class DynamicCellDirective implements OnInit, OnChanges, OnDestroy  {\r\n  @Input() component: any;\r\n  @Input() column: TableField<any>;\r\n  @Input() row: any;\r\n  @Input() onRowEvent: EventEmitter<IRowEvent>;  \r\n  componentRef: ComponentRef<IDynamicCell> = null;\r\n\r\n  constructor(\r\n    public compiler: Compiler,\r\n    private cfr: ComponentFactoryResolver,\r\n    private vc: ViewContainerRef,\r\n    private parent: DynamicMatTableComponent<any>\r\n    ) {}    \r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.componentRef === null || this.componentRef === undefined) {\r\n      this.initComponent();\r\n    }    \r\n    // pass input parameters\r\n    if (changes.column && changes.column.currentValue) {\r\n      this.componentRef.instance.column = this.column;\r\n    }    \r\n    if (changes.row && changes.row.currentValue) {\r\n      (this.componentRef.instance as any).row = this.row;\r\n    }\r\n    if (changes.onRowEvent && changes.onRowEvent.currentValue) {\r\n      (this.componentRef.instance as any).onRowEvent = this.onRowEvent;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.componentRef) {\r\n      this.componentRef.destroy();\r\n    }\r\n  }\r\n\r\n  initComponent() {\r\n    try{\r\n      const componentFactory = this.cfr.resolveComponentFactory<IDynamicCell>(this.component);\r\n      this.componentRef = this.vc.createComponent<IDynamicCell>(componentFactory);      \r\n      this.updateInput();\r\n    } catch (e) {\r\n      // console.log(e);\r\n    } \r\n  }\r\n\r\n  updateInput() {\r\n    if (this.parent) {\r\n      (this.componentRef.instance as IDynamicCell).parent = this.parent;\r\n    }    \r\n    if (this.column) {\r\n      this.componentRef.instance.column = this.column;\r\n    }   \r\n    if (this.row) {\r\n      (this.componentRef.instance as IDynamicCell).row = this.row;\r\n    }\r\n    if (this.onRowEvent) {\r\n      (this.componentRef.instance as IDynamicCell).onRowEvent = this.onRowEvent;\r\n    }    \r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Output, Input, EventEmitter } from '@angular/core';\r\nimport { isNullorUndefined } from '../../../cores/type';\r\nimport { ContextMenuItem } from '../../../models/context-menu.model';\r\nimport { IRowEvent } from '../../../models/table-row.model';\r\nimport { TableSetting } from '../../../models/table-setting.model';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'row-menu',\r\n  templateUrl: './row-menu.component.html',\r\n  styleUrls: ['./row-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RowMenuComponent<T> {\r\n  // @Output() rowActionChange: EventEmitter<ContextMenuItem> = new EventEmitter<ContextMenuItem>();\r\n  @Output() rowActionChange: EventEmitter<ContextMenuItem> = new EventEmitter<ContextMenuItem>();\r\n  @Input() actionMenus: ContextMenuItem[] = [];\r\n  @Input() tableSetting: TableSetting;\r\n  @Input() rowActionMenu?: { [key: string]: ContextMenuItem; };\r\n  visibleActionMenus: ContextMenuItem[] = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  menuOnClick(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    this.visibleActionMenus = [];\r\n    this.actionMenus.forEach(menu => {\r\n      const am: ContextMenuItem = isNullorUndefined(this.rowActionMenu) || isNullorUndefined(this.rowActionMenu[menu.name]) ? menu : this.rowActionMenu[menu.name];\r\n      if ( isNullorUndefined(am.visible) || am.visible) {\r\n        this.visibleActionMenus.push({\r\n          name: menu.name,\r\n          text: am.text || menu.text,\r\n          disabled: am.disabled || menu.disabled,\r\n          icon: am.icon || menu.icon,\r\n          color: am.color || menu.color\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  menuButton_OnClick(menu: ContextMenuItem) {\r\n    setTimeout(() => {\r\n      this.rowActionChange.emit(menu);\r\n    });\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { RowMenuComponent } from './row-menu.component';\r\n\r\nconst components = [RowMenuComponent];\r\n\r\n@NgModule({\r\n  declarations: [components],\r\n  exports: components,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule\r\n  ],\r\n})\r\nexport class RowMenuModule {}\r\n","import { ChangeDetectionStrategy, Component, Output, Input, EventEmitter } from '@angular/core';\r\nimport { moveItemInArray, CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { TableService } from '../../dynamic-mat-table.service';\r\nimport { TableSetting } from '../../../models/table-setting.model';\r\nimport { TableIntl } from '../../../international/table-Intl';\r\nimport { clone, deepClone, isNullorUndefined } from '../../../cores/type';\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: 'table-menu',\r\n  templateUrl: './table-menu.component.html',\r\n  styleUrls: ['./table-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TableMenuComponent {\r\n  @Output() menuActionChange: EventEmitter<TableMenuActionChange> = new EventEmitter<TableMenuActionChange>();\r\n  @Input()\r\n  get tableSetting(): TableSetting {\r\n    return this.currentTableSetting;\r\n  }\r\n  set tableSetting(value: TableSetting) {\r\n    this.originalTableSetting = value;\r\n    this.reverseDirection = value.direction === 'rtl' ? 'ltr' : 'rtl';\r\n    this.currentTableSetting = clone<TableSetting>(value);\r\n  }\r\n\r\n  currentColumn: number = null;\r\n  reverseDirection: string = null;\r\n  originalTableSetting: TableSetting;\r\n  currentTableSetting: TableSetting;\r\n\r\n  constructor(public languagePack: TableIntl, public tableService: TableService) {\r\n  }\r\n\r\n  screenMode_OnClick() {\r\n    this.menuActionChange.emit({\r\n      type: 'FullScreenMode',\r\n      data: this.currentTableSetting,\r\n    });\r\n  }\r\n\r\n  /***** Column Setting ******/\r\n  columnMenuDropped(event: CdkDragDrop<any>): void {\r\n    moveItemInArray(\r\n      this.currentTableSetting.columnSetting,\r\n      event.item.data.columnIndex,\r\n      event.currentIndex\r\n    );\r\n  }\r\n\r\n  toggleSelectedColumn(columnIndex: number) {\r\n    const colFound = this.currentTableSetting.columnSetting.find(\r\n      (col) => col.index === columnIndex\r\n    );\r\n    colFound.display = colFound.display === 'visible' ? 'hiden' : 'visible';\r\n  }\r\n\r\n  apply_OnClick(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    setTimeout(() => {\r\n      this.menuActionChange.emit({\r\n        type: 'TableSetting',\r\n        data: this.currentTableSetting,\r\n      });\r\n      this.tableService.saveColumnInfo(this.currentTableSetting.columnSetting);\r\n    });\r\n  }\r\n\r\n  setting_onClick(i) {\r\n    this.currentColumn = i;\r\n  }\r\n\r\n  cancel_OnClick() {\r\n    this.currentTableSetting = deepClone(this.originalTableSetting);\r\n  }\r\n\r\n  isVisible(visible: boolean) {\r\n    return isNullorUndefined(visible) ? true : visible;\r\n  }\r\n\r\n  /*****  Save ********/\r\n  saveSetting_OnClick() {\r\n    setTimeout(() => {\r\n      this.menuActionChange.emit({ type: 'SaveSetting' });\r\n    });\r\n  }\r\n\r\n  /*****  Filter ********/\r\n  clearFilter_OnClick() {\r\n    setTimeout(() => {\r\n      this.menuActionChange.emit({ type: 'FilterClear' });\r\n    });\r\n  }\r\n\r\n  /******* Save File ***********/\r\n  download_OnClick(type: string) {\r\n    setTimeout(() => {\r\n      this.menuActionChange.emit({ type: 'Download', data: type });\r\n    });\r\n  }\r\n\r\n  print_OnClick(menu) {\r\n    menu._overlayRef._host.parentElement.click();\r\n    setTimeout(() => {\r\n      this.menuActionChange.emit({ type: 'Print', data: null });\r\n    });\r\n  }\r\n}\r\n\r\nexport interface TableMenuActionChange {\r\n  type: 'FilterClear' | 'TableSetting' | 'Download' | 'SaveSetting' | 'Print' | 'FullScreenMode';\r\n  data?: any;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { TableMenuComponent } from './table-menu.component';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\nconst components = [TableMenuComponent];\r\n\r\n@NgModule({\r\n  declarations: [components],\r\n  exports: components,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    DragDropModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n  ],\r\n})\r\nexport class TableMenuModule {}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[filter-event]'\r\n})\r\nexport class FilterEventDirective {\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: MouseEvent) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HeaderFilterComponent } from './header-filter.component';\r\nimport { FilterEventDirective } from './filter-event.directive';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n\r\nconst components = [HeaderFilterComponent, FilterEventDirective];\r\n\r\n@NgModule({\r\n  declarations: components ,\r\n  exports: components,\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    FormsModule\r\n  ],\r\n})\r\nexport class HeaderFilterModule {}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { CdkVirtualScrollViewport, VirtualScrollStrategy } from '@angular/cdk/scrolling';\r\nimport { ListRange } from '@angular/cdk/collections';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface TSVStrategyConfigs {\r\n  rowHeight: number;\r\n  headerHeight: number;\r\n  footerHeight: number;\r\n  bufferMultiplier: number;\r\n}\r\n\r\nexport declare type TableScrollStrategy = 'fixed-size' | 'none' | null;\r\n\r\n@Injectable()\r\nexport class FixedSizeTableVirtualScrollStrategy implements VirtualScrollStrategy, OnDestroy {  \r\n  private eventsSubscription: Subscription;\r\n  private length = 0;\r\n  private rowHeight!: number;\r\n  private headerHeight!: number;\r\n  private footerHeight!: number;\r\n  private bufferMultiplier!: number;\r\n  private indexChange = new Subject<number>();\r\n  public stickyChange = new Subject<number>();\r\n  public scrollStrategyMode: TableScrollStrategy = 'fixed-size';\r\n\r\n  public viewport: CdkVirtualScrollViewport;\r\n\r\n  public renderedRangeStream = new BehaviorSubject<ListRange>({start: 0, end: 0});\r\n  public offsetChange = new BehaviorSubject(0);\r\n\r\n  public scrolledIndexChange = this.indexChange.pipe(distinctUntilChanged());\r\n\r\n  get dataLength(): number {\r\n    return this.length;\r\n  }\r\n\r\n  set dataLength(value: number) {\r\n    this.length = value;\r\n    this.onDataLengthChanged();\r\n  }\r\n\r\n  ngOnDestroy(): void {    \r\n    this.eventsSubscription.unsubscribe();\r\n  }\r\n\r\n  public attach(viewport: CdkVirtualScrollViewport): void {\r\n    this.viewport = viewport;\r\n    this.eventsSubscription = this.viewport.renderedRangeStream.subscribe(this.renderedRangeStream);\r\n    this.onDataLengthChanged();\r\n  }\r\n\r\n  public detach(): void {\r\n    this.indexChange.complete();\r\n    this.stickyChange.complete();\r\n    this.renderedRangeStream.complete();\r\n  }\r\n \r\n  public onContentScrolled(): void {\r\n    this.updateContent();\r\n  }\r\n\r\n  public onDataLengthChanged(): void {\r\n    if (this.viewport) {\r\n      this.viewport.setTotalContentSize(this.dataLength * this.rowHeight + this.headerHeight + this.footerHeight);\r\n    }\r\n    this.updateContent();\r\n  }\r\n\r\n  public onContentRendered(): void {\r\n    // no-op\r\n  }\r\n\r\n  public onRenderedOffsetChanged(): void {\r\n    // no-op\r\n  }\r\n\r\n  public scrollToIndex(index: number, behavior: ScrollBehavior): void {    \r\n    // if (this.viewport) {\r\n    //   this.viewport.scrollToOffset( this.rowHeight * index , behavior);\r\n    // }    \r\n    if (!this.viewport || !this.rowHeight) {\r\n      return;\r\n    }\r\n    this.viewport.scrollToOffset((index - 1 ) * this.rowHeight + this.headerHeight);\r\n  }\r\n\r\n  public setConfig(configs: TSVStrategyConfigs) {\r\n    const {rowHeight, headerHeight, footerHeight, bufferMultiplier} = configs;\r\n    if (\r\n      this.rowHeight === rowHeight\r\n      && this.headerHeight === headerHeight\r\n      && this.footerHeight === footerHeight\r\n      && this.bufferMultiplier === bufferMultiplier\r\n    ) {\r\n      return;\r\n    }\r\n    this.rowHeight = rowHeight;\r\n    this.headerHeight = headerHeight;\r\n    this.footerHeight = footerHeight;\r\n    this.bufferMultiplier = bufferMultiplier;\r\n    this.onDataLengthChanged();\r\n  }\r\n\r\n  // bug fixed some time viewport is zero height (i dont know why!)\r\n  public getViewportSize() {\r\n    if (this.viewport.getViewportSize() === 0) {      \r\n      return this.viewport.elementRef.nativeElement.clientHeight + 52;\r\n    } else {\r\n      return this.viewport.getViewportSize();\r\n    }\r\n  }\r\n\r\n  private updateContent() {    \r\n    if (!this.viewport || !this.rowHeight) {\r\n      return;\r\n    }\r\n    let start = 0;\r\n    let end = this.dataLength;   \r\n\r\n    if ( this.scrollStrategyMode === 'none' && this.viewport.getRenderedRange().start  === start && this.viewport.getRenderedRange().end  === end ) {\r\n      return;\r\n    } \r\n\r\n    const scrollOffset = this.viewport.measureScrollOffset();\r\n    const amount = Math.ceil(this.getViewportSize() / this.rowHeight);\r\n    const offset = Math.max(scrollOffset - this.headerHeight, 0);    \r\n    const buffer = Math.ceil(amount * this.bufferMultiplier);\r\n\r\n    const skip = Math.round(offset / this.rowHeight);\r\n    const index = Math.max(0, skip);    \r\n     \r\n    if (this.scrollStrategyMode === 'fixed-size') {\r\n      start = Math.max(0, index - buffer);\r\n      end = Math.min(this.dataLength, index + amount + buffer);\r\n    }\r\n    const renderedOffset = start * this.rowHeight;    \r\n    \r\n    this.viewport.setRenderedContentOffset(renderedOffset);\r\n    this.viewport.setRenderedRange({start, end});    \r\n    this.indexChange.next(index);\r\n    this.stickyChange.next(renderedOffset);\r\n    this.offsetChange.next(offset)\r\n  }\r\n}\r\n","import { AfterContentInit, ContentChild, Directive, forwardRef,\r\n         Input, NgZone, OnChanges, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { VIRTUAL_SCROLL_STRATEGY } from '@angular/cdk/scrolling';\r\nimport { distinctUntilChanged, filter, map, switchMap, takeUntil, takeWhile, tap } from 'rxjs/operators';\r\nimport { TableVirtualScrollDataSource } from './table-data-source';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { FixedSizeTableVirtualScrollStrategy } from './fixed-size-table-virtual-scroll-strategy';\r\nimport { CdkHeaderRowDef } from '@angular/cdk/table';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\nexport function _tableVirtualScrollDirectiveStrategyFactory(tableDir: TableItemSizeDirective) {\r\n  return tableDir.scrollStrategy;\r\n}\r\n\r\nconst stickyHeaderSelector = '.mat-header-row .mat-table-sticky';\r\nconst stickyFooterSelector = '.mat-footer-row .mat-table-sticky';\r\n\r\nconst defaults = {\r\n  rowHeight: 48,\r\n  headerHeight: 56,\r\n  headerEnabled: true,\r\n  footerHeight: 48,\r\n  footerEnabled: false,\r\n  bufferMultiplier: 0.7\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'cdk-virtual-scroll-viewport[tvsItemSize]',\r\n  providers: [{\r\n    provide: VIRTUAL_SCROLL_STRATEGY,\r\n    useFactory: _tableVirtualScrollDirectiveStrategyFactory,\r\n    deps: [forwardRef(() => TableItemSizeDirective)]\r\n  }]\r\n})\r\nexport class TableItemSizeDirective implements OnChanges, AfterContentInit, OnDestroy {\r\n  private alive = true;\r\n\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('tvsItemSize')\r\n  rowHeight = defaults.rowHeight;\r\n\r\n  @Input()\r\n  headerEnabled = defaults.headerEnabled;\r\n\r\n  @Input()\r\n  headerHeight = defaults.headerHeight;\r\n\r\n  @Input()\r\n  footerEnabled = defaults.footerEnabled;\r\n\r\n  @Input()\r\n  footerHeight = defaults.footerHeight;\r\n\r\n  @Input()\r\n  bufferMultiplier = defaults.bufferMultiplier;\r\n\r\n  @ContentChild(MatTable, { static: true }) table: MatTable<any>;\r\n\r\n  // @Output() requestRendering: EventEmitter<any> = new EventEmitter();\r\n\r\n  scrollStrategy = new FixedSizeTableVirtualScrollStrategy();\r\n\r\n  dataSourceChanges = new Subject<void>();\r\n  private stickyPositions: Map<HTMLElement, number>;\r\n\r\n  constructor(private zone: NgZone) {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n    this.dataSourceChanges.complete();\r\n  }\r\n\r\n  private isAlive() {\r\n    return () => this.alive;\r\n  }\r\n\r\n  private isStickyEnabled(): boolean {\r\n    return !!this.scrollStrategy.viewport && ((this.table as any)._headerRowDefs as CdkHeaderRowDef[])\r\n      .map(def => def.sticky)\r\n      .reduce((prevState, state) => prevState && state, true);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    const switchDataSourceOrigin = (this.table as any)._switchDataSource;\r\n    (this.table as any)._switchDataSource = (dataSource: any) => {\r\n      switchDataSourceOrigin.call(this.table, dataSource);\r\n      this.connectDataSource(dataSource);\r\n    };\r\n\r\n    this.connectDataSource(this.table.dataSource);\r\n\r\n    this.scrollStrategy.stickyChange\r\n      .pipe(\r\n        filter(() => this.isStickyEnabled()),\r\n        tap(() => {\r\n          if (!this.stickyPositions) {\r\n            this.initStickyPositions();\r\n          }\r\n        }),\r\n        takeWhile(this.isAlive())\r\n      )\r\n      .subscribe((stickyOffset) => {\r\n        this.setSticky(stickyOffset);\r\n      });\r\n  }\r\n\r\n  connectDataSource(dataSource: any) {\r\n      this.dataSourceChanges.next();\r\n      if (dataSource instanceof TableVirtualScrollDataSource) {\r\n        dataSource\r\n          .dataToRender$\r\n          .pipe(\r\n            distinctUntilChanged(),\r\n            takeUntil(this.dataSourceChanges),\r\n            takeWhile(this.isAlive()),\r\n            tap(data => this.scrollStrategy.dataLength = data.length),\r\n            switchMap(data =>\r\n              this.scrollStrategy\r\n                .renderedRangeStream\r\n                .pipe(\r\n                   map(({ start, end }) => {\r\n                    // this.requestRendering.emit({from: start, to: end});\r\n                    return typeof start !== 'number' || typeof end !== 'number' ? data : data.slice(start, end);\r\n                   })                  \r\n                )\r\n            )\r\n          )\r\n          .subscribe(data => {\r\n            this.zone.run(() => {\r\n              dataSource.dataOfRange$.next(data);\r\n            });\r\n          });\r\n      } else {\r\n        throw new Error('[tvsItemSize] requires TableVirtualScrollDataSource be set as [dataSource] of [mat-table]');\r\n      }    \r\n  }\r\n\r\n  ngOnChanges() {\r\n    const config = {\r\n      rowHeight: +this.rowHeight || defaults.rowHeight,\r\n      headerHeight: this.headerEnabled ? +this.headerHeight || defaults.headerHeight : 0,\r\n      footerHeight: this.footerEnabled ? +this.footerHeight || defaults.footerHeight : 0,\r\n      bufferMultiplier: +this.bufferMultiplier || defaults.bufferMultiplier\r\n    };\r\n    this.scrollStrategy.setConfig(config);\r\n  }\r\n\r\n\r\n  // setSticky(offset) {\r\n  //   // fixed bug when sticky true for header and one column. column scroll front of header. becuse of z-index\r\n  //   let topOffset = -offset;\r\n  //   this.scrollStrategy.viewport.elementRef.nativeElement.querySelectorAll('mat-header-row.mat-table-sticky')\r\n  //     .forEach((el: HTMLElement) => {\r\n  //       el.style.top = `${topOffset}px`;\r\n  //       topOffset += el.offsetHeight;\r\n  //       if (el.style.zIndex !== null ) {\r\n  //         el.style.zIndex = '1000';\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  setSticky(offset) {\r\n    this.scrollStrategy.viewport.elementRef.nativeElement.querySelectorAll(stickyHeaderSelector)\r\n      .forEach((el: HTMLElement) => {\r\n        const parent = el.parentElement;\r\n        let baseOffset = 0;\r\n        if (this.stickyPositions.has(parent)) {\r\n          baseOffset = this.stickyPositions.get(parent);\r\n        }\r\n        el.style.top = `${baseOffset - offset}px`;\r\n      });\r\n    this.scrollStrategy.viewport.elementRef.nativeElement.querySelectorAll(stickyFooterSelector)\r\n      .forEach((el: HTMLElement) => {\r\n        const parent = el.parentElement;\r\n        let baseOffset = 0;\r\n        if (this.stickyPositions.has(parent)) {\r\n          baseOffset = this.stickyPositions.get(parent);\r\n        }\r\n        el.style.bottom = `${-baseOffset + offset}px`;\r\n      });\r\n  }\r\n\r\n  private initStickyPositions() {\r\n    this.stickyPositions = new Map<HTMLElement, number>();\r\n    this.scrollStrategy.viewport.elementRef.nativeElement.querySelectorAll(stickyHeaderSelector)\r\n      .forEach(el => {\r\n        const parent = el.parentElement;\r\n        if (!this.stickyPositions.has(parent)) {\r\n          this.stickyPositions.set(parent, parent.offsetTop);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TableItemSizeDirective } from './table-item-size.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TableItemSizeDirective\r\n   ],\r\n  imports: [],\r\n  exports: [TableItemSizeDirective]\r\n})\r\nexport class TableVirtualScrollModule {\r\n}\r\n","import { Component, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'dm-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss'],\n})\nexport class ToolbarComponent implements OnInit, OnChanges {\n  @Input() itemList: ToolbarItem[] = [];\n  @Input() color: string = null;\n  @Input() direction: 'ltr' | 'rtl' = 'ltr';\n  @Output() actionClick = new EventEmitter<ToolbarItem>();\n\n  @HostListener('document:keyup', ['$event'])\n  onKeyup(e: KeyboardEvent) {    \n  }\n\n  normalItemList: ToolbarItem[] = [];\n  floatItemList: ToolbarItem[] = [];\n\n  constructor(public _el:ElementRef) {    \n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes.itemList && this.itemList) {\n      this.normalItemList = this.itemList.filter( item => item.float === undefined || item.float == false);\n      this.floatItemList = this.itemList.filter( item => item?.float == true);\n    }\n  }\n\n  ngOnInit() {}\n\n  item_onClick(item: ToolbarItem) {\n    this.actionClick.emit(item);\n  }\n}\n\nexport interface ToolbarItem {\n  id: number;\n  name?: string;\n  tooltip?: string;\n  matIcon?: string;\n  matIconColor?: string;\n  svgIcon?: string;\n  splitter?: boolean;\n  disable?: boolean;\n  float?: boolean;\n}\n\n\n","import { Compiler, CompilerFactory, COMPILER_OPTIONS, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatPaginatorIntl, MatPaginatorModule} from '@angular/material/paginator';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { TableIntl } from '../international/table-Intl';\r\nimport { TableCoreDirective } from '../cores/table.core.directive';\r\nimport { RowMenuModule } from './extensions/row-menu/row-menu.module';\r\nimport { DynamicMatTableComponent } from './dynamic-mat-table.component';\r\nimport { TableMenuModule } from './extensions/table-menu/table-menu.module';\r\nimport { HeaderFilterModule } from './extensions/filter/header-filter.module';\r\nimport { TableVirtualScrollModule } from '../cores/table-virtual-scroll.module';\r\nimport { PrintTableDialogComponent } from './extensions/print-dialog/print-dialog.component';\r\nimport { DynamicCellDirective } from '../cores/dynamic-cell/dynamic-cell.directive';\r\nimport { JitCompilerFactory } from '@angular/platform-browser-dynamic';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ToolbarComponent } from './extensions/toolbar/toolbar.component';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\nexport function createCompiler(compilerFactory: CompilerFactory): Compiler {\r\n  return compilerFactory.createCompiler();\r\n}\r\n\r\nexport function paginatorLabels(tableIntl: TableIntl) {\r\n  const paginatorIntl = new MatPaginatorIntl();\r\n  // paginatorIntl.itemsPerPageLabel = 'آیتم در هر صفحه:';\r\n  // paginatorIntl.nextPageLabel = 'صفحه بعد';\r\n  // paginatorIntl.previousPageLabel = 'صفحه قبل';\r\n  paginatorIntl.getRangeLabel = paginatorIntl.getRangeLabel;\r\n\r\n  return paginatorIntl || null;\r\n}\r\n\r\nconst ExtentionsModule = [HeaderFilterModule, RowMenuModule];\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    ScrollingModule,\r\n    TableVirtualScrollModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSortModule,\r\n    MatProgressBarModule,\r\n    MatIconModule,\r\n    DragDropModule,\r\n    TableMenuModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatDividerModule,\r\n    MatTooltipModule,\r\n    MatRippleModule,\r\n    ExtentionsModule,\r\n    // NoopAnimationsModule\r\n  ],\r\n  exports: [DynamicMatTableComponent, ToolbarComponent],\r\n  providers: [\r\n    // bugfixed in library compiler not load and must create library\r\n    {provide: COMPILER_OPTIONS, useValue: {}, multi: true},\r\n    {provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS]},\r\n    {provide: Compiler, useFactory: createCompiler, deps: [CompilerFactory]},\r\n    TableIntl,\r\n    {\r\n      provide: MatPaginatorIntl,\r\n      useFactory: paginatorLabels,\r\n      deps: [TableIntl],\r\n    },\r\n  ],\r\n  declarations: [\r\n    DynamicMatTableComponent,\r\n    PrintTableDialogComponent,\r\n    ToolbarComponent,\r\n    TableCoreDirective,\r\n    DynamicCellDirective\r\n  ],\r\n  entryComponents: [PrintTableDialogComponent],\r\n})\r\nexport class DynamicMatTableModule {}\r\n"]}