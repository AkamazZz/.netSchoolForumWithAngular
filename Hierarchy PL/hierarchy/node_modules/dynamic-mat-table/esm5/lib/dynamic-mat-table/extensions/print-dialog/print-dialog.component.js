/**
 * @fileoverview added by tsickle
 * Generated from: lib/dynamic-mat-table/extensions/print-dialog/print-dialog.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ElementRef, Inject } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
// tslint:disable-next-line:max-line-length
/** @type {?} */
var styles = 'body{margin:15px;}table{width:100%;border-collapse:collapse;}h2{text-align:center;}th.mat-header-cell{text-align:center;}div{text-align:center;margin:30px }tr{border-bottom:1px solid }td,th{padding:10px; text-align: center }.param-list{text-align: left;border:solid gray;border-width: 0px 0px 2px 0;margin-bottom: 10px;padding-bottom: 10px;}.param {display: inline-block;margin: 10px;}';
var PrintTableDialogComponent = /** @class */ (function () {
    function PrintTableDialogComponent(dialogRef, printTable) {
        this.dialogRef = dialogRef;
        this.printTable = printTable;
    }
    /**
     * @return {?}
     */
    PrintTableDialogComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    PrintTableDialogComponent.prototype.print = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var dialogConfig = 'width=600,height=700,scrollbars=no,menubar=no,toolbar=no,location=no,status=no,titlebar=no';
            /** @type {?} */
            var printDoc = "\n    <html>\n      <head>\n        <style> " + styles + " </style>\n      </head>\n      <body onload=\"window.print();\" onafterprint=\"window.close()\">\n        " + _this.printContentRef.nativeElement.innerHTML + "\n      </body>\n    </html>\n    ";
            /** @type {?} */
            var popupWinindow = window.open('', '_blank', dialogConfig);
            popupWinindow.document.write(printDoc);
            popupWinindow.document.close();
        }));
    };
    PrintTableDialogComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: 'print-dialog',
                    template: "<mat-dialog-content>\r\n<div dir='{{ printTable.direction }}' #printContentRef>\r\n  <h2>\r\n      {{ printTable?.title }}\r\n  </h2>\r\n  <div class=\"param-list\">\r\n      <div class=\"param\" *ngFor='let param of printTable?.userPrintParameters'>\r\n         <b>{{ param.key }} </b> : {{ param.value }}\r\n      </div>\r\n      <div class=\"param\" *ngFor='let param of printTable?.tablePrintParameters'>\r\n        <b>{{ param.key }} </b> : {{ param.value }}\r\n     </div>\r\n  </div>\r\n  <table class=\"print-table\" mat-table [dataSource]=\"printTable.data\">\r\n      <ng-container *ngFor=\"let column of printTable.columns\" matColumnDef=\"{{ column.name }}\">\r\n        <th mat-header-cell *matHeaderCellDef> {{ column.header }} </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{ row[column.name] }} </td>\r\n      </ng-container>\r\n      <tr mat-header-row *matHeaderRowDef=\"printTable.displayedFields\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: printTable.displayedFields;\"></tr>\r\n  </table>\r\n</div>\r\n\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial (click)=\"print()\">Print</button>\r\n</mat-dialog-actions>\r\n\r\n",
                    styles: ["#print-section{text-align:center;margin:30px}h2{text-align:center}.param-list{width:100%;display:inline-block;border:solid gray;border-width:0 0 2px;margin-bottom:10px;padding-bottom:10px}.param{display:inline-block;margin:10px}.print-table{width:100%}.print-table th.mat-header-cell{font-size:initial}"]
                }] }
    ];
    /** @nocollapse */
    PrintTableDialogComponent.ctorParameters = function () { return [
        { type: MatDialogRef },
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    PrintTableDialogComponent.propDecorators = {
        printContentRef: [{ type: ViewChild, args: ['printContentRef', { static: true },] }]
    };
    return PrintTableDialogComponent;
}());
export { PrintTableDialogComponent };
if (false) {
    /** @type {?} */
    PrintTableDialogComponent.prototype.printContentRef;
    /** @type {?} */
    PrintTableDialogComponent.prototype.dialogRef;
    /** @type {?} */
    PrintTableDialogComponent.prototype.printTable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpbnQtZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2R5bmFtaWMtbWF0LXRhYmxlLyIsInNvdXJjZXMiOlsibGliL2R5bmFtaWMtbWF0LXRhYmxlL2V4dGVuc2lvbnMvcHJpbnQtZGlhbG9nL3ByaW50LWRpYWxvZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxZQUFZLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7OztJQUluRSxNQUFNLEdBQUcsbVlBQW1ZO0FBRWxaO0lBU0UsbUNBQW9CLFNBQWtELEVBQWtDLFVBQXVCO1FBQTNHLGNBQVMsR0FBVCxTQUFTLENBQXlDO1FBQWtDLGVBQVUsR0FBVixVQUFVLENBQWE7SUFBRyxDQUFDOzs7O0lBRW5JLDRDQUFROzs7SUFBUjtJQUNBLENBQUM7Ozs7SUFFRCx5Q0FBSzs7O0lBQUw7UUFBQSxpQkFrQkM7UUFqQkMsVUFBVTs7O1FBQUM7O2dCQUNILFlBQVksR0FBRyw0RkFBNEY7O2dCQUMzRyxRQUFRLEdBQUcsaURBR0wsTUFBTSxtSEFHZCxLQUFJLENBQUMsZUFBZSxDQUFDLGFBQWEsQ0FBQyxTQUFTLHVDQUdqRDs7Z0JBRU8sYUFBYSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxZQUFZLENBQUM7WUFDN0QsYUFBYSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDdkMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNqQyxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7O2dCQWhDRixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxjQUFjO29CQUN4Qix3eUNBQTRDOztpQkFFN0M7Ozs7Z0JBWFEsWUFBWTtnREFlc0QsTUFBTSxTQUFDLGVBQWU7OztrQ0FGOUYsU0FBUyxTQUFDLGlCQUFpQixFQUFFLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQzs7SUEyQjlDLGdDQUFDO0NBQUEsQUFsQ0QsSUFrQ0M7U0E1QlkseUJBQXlCOzs7SUFDcEMsb0RBQTRFOztJQUUvRCw4Q0FBeUQ7O0lBQUUsK0NBQXVEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdDaGlsZCwgRWxlbWVudFJlZiwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1hdERpYWxvZ1JlZiwgTUFUX0RJQUxPR19EQVRBIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcclxuaW1wb3J0IHsgUHJpbnRDb25maWcgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvcHJpbnQtY29uZmlnLm1vZGVsJztcclxuXHJcbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTptYXgtbGluZS1sZW5ndGhcclxuY29uc3Qgc3R5bGVzID0gJ2JvZHl7bWFyZ2luOjE1cHg7fXRhYmxle3dpZHRoOjEwMCU7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO31oMnt0ZXh0LWFsaWduOmNlbnRlcjt9dGgubWF0LWhlYWRlci1jZWxse3RleHQtYWxpZ246Y2VudGVyO31kaXZ7dGV4dC1hbGlnbjpjZW50ZXI7bWFyZ2luOjMwcHggfXRye2JvcmRlci1ib3R0b206MXB4IHNvbGlkIH10ZCx0aHtwYWRkaW5nOjEwcHg7IHRleHQtYWxpZ246IGNlbnRlciB9LnBhcmFtLWxpc3R7dGV4dC1hbGlnbjogbGVmdDtib3JkZXI6c29saWQgZ3JheTtib3JkZXItd2lkdGg6IDBweCAwcHggMnB4IDA7bWFyZ2luLWJvdHRvbTogMTBweDtwYWRkaW5nLWJvdHRvbTogMTBweDt9LnBhcmFtIHtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7bWFyZ2luOiAxMHB4O30nO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBjb21wb25lbnQtc2VsZWN0b3JcclxuICBzZWxlY3RvcjogJ3ByaW50LWRpYWxvZycsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3ByaW50LWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vcHJpbnQtZGlhbG9nLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFByaW50VGFibGVEaWFsb2dDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBWaWV3Q2hpbGQoJ3ByaW50Q29udGVudFJlZicsIHtzdGF0aWM6IHRydWV9KSBwcmludENvbnRlbnRSZWYgITogRWxlbWVudFJlZjtcclxuXHJcbiAgY29uc3RydWN0b3IoIHB1YmxpYyBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxQcmludFRhYmxlRGlhbG9nQ29tcG9uZW50PiwgQEluamVjdChNQVRfRElBTE9HX0RBVEEpIHB1YmxpYyBwcmludFRhYmxlOiBQcmludENvbmZpZykge31cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgfVxyXG5cclxuICBwcmludCgpIHtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBjb25zdCBkaWFsb2dDb25maWcgPSAnd2lkdGg9NjAwLGhlaWdodD03MDAsc2Nyb2xsYmFycz1ubyxtZW51YmFyPW5vLHRvb2xiYXI9bm8sbG9jYXRpb249bm8sc3RhdHVzPW5vLHRpdGxlYmFyPW5vJztcclxuICAgICAgY29uc3QgcHJpbnREb2MgPSBgXHJcbiAgICA8aHRtbD5cclxuICAgICAgPGhlYWQ+XHJcbiAgICAgICAgPHN0eWxlPiAke3N0eWxlc30gPC9zdHlsZT5cclxuICAgICAgPC9oZWFkPlxyXG4gICAgICA8Ym9keSBvbmxvYWQ9XCJ3aW5kb3cucHJpbnQoKTtcIiBvbmFmdGVycHJpbnQ9XCJ3aW5kb3cuY2xvc2UoKVwiPlxyXG4gICAgICAgICR7dGhpcy5wcmludENvbnRlbnRSZWYubmF0aXZlRWxlbWVudC5pbm5lckhUTUx9XHJcbiAgICAgIDwvYm9keT5cclxuICAgIDwvaHRtbD5cclxuICAgIGA7XHJcblxyXG4gICAgICBjb25zdCBwb3B1cFdpbmluZG93ID0gd2luZG93Lm9wZW4oJycsICdfYmxhbmsnLCBkaWFsb2dDb25maWcpO1xyXG4gICAgICBwb3B1cFdpbmluZG93LmRvY3VtZW50LndyaXRlKHByaW50RG9jKTtcclxuICAgICAgcG9wdXBXaW5pbmRvdy5kb2N1bWVudC5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=