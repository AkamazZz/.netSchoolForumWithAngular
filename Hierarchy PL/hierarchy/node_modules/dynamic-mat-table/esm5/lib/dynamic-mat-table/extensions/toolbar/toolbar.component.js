/**
 * @fileoverview added by tsickle
 * Generated from: lib/dynamic-mat-table/extensions/toolbar/toolbar.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';
var ToolbarComponent = /** @class */ (function () {
    function ToolbarComponent(_el) {
        this._el = _el;
        this.itemList = [];
        this.color = null;
        this.direction = 'ltr';
        this.actionClick = new EventEmitter();
        this.normalItemList = [];
        this.floatItemList = [];
    }
    /**
     * @param {?} e
     * @return {?}
     */
    ToolbarComponent.prototype.onKeyup = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    ToolbarComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.itemList && this.itemList) {
            this.normalItemList = this.itemList.filter((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.float === undefined || item.float == false; }));
            this.floatItemList = this.itemList.filter((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return (item === null || item === void 0 ? void 0 : item.float) == true; }));
        }
    };
    /**
     * @return {?}
     */
    ToolbarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} item
     * @return {?}
     */
    ToolbarComponent.prototype.item_onClick = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        this.actionClick.emit(item);
    };
    ToolbarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'dm-toolbar',
                    template: "<div class=\"toolbar\">\n  <div *ngFor=\"let item of normalItemList\" class=\"item\">\n    <a *ngIf=\"item?.splitter\" class=\"splitter\"></a>\n    <div  \n      matRipple\n      [matRippleColor]=\"color\"\n      class=\"toolbar-item\"\n      (click)=\"item_onClick(item)\"    \n      [matTooltip]=\"item?.tooltip\" \n      matTooltipClass=\"custom-tooltip\">  \n      <mat-icon *ngIf=\"item.matIcon\" [style.color]=\"item?.matIconColor\">{{\n        item.matIcon\n      }}</mat-icon>\n    </div>\n  </div>\n  <div [class.float-right]=\"direction === 'ltr'\" [class.float-left]=\"direction === 'rtl'\">\n    <div *ngFor=\"let item of floatItemList\">\n      <a *ngIf=\"item?.splitter\" class=\"splitter\"></a>\n      <div  \n        matRipple\n        [matRippleColor]=\"color\"\n        class=\"toolbar-item\"\n        (click)=\"item_onClick(item)\"    \n        [matTooltip]=\"item?.tooltip\" \n        matTooltipClass=\"custom-tooltip\">  \n        <mat-icon *ngIf=\"item.matIcon\" [style.color]=\"item?.matIconColor\">\n          {{item.matIcon}}</mat-icon>\n      </div>\n    </div>\n  </div>\n</div> \n<!-- {{ _el?.nativeElement?.scrollWidth}} \n{{ _el?.nativeElement?.offsetWidth}}  -->",
                    styles: [":host{background-image:linear-gradient(#f5f5f5,#e4e3e3,#fafafa);min-height:42px;border-radius:8px;border:1px solid #adadad;box-sizing:border-box;overflow:hidden}.toolbar{display:flex;align-items:center;flex-direction:row;align-self:stretch;height:calc(100% - 8px);margin-top:3px}.item{height:100%}.toolbar-item{width:34px;height:100%;border-radius:8px;background-color:#ffffffa6;border:1px solid #b0b0b0;margin-right:8px;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer}.toolbar-item:hover{background-color:#fff!important}.toolbar-item mat-icon{font-size:32px;height:100%;width:100%;text-align:center}.splitter{background-color:#b0b0b0;min-height:100%;min-width:2px;margin-right:8px;float:left;-webkit-user-select:none;-moz-user-select:none;user-select:none}::ng-deep .custom-tooltip{background-color:#fff!important;color:#000!important;border:1px solid #adadad;margin-top:-1px!important;margin-left:5px!important;text-align:center!important;font-family:IRANSans;font-weight:700;font-size:12px;min-width:100px}.float-right{margin-left:auto;display:flex;height:100%}.float-right .toolbar-item{margin-right:4px}.float-left{margin-right:auto;display:flex;height:100%}.float-left .toolbar-item{margin-left:4px}"]
                }] }
    ];
    /** @nocollapse */
    ToolbarComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ToolbarComponent.propDecorators = {
        itemList: [{ type: Input }],
        color: [{ type: Input }],
        direction: [{ type: Input }],
        actionClick: [{ type: Output }],
        onKeyup: [{ type: HostListener, args: ['document:keyup', ['$event'],] }]
    };
    return ToolbarComponent;
}());
export { ToolbarComponent };
if (false) {
    /** @type {?} */
    ToolbarComponent.prototype.itemList;
    /** @type {?} */
    ToolbarComponent.prototype.color;
    /** @type {?} */
    ToolbarComponent.prototype.direction;
    /** @type {?} */
    ToolbarComponent.prototype.actionClick;
    /** @type {?} */
    ToolbarComponent.prototype.normalItemList;
    /** @type {?} */
    ToolbarComponent.prototype.floatItemList;
    /** @type {?} */
    ToolbarComponent.prototype._el;
}
/**
 * @record
 */
export function ToolbarItem() { }
if (false) {
    /** @type {?} */
    ToolbarItem.prototype.id;
    /** @type {?|undefined} */
    ToolbarItem.prototype.name;
    /** @type {?|undefined} */
    ToolbarItem.prototype.tooltip;
    /** @type {?|undefined} */
    ToolbarItem.prototype.matIcon;
    /** @type {?|undefined} */
    ToolbarItem.prototype.matIconColor;
    /** @type {?|undefined} */
    ToolbarItem.prototype.svgIcon;
    /** @type {?|undefined} */
    ToolbarItem.prototype.splitter;
    /** @type {?|undefined} */
    ToolbarItem.prototype.disable;
    /** @type {?|undefined} */
    ToolbarItem.prototype.float;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9keW5hbWljLW1hdC10YWJsZS8iLCJzb3VyY2VzIjpbImxpYi9keW5hbWljLW1hdC10YWJsZS9leHRlbnNpb25zL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUVuSTtJQWtCRSwwQkFBbUIsR0FBYztRQUFkLFFBQUcsR0FBSCxHQUFHLENBQVc7UUFaeEIsYUFBUSxHQUFrQixFQUFFLENBQUM7UUFDN0IsVUFBSyxHQUFXLElBQUksQ0FBQztRQUNyQixjQUFTLEdBQWtCLEtBQUssQ0FBQztRQUNoQyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFlLENBQUM7UUFNeEQsbUJBQWMsR0FBa0IsRUFBRSxDQUFDO1FBQ25DLGtCQUFhLEdBQWtCLEVBQUUsQ0FBQztJQUdsQyxDQUFDOzs7OztJQVBELGtDQUFPOzs7O0lBRFAsVUFDUSxDQUFnQjtJQUN4QixDQUFDOzs7OztJQVFELHNDQUFXOzs7O0lBQVgsVUFBWSxPQUFzQjtRQUNoQyxJQUFHLE9BQU8sQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNwQyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTTs7OztZQUFFLFVBQUEsSUFBSSxJQUFJLE9BQUEsSUFBSSxDQUFDLEtBQUssS0FBSyxTQUFTLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxLQUFLLEVBQS9DLENBQStDLEVBQUMsQ0FBQztZQUNyRyxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTTs7OztZQUFFLFVBQUEsSUFBSSxJQUFJLE9BQUEsQ0FBQSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsS0FBSyxLQUFJLElBQUksRUFBbkIsQ0FBbUIsRUFBQyxDQUFDO1NBQ3pFO0lBQ0gsQ0FBQzs7OztJQUVELG1DQUFROzs7SUFBUixjQUFZLENBQUM7Ozs7O0lBRWIsdUNBQVk7Ozs7SUFBWixVQUFhLElBQWlCO1FBQzVCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlCLENBQUM7O2dCQWhDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLHFyQ0FBdUM7O2lCQUV4Qzs7OztnQkFObUIsVUFBVTs7OzJCQVEzQixLQUFLO3dCQUNMLEtBQUs7NEJBQ0wsS0FBSzs4QkFDTCxNQUFNOzBCQUVOLFlBQVksU0FBQyxnQkFBZ0IsRUFBRSxDQUFDLFFBQVEsQ0FBQzs7SUFzQjVDLHVCQUFDO0NBQUEsQUFqQ0QsSUFpQ0M7U0E1QlksZ0JBQWdCOzs7SUFDM0Isb0NBQXNDOztJQUN0QyxpQ0FBOEI7O0lBQzlCLHFDQUEwQzs7SUFDMUMsdUNBQXdEOztJQU14RCwwQ0FBbUM7O0lBQ25DLHlDQUFrQzs7SUFFdEIsK0JBQXFCOzs7OztBQWlCbkMsaUNBVUM7OztJQVRDLHlCQUFXOztJQUNYLDJCQUFjOztJQUNkLDhCQUFpQjs7SUFDakIsOEJBQWlCOztJQUNqQixtQ0FBc0I7O0lBQ3RCLDhCQUFpQjs7SUFDakIsK0JBQW1COztJQUNuQiw4QkFBa0I7O0lBQ2xCLDRCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBIb3N0TGlzdGVuZXIsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgT3V0cHV0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2RtLXRvb2xiYXInLFxuICB0ZW1wbGF0ZVVybDogJy4vdG9vbGJhci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Rvb2xiYXIuY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgVG9vbGJhckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgaXRlbUxpc3Q6IFRvb2xiYXJJdGVtW10gPSBbXTtcbiAgQElucHV0KCkgY29sb3I6IHN0cmluZyA9IG51bGw7XG4gIEBJbnB1dCgpIGRpcmVjdGlvbjogJ2x0cicgfCAncnRsJyA9ICdsdHInO1xuICBAT3V0cHV0KCkgYWN0aW9uQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPFRvb2xiYXJJdGVtPigpO1xuXG4gIEBIb3N0TGlzdGVuZXIoJ2RvY3VtZW50OmtleXVwJywgWyckZXZlbnQnXSlcbiAgb25LZXl1cChlOiBLZXlib2FyZEV2ZW50KSB7ICAgIFxuICB9XG5cbiAgbm9ybWFsSXRlbUxpc3Q6IFRvb2xiYXJJdGVtW10gPSBbXTtcbiAgZmxvYXRJdGVtTGlzdDogVG9vbGJhckl0ZW1bXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBfZWw6RWxlbWVudFJlZikgeyAgICBcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZihjaGFuZ2VzLml0ZW1MaXN0ICYmIHRoaXMuaXRlbUxpc3QpIHtcbiAgICAgIHRoaXMubm9ybWFsSXRlbUxpc3QgPSB0aGlzLml0ZW1MaXN0LmZpbHRlciggaXRlbSA9PiBpdGVtLmZsb2F0ID09PSB1bmRlZmluZWQgfHwgaXRlbS5mbG9hdCA9PSBmYWxzZSk7XG4gICAgICB0aGlzLmZsb2F0SXRlbUxpc3QgPSB0aGlzLml0ZW1MaXN0LmZpbHRlciggaXRlbSA9PiBpdGVtPy5mbG9hdCA9PSB0cnVlKTtcbiAgICB9XG4gIH1cblxuICBuZ09uSW5pdCgpIHt9XG5cbiAgaXRlbV9vbkNsaWNrKGl0ZW06IFRvb2xiYXJJdGVtKSB7XG4gICAgdGhpcy5hY3Rpb25DbGljay5lbWl0KGl0ZW0pO1xuICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVG9vbGJhckl0ZW0ge1xuICBpZDogbnVtYmVyO1xuICBuYW1lPzogc3RyaW5nO1xuICB0b29sdGlwPzogc3RyaW5nO1xuICBtYXRJY29uPzogc3RyaW5nO1xuICBtYXRJY29uQ29sb3I/OiBzdHJpbmc7XG4gIHN2Z0ljb24/OiBzdHJpbmc7XG4gIHNwbGl0dGVyPzogYm9vbGVhbjtcbiAgZGlzYWJsZT86IGJvb2xlYW47XG4gIGZsb2F0PzogYm9vbGVhbjtcbn1cblxuXG4iXX0=