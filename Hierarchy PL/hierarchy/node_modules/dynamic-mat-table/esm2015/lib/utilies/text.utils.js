/**
 * @fileoverview added by tsickle
 * Generated from: lib/utilies/text.utils.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Simplifies a string (trims and lowerCases)
 * @param {?} s
 * @return {?}
 */
export function simplify(s) {
    return `${s}`.trim().toLowerCase();
}
/**
 * Transforms a camelCase string into a readable text format
 * \@example textify('helloWorld!')
 * // Hello world!
 * @param {?} text
 * @return {?}
 */
export function textify(text) {
    return text
        .replace(/([A-Z])/g, (/**
     * @param {?} char
     * @return {?}
     */
    char => ` ${char.toLowerCase()}`))
        .replace(/^([a-z])/, (/**
     * @param {?} char
     * @return {?}
     */
    char => char.toUpperCase()));
}
/**
 * Transforms a text string into a title case text format
 * \@example titleCase('hello world!')
 * // Hello Workd!
 * @param {?} value
 * @return {?}
 */
export function titleCase(value) {
    /** @type {?} */
    const sentence = value.toLowerCase().split(' ');
    for (let i = 0; i < sentence.length; i++) {
        sentence[i] = sentence[i][0].toUpperCase() + sentence[i].slice(1);
    }
    return sentence.join(' ');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC51dGlscy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2R5bmFtaWMtbWF0LXRhYmxlLyIsInNvdXJjZXMiOlsibGliL3V0aWxpZXMvdGV4dC51dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBR0EsTUFBTSxVQUFVLFFBQVEsQ0FBQyxDQUFTO0lBQ2hDLE9BQU8sR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNyQyxDQUFDOzs7Ozs7OztBQU9ELE1BQU0sVUFBVSxPQUFPLENBQUMsSUFBWTtJQUNsQyxPQUFPLElBQUk7U0FDUixPQUFPLENBQUMsVUFBVTs7OztJQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFLEVBQUUsRUFBQztTQUNyRCxPQUFPLENBQUMsVUFBVTs7OztJQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxFQUFDLENBQUM7QUFDckQsQ0FBQzs7Ozs7Ozs7QUFPRCxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQWE7O1VBQy9CLFFBQVEsR0FBRyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztJQUMvQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN2QyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDcEU7SUFDRCxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDNUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBTaW1wbGlmaWVzIGEgc3RyaW5nICh0cmltcyBhbmQgbG93ZXJDYXNlcylcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBzaW1wbGlmeShzOiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gIHJldHVybiBgJHtzfWAudHJpbSgpLnRvTG93ZXJDYXNlKCk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUcmFuc2Zvcm1zIGEgY2FtZWxDYXNlIHN0cmluZyBpbnRvIGEgcmVhZGFibGUgdGV4dCBmb3JtYXRcclxuICogQGV4YW1wbGUgdGV4dGlmeSgnaGVsbG9Xb3JsZCEnKVxyXG4gKiAvLyBIZWxsbyB3b3JsZCFcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB0ZXh0aWZ5KHRleHQ6IHN0cmluZykge1xyXG4gIHJldHVybiB0ZXh0XHJcbiAgICAucmVwbGFjZSgvKFtBLVpdKS9nLCBjaGFyID0+IGAgJHtjaGFyLnRvTG93ZXJDYXNlKCl9YClcclxuICAgIC5yZXBsYWNlKC9eKFthLXpdKS8sIGNoYXIgPT4gY2hhci50b1VwcGVyQ2FzZSgpKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRyYW5zZm9ybXMgYSB0ZXh0IHN0cmluZyBpbnRvIGEgdGl0bGUgY2FzZSB0ZXh0IGZvcm1hdFxyXG4gKiBAZXhhbXBsZSB0aXRsZUNhc2UoJ2hlbGxvIHdvcmxkIScpXHJcbiAqIC8vIEhlbGxvIFdvcmtkIVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHRpdGxlQ2FzZSh2YWx1ZTogc3RyaW5nKSB7XHJcbiAgY29uc3Qgc2VudGVuY2UgPSB2YWx1ZS50b0xvd2VyQ2FzZSgpLnNwbGl0KCcgJyk7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZW50ZW5jZS5sZW5ndGg7IGkrKykge1xyXG4gICAgIHNlbnRlbmNlW2ldID0gc2VudGVuY2VbaV1bMF0udG9VcHBlckNhc2UoKSArIHNlbnRlbmNlW2ldLnNsaWNlKDEpO1xyXG4gIH1cclxuICByZXR1cm4gc2VudGVuY2Uuam9pbignICcpO1xyXG59XHJcbiJdfQ==