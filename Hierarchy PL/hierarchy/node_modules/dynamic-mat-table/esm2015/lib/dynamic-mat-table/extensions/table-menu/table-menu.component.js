/**
 * @fileoverview added by tsickle
 * Generated from: lib/dynamic-mat-table/extensions/table-menu/table-menu.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Output, Input, EventEmitter } from '@angular/core';
import { moveItemInArray } from '@angular/cdk/drag-drop';
import { TableService } from '../../dynamic-mat-table.service';
import { TableIntl } from '../../../international/table-Intl';
import { clone, deepClone, isNullorUndefined } from '../../../cores/type';
export class TableMenuComponent {
    /**
     * @param {?} languagePack
     * @param {?} tableService
     */
    constructor(languagePack, tableService) {
        this.languagePack = languagePack;
        this.tableService = tableService;
        this.menuActionChange = new EventEmitter();
        this.currentColumn = null;
        this.reverseDirection = null;
    }
    /**
     * @return {?}
     */
    get tableSetting() {
        return this.currentTableSetting;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set tableSetting(value) {
        this.originalTableSetting = value;
        this.reverseDirection = value.direction === 'rtl' ? 'ltr' : 'rtl';
        this.currentTableSetting = clone(value);
    }
    /**
     * @return {?}
     */
    screenMode_OnClick() {
        this.menuActionChange.emit({
            type: 'FullScreenMode',
            data: this.currentTableSetting,
        });
    }
    /**
     * ** Column Setting *****
     * @param {?} event
     * @return {?}
     */
    columnMenuDropped(event) {
        moveItemInArray(this.currentTableSetting.columnSetting, event.item.data.columnIndex, event.currentIndex);
    }
    /**
     * @param {?} columnIndex
     * @return {?}
     */
    toggleSelectedColumn(columnIndex) {
        /** @type {?} */
        const colFound = this.currentTableSetting.columnSetting.find((/**
         * @param {?} col
         * @return {?}
         */
        (col) => col.index === columnIndex));
        colFound.display = colFound.display === 'visible' ? 'hiden' : 'visible';
    }
    /**
     * @param {?} e
     * @return {?}
     */
    apply_OnClick(e) {
        e.stopPropagation();
        e.preventDefault();
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.menuActionChange.emit({
                type: 'TableSetting',
                data: this.currentTableSetting,
            });
            this.tableService.saveColumnInfo(this.currentTableSetting.columnSetting);
        }));
    }
    /**
     * @param {?} i
     * @return {?}
     */
    setting_onClick(i) {
        this.currentColumn = i;
    }
    /**
     * @return {?}
     */
    cancel_OnClick() {
        this.currentTableSetting = deepClone(this.originalTableSetting);
    }
    /**
     * @param {?} visible
     * @return {?}
     */
    isVisible(visible) {
        return isNullorUndefined(visible) ? true : visible;
    }
    /**
     * **  Save *******
     * @return {?}
     */
    saveSetting_OnClick() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.menuActionChange.emit({ type: 'SaveSetting' });
        }));
    }
    /**
     * **  Filter *******
     * @return {?}
     */
    clearFilter_OnClick() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.menuActionChange.emit({ type: 'FilterClear' });
        }));
    }
    /**
     * **** Save File **********
     * @param {?} type
     * @return {?}
     */
    download_OnClick(type) {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.menuActionChange.emit({ type: 'Download', data: type });
        }));
    }
    /**
     * @param {?} menu
     * @return {?}
     */
    print_OnClick(menu) {
        menu._overlayRef._host.parentElement.click();
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.menuActionChange.emit({ type: 'Print', data: null });
        }));
    }
}
TableMenuComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line: component-selector
                selector: 'table-menu',
                template: "<button\r\n  class=\"clear\"\r\n  mat-icon-button\r\n  #menuTrigger=\"matMenuTrigger\"\r\n  [matMenuTriggerFor]=\"menu\"\r\n  [dir]=\"reverseDirection\">\r\n  <mat-icon class=\"main-menu\">more_vert</mat-icon>\r\n</button>\r\n\r\n<mat-menu #menu=\"matMenu\" [overlapTrigger]=\"false\" [dir]=\"reverseDirection\">\r\n  <button   \r\n    mat-menu-item\r\n    (click)=\"screenMode_OnClick()\"\r\n    [class.ltr-menu]=\"currentTableSetting.direction !== 'rtl'\">\r\n    <mat-icon>fullscreen</mat-icon>\r\n    <span>{{ languagePack.menuLabels.fullScreen }}</span>\r\n  </button>\r\n  <button\r\n    mat-menu-item\r\n    color=\"primary\"\r\n    [matMenuTriggerFor]=\"convertMenu\"\r\n    [class.ltr-menu]=\"currentTableSetting.direction !== 'rtl'\">\r\n    <mat-icon>save</mat-icon>\r\n    <span>{{ languagePack.menuLabels.saveData }}</span>\r\n  </button>\r\n  <button\r\n    mat-menu-item\r\n    color=\"primary\"\r\n    [matMenuTriggerFor]=\"columnMenu\"\r\n    [class.ltr-menu]=\"currentTableSetting.direction !== 'rtl'\">\r\n    <mat-icon>view_column</mat-icon>\r\n    <span>{{ languagePack.menuLabels.columnSetting }}</span>\r\n  </button>\r\n  <button\r\n    mat-menu-item\r\n    (click)=\"saveSetting_OnClick()\"\r\n    [class.ltr-menu]=\"currentTableSetting.direction !== 'rtl'\">\r\n    <mat-icon>grading</mat-icon>\r\n    <span>{{ languagePack.menuLabels.saveTableSetting }}</span>\r\n  </button>\r\n  <button\r\n    mat-menu-item\r\n    (click)=\"clearFilter_OnClick()\"\r\n    [class.ltr-menu]=\"currentTableSetting.direction !== 'rtl'\">\r\n    <mat-icon>clear</mat-icon>\r\n    <span>{{ languagePack.menuLabels.clearFilter }}</span>\r\n  </button>\r\n</mat-menu>\r\n\r\n<!-- Convert Sub Menu -->\r\n\r\n<mat-menu #convertMenu=\"matMenu\">\r\n  <button mat-menu-item (click)=\"download_OnClick('JSON')\" [class.ltr-menu]=\"currentTableSetting.direction !== 'rtl'\">\r\n    <span>{{ languagePack.menuLabels.jsonFile }}</span>\r\n  </button>\r\n  <button mat-menu-item (click)=\"download_OnClick('CSV')\" [class.ltr-menu]=\"currentTableSetting.direction !== 'rtl'\">\r\n    <span>{{ languagePack.menuLabels.csvFile }}</span>\r\n  </button>\r\n  <button mat-menu-item (click)=\"print_OnClick(menuTrigger)\" [class.ltr-menu]=\"currentTableSetting.direction !== 'rtl'\">\r\n    <span>{{ languagePack.menuLabels.printTable }}</span>\r\n  </button>\r\n</mat-menu>\r\n\r\n<!-- Column Setting Sub Menu -->\r\n\r\n<mat-menu #columnMenu=\"matMenu\">\r\n  <ng-container\r\n    *ngIf=\"currentTableSetting?.columnSetting?.length > 0; else noColumns\">\r\n    <div\r\n      class=\"va-mat-table-dragable-container\"\r\n      cdkDropList\r\n      dkDropListLockAxis=\"y\"\r\n      cdkDropListOrientation=\"vertical\"\r\n      dir=\"ltr\">\r\n      <div\r\n        *ngFor=\"let column of currentTableSetting.columnSetting; let i = index\"\r\n        (click)=\"$event.stopPropagation(); $event.preventDefault()\"\r\n        class=\"dragable-row\"\r\n        cdkDrag\r\n        [cdkDragData]=\"{ columnIndex: i, columnTitle: column.header }\"\r\n        (cdkDragDropped)=\"columnMenuDropped($event)\">        \r\n        <mat-icon cdkDragHandle>drag_indicator</mat-icon>\r\n        <mat-checkbox\r\n          [disabled]=\"column?.display === 'prevent-hidden'\"\r\n          [checked]=\"column?.display === 'visible'\"\r\n          (click)=\"$event.stopPropagation()\"\r\n          (change)=\"toggleSelectedColumn(column.index)\">\r\n          {{ column.header }}\r\n        </mat-checkbox> \r\n        <mat-icon class=\"column-setting-button\" (click)=\"setting_onClick(i)\" #menuTrigger=\"matMenuTrigger\"  [matMenuTriggerFor]=\"columnSettingMenu\">settings</mat-icon>\r\n        <!-- <button\r\n          mat-icon-button\r\n          class=\"column-setting-button\"\r\n          (click)=\"setting_onClick(i)\">\r\n          <mat-icon (click)=\"setting_onClick(i)\" #menuTrigger=\"matMenuTrigger\"  [matMenuTriggerFor]=\"columnSettingMenu\">settings</mat-icon>\r\n        </button> -->\r\n\r\n        <div class=\"va-mat-table-drag-preview\" *cdkDragPreview>\r\n          <mat-icon>drag_indicator</mat-icon>\r\n          <mat-checkbox [checked]=\"column?.display === 'visible'\">\r\n            {{ column.header }}\r\n          </mat-checkbox>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div style=\"border-top: solid 1px #e7e7e7\">\r\n      <button\r\n        mat-menu-item\r\n        color=\"primary\"\r\n        class=\"done-setting\"\r\n        (click)=\"apply_OnClick($event)\">\r\n        <mat-icon color=\"primary\">done</mat-icon>\r\n      </button>\r\n      <button\r\n        mat-menu-item\r\n        color=\"primary\"\r\n        class=\"done-setting\"\r\n        (click)=\"cancel_OnClick()\">\r\n        <mat-icon color=\"primary\">clear</mat-icon>\r\n      </button>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-template #noColumns>\r\n    <div mat-menu-item>\r\n      {{ languagePack.menuLabels.thereIsNoColumn }}\r\n    </div>\r\n  </ng-template>\r\n</mat-menu>\r\n\r\n<mat-menu\r\n  #columnSettingMenu=\"matMenu\"\r\n  [overlapTrigger]=\"false\"\r\n  style=\"padding: 10px !important\">\r\n  <div\r\n    *ngIf=\"currentColumn !== null\"\r\n    (click)=\"$event.stopPropagation(); $event.preventDefault()\"\r\n    class=\"column-setting\">\r\n    <ng-container\r\n      *ngIf=\"isVisible(currentTableSetting?.visibaleActionMenu?.columnSettingFilter)\">\r\n      <div class=\"column-setting-header column-setting-header-first\">\r\n        <mat-icon color=\"primary\">filter_alt</mat-icon>{{ languagePack.menuLabels.filterMode }}\r\n      </div>\r\n      <mat-radio-group class=\"radio\" [(ngModel)]=\"currentTableSetting.columnSetting[currentColumn].filter\">\r\n        <mat-radio-button value='client-side' (click)=\"$event.stopPropagation()\">{{ languagePack.menuLabels.filterLocalMode }}</mat-radio-button>\r\n        <mat-radio-button value='server-side' (click)=\"$event.stopPropagation()\">{{ languagePack.menuLabels.filterServerMode }}</mat-radio-button>\r\n      </mat-radio-group>\r\n    </ng-container>\r\n\r\n    <ng-container\r\n      *ngIf=\"isVisible(currentTableSetting?.visibaleActionMenu?.columnSettingSort)\">\r\n      <div class=\"column-setting-header\">\r\n        <mat-icon color=\"primary\">sort</mat-icon>{{ languagePack.menuLabels.sortMode }}\r\n      </div>\r\n      <mat-radio-group class=\"radio\" [(ngModel)]=\"currentTableSetting.columnSetting[currentColumn].sort\">\r\n        <mat-radio-button value='client-side' (click)=\"$event.stopPropagation()\">{{ languagePack.menuLabels.sortLocalMode }}</mat-radio-button>\r\n        <mat-radio-button value='server-side' (click)=\"$event.stopPropagation()\">{{ languagePack.menuLabels.sortServerMode }}</mat-radio-button>\r\n      </mat-radio-group>\r\n    </ng-container>\r\n\r\n    <ng-container \r\n      *ngIf=\"isVisible(currentTableSetting?.visibaleActionMenu?.columnSettingFilter)\">\r\n      <div class=\"column-setting-header\">\r\n        <mat-icon color=\"primary\">print</mat-icon>{{ languagePack.menuLabels.printMode }}\r\n      </div>\r\n      <mat-radio-group class=\"radio\" [(ngModel)]=\"currentTableSetting.columnSetting[currentColumn].printable\">\r\n        <mat-radio-button [value]=\"true\" (click)=\"$event.stopPropagation()\">{{ languagePack.menuLabels.printYesMode }}</mat-radio-button>\r\n        <mat-radio-button [value]=\"false\" (click)=\"$event.stopPropagation()\">{{ languagePack.menuLabels.printNoMode }}</mat-radio-button>\r\n      </mat-radio-group>\r\n    </ng-container>\r\n\r\n    <ng-container\r\n      *ngIf=\"isVisible(currentTableSetting?.visibaleActionMenu?.columnSettingPin)\">\r\n      <div class=\"column-setting-header\">\r\n        <mat-icon color=\"primary\">push_pin</mat-icon>{{ languagePack.menuLabels.pinMode }}\r\n      </div>\r\n      <mat-radio-group class=\"radio\" [(ngModel)]=\"currentTableSetting.columnSetting[currentColumn].sticky\">\r\n        <mat-radio-button value='none' (click)=\"$event.stopPropagation()\">{{ languagePack.menuLabels.pinNoneMode }}</mat-radio-button>\r\n        <mat-radio-button value='start' (click)=\"$event.stopPropagation()\">{{ languagePack.menuLabels.pinStartMode }}</mat-radio-button>\r\n        <mat-radio-button value='end' (click)=\"$event.stopPropagation()\">{{ languagePack.menuLabels.pinEndMode }}</mat-radio-button>\r\n      </mat-radio-group>\r\n    </ng-container>\r\n  </div>\r\n</mat-menu>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:flex;align-items:center;justify-content:space-between}.ltr-menu span{float:left}.main-menu{width:38px!important;line-height:24px!important}.va-mat-button-no-input{border:none;background-color:transparent;outline:0}.va-mat-table-dragable-container{min-width:200px;padding:8px 0;-webkit-user-select:none;-moz-user-select:none;user-select:none}.va-mat-table-dragable-container:dir(rtl){background-color:green!important}.dragable-row mat-checkbox{width:100%;line-height:28px;display:inline-flex}.va-mat-table-dragable-container .dragable-row{background-color:#fff;display:flex;width:100%;height:30px;font-size:14px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.column-setting-button{cursor:pointer!important;font-size:24px;margin-right:5px}.va-mat-table-dragable-container .dragable-row mat-icon{line-height:30px;opacity:.15;transition:opacity .5s;color:#616161;cursor:-webkit-grab;cursor:grab;background-color:#fff}.va-mat-table-dragable-container .dragable-row:hover mat-icon{opacity:1}.va-mat-table-drag-preview{direction:ltr;background-color:#ececec;padding:4px 8px 4px 4px!important;cursor:-webkit-grabbing!important;cursor:grabbing!important;margin-top:-4px;margin-left:-4px;font-size:14px;border-radius:5px}.va-mat-table-drag-preview mat-checkbox,.va-mat-table-drag-preview mat-icon{vertical-align:top}.va-mat-table-drag-preview mat-icon{padding-left:4px;color:#616161}.cdk-drop-list-dragging .cdk-drag{transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag-animating{transition:transform .3s cubic-bezier(0,0,.2,1)}.done-setting{width:50%!important;display:inline-flex;text-align:center;height:42px}.done-setting mat-icon{line-height:38px!important;opacity:.6;transition:opacity .5s;color:#616161;width:100%;text-align:center;margin:0}.done-setting mat-icon:hover{opacity:1}.column-setting{font-family:Roboto,\"Helvetica Neue\",sans-serif;padding:10px}.column-setting .radio{width:100%;display:flex;font-size:12px;margin-top:-2px}.column-setting .radio mat-radio-button{padding:5px;width:50%}.column-setting .radio mat-radio-button:last-child{margin-right:10px}.column-setting .column-setting-header{line-height:30px;padding:5px 5px 0;font-size:14px;border-top:1px solid #f3f3f3;margin-top:5px}.column-setting .column-setting-header mat-icon{opacity:.7;font-size:22px;line-height:30px;float:right;color:#616161}.column-setting-header:first-child{border-top:none!important;padding:0 5px!important;margin-top:-5px!important}.first-menu-item{width:100px;display:inline-block;text-align:left}::ng-deep [dir=rtl] .mat-checkbox-inner-container{margin-left:auto!important;margin-right:5px!important}.mat-menu-item{display:inline-flex}.mat-menu-item span{width:100%}.mat-menu-item mat-icon{line-height:48px!important}"]
            }] }
];
/** @nocollapse */
TableMenuComponent.ctorParameters = () => [
    { type: TableIntl },
    { type: TableService }
];
TableMenuComponent.propDecorators = {
    menuActionChange: [{ type: Output }],
    tableSetting: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    TableMenuComponent.prototype.menuActionChange;
    /** @type {?} */
    TableMenuComponent.prototype.currentColumn;
    /** @type {?} */
    TableMenuComponent.prototype.reverseDirection;
    /** @type {?} */
    TableMenuComponent.prototype.originalTableSetting;
    /** @type {?} */
    TableMenuComponent.prototype.currentTableSetting;
    /** @type {?} */
    TableMenuComponent.prototype.languagePack;
    /** @type {?} */
    TableMenuComponent.prototype.tableService;
}
/**
 * @record
 */
export function TableMenuActionChange() { }
if (false) {
    /** @type {?} */
    TableMenuActionChange.prototype.type;
    /** @type {?|undefined} */
    TableMenuActionChange.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,