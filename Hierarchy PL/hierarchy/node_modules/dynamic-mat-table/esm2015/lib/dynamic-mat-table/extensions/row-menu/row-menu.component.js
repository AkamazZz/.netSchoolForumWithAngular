/**
 * @fileoverview added by tsickle
 * Generated from: lib/dynamic-mat-table/extensions/row-menu/row-menu.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Output, Input, EventEmitter } from '@angular/core';
import { isNullorUndefined } from '../../../cores/type';
/**
 * @template T
 */
export class RowMenuComponent {
    constructor() {
        // @Output() rowActionChange: EventEmitter<ContextMenuItem> = new EventEmitter<ContextMenuItem>();
        this.rowActionChange = new EventEmitter();
        this.actionMenus = [];
        this.visibleActionMenus = [];
    }
    /**
     * @param {?} e
     * @return {?}
     */
    menuOnClick(e) {
        e.stopPropagation();
        e.preventDefault();
        this.visibleActionMenus = [];
        this.actionMenus.forEach((/**
         * @param {?} menu
         * @return {?}
         */
        menu => {
            /** @type {?} */
            const am = isNullorUndefined(this.rowActionMenu) || isNullorUndefined(this.rowActionMenu[menu.name]) ? menu : this.rowActionMenu[menu.name];
            if (isNullorUndefined(am.visible) || am.visible) {
                this.visibleActionMenus.push({
                    name: menu.name,
                    text: am.text || menu.text,
                    disabled: am.disabled || menu.disabled,
                    icon: am.icon || menu.icon,
                    color: am.color || menu.color
                });
            }
        }));
    }
    /**
     * @param {?} menu
     * @return {?}
     */
    menuButton_OnClick(menu) {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.rowActionChange.emit(menu);
        }));
    }
}
RowMenuComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line: component-selector
                selector: 'row-menu',
                template: "<button class=\"clear\" mat-icon-button #menuTrigger=\"matMenuTrigger\" (click)=\"menuOnClick($event)\"\r\n[matMenuTriggerFor]=\"menu\" [dir]=\"tableSetting.direction === 'rtl' ? 'ltr' : 'rtl'\" >\r\n  <mat-icon>more_horiz</mat-icon>\r\n</button>\r\n\r\n<mat-menu #menu=\"matMenu\" [overlapTrigger]=\"false\" [dir]=\"tableSetting.direction === 'rtl' ? 'ltr' : 'rtl'\">\r\n  <ng-template matMenuContent>\r\n    <button mat-button [class.ltr-menu]=\"tableSetting.direction === 'rtl'\" [color]=\"menu.color\" class=\"button-menu\" \r\n      *ngFor=\"let menu of visibleActionMenus\" [disabled]=\"menu.disabled\" (click)=\"menuButton_OnClick(menu)\">\r\n       <mat-icon>{{menu.icon}}</mat-icon>\r\n      <span [class.text-align-right]=\"tableSetting.direction === 'rtl'\" class=\"text-align-left\">{{menu.text}}</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: ["@media print{.printpreview{background-color:#fff;position:fixed;width:100%;height:auto;z-index:99999999;margin:0;padding:0;top:0;left:0;overflow:visible;display:block}}.disable-backdrop-click .cdk-overlay-backdrop.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{pointer-events:none}.ltr-menu span{float:left}.button-menu{width:100%;line-height:48px}.button-menu::ng-deep .mat-button-wrapper{display:flex}.button-menu::ng-deep .mat-button-wrapper span{display:inline-block;width:100%;text-align:left}.button-menu::ng-deep .mat-button-wrapper mat-icon{line-height:48px;height:48px;margin:0 5px}mat-button-wrapper .button-menu{display:inline-block!important}.text-align-left{text-align:left!important}.text-align-right{text-align:right!important}.mat-menu-panel{min-height:unset!important}:host{display:flex;align-items:center;justify-content:space-between}"]
            }] }
];
/** @nocollapse */
RowMenuComponent.ctorParameters = () => [];
RowMenuComponent.propDecorators = {
    rowActionChange: [{ type: Output }],
    actionMenus: [{ type: Input }],
    tableSetting: [{ type: Input }],
    rowActionMenu: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    RowMenuComponent.prototype.rowActionChange;
    /** @type {?} */
    RowMenuComponent.prototype.actionMenus;
    /** @type {?} */
    RowMenuComponent.prototype.tableSetting;
    /** @type {?} */
    RowMenuComponent.prototype.rowActionMenu;
    /** @type {?} */
    RowMenuComponent.prototype.visibleActionMenus;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LW1lbnUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vZHluYW1pYy1tYXQtdGFibGUvIiwic291cmNlcyI6WyJsaWIvZHluYW1pYy1tYXQtdGFibGUvZXh0ZW5zaW9ucy9yb3ctbWVudS9yb3ctbWVudS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7O0FBWXhELE1BQU0sT0FBTyxnQkFBZ0I7SUFRM0I7O1FBTlUsb0JBQWUsR0FBa0MsSUFBSSxZQUFZLEVBQW1CLENBQUM7UUFDdEYsZ0JBQVcsR0FBc0IsRUFBRSxDQUFDO1FBRzdDLHVCQUFrQixHQUFzQixFQUFFLENBQUM7SUFHM0MsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsQ0FBQztRQUNYLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUNwQixDQUFDLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEVBQUUsQ0FBQztRQUM3QixJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU87Ozs7UUFBQyxJQUFJLENBQUMsRUFBRTs7a0JBQ3hCLEVBQUUsR0FBb0IsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLGlCQUFpQixDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQzVKLElBQUssaUJBQWlCLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUU7Z0JBQ2hELElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUM7b0JBQzNCLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtvQkFDZixJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSTtvQkFDMUIsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVE7b0JBQ3RDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJO29CQUMxQixLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSztpQkFDOUIsQ0FBQyxDQUFDO2FBQ0o7UUFDSCxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7O0lBRUQsa0JBQWtCLENBQUMsSUFBcUI7UUFDdEMsVUFBVTs7O1FBQUMsR0FBRyxFQUFFO1lBQ2QsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEMsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDOzs7WUF4Q0YsU0FBUyxTQUFDOztnQkFFVCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIsbTNCQUF3QztnQkFFeEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2FBQ2hEOzs7Ozs4QkFHRSxNQUFNOzBCQUNOLEtBQUs7MkJBQ0wsS0FBSzs0QkFDTCxLQUFLOzs7O0lBSE4sMkNBQStGOztJQUMvRix1Q0FBNkM7O0lBQzdDLHdDQUFvQzs7SUFDcEMseUNBQTZEOztJQUM3RCw4Q0FBMkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBPdXRwdXQsIElucHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgaXNOdWxsb3JVbmRlZmluZWQgfSBmcm9tICcuLi8uLi8uLi9jb3Jlcy90eXBlJztcclxuaW1wb3J0IHsgQ29udGV4dE1lbnVJdGVtIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWxzL2NvbnRleHQtbWVudS5tb2RlbCc7XHJcbmltcG9ydCB7IElSb3dFdmVudCB9IGZyb20gJy4uLy4uLy4uL21vZGVscy90YWJsZS1yb3cubW9kZWwnO1xyXG5pbXBvcnQgeyBUYWJsZVNldHRpbmcgfSBmcm9tICcuLi8uLi8uLi9tb2RlbHMvdGFibGUtc2V0dGluZy5tb2RlbCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IGNvbXBvbmVudC1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAncm93LW1lbnUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9yb3ctbWVudS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vcm93LW1lbnUuY29tcG9uZW50LnNjc3MnXSxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcclxufSlcclxuZXhwb3J0IGNsYXNzIFJvd01lbnVDb21wb25lbnQ8VD4ge1xyXG4gIC8vIEBPdXRwdXQoKSByb3dBY3Rpb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxDb250ZXh0TWVudUl0ZW0+ID0gbmV3IEV2ZW50RW1pdHRlcjxDb250ZXh0TWVudUl0ZW0+KCk7XHJcbiAgQE91dHB1dCgpIHJvd0FjdGlvbkNoYW5nZTogRXZlbnRFbWl0dGVyPENvbnRleHRNZW51SXRlbT4gPSBuZXcgRXZlbnRFbWl0dGVyPENvbnRleHRNZW51SXRlbT4oKTtcclxuICBASW5wdXQoKSBhY3Rpb25NZW51czogQ29udGV4dE1lbnVJdGVtW10gPSBbXTtcclxuICBASW5wdXQoKSB0YWJsZVNldHRpbmc6IFRhYmxlU2V0dGluZztcclxuICBASW5wdXQoKSByb3dBY3Rpb25NZW51PzogeyBba2V5OiBzdHJpbmddOiBDb250ZXh0TWVudUl0ZW07IH07XHJcbiAgdmlzaWJsZUFjdGlvbk1lbnVzOiBDb250ZXh0TWVudUl0ZW1bXSA9IFtdO1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICB9XHJcblxyXG4gIG1lbnVPbkNsaWNrKGUpIHtcclxuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB0aGlzLnZpc2libGVBY3Rpb25NZW51cyA9IFtdO1xyXG4gICAgdGhpcy5hY3Rpb25NZW51cy5mb3JFYWNoKG1lbnUgPT4ge1xyXG4gICAgICBjb25zdCBhbTogQ29udGV4dE1lbnVJdGVtID0gaXNOdWxsb3JVbmRlZmluZWQodGhpcy5yb3dBY3Rpb25NZW51KSB8fCBpc051bGxvclVuZGVmaW5lZCh0aGlzLnJvd0FjdGlvbk1lbnVbbWVudS5uYW1lXSkgPyBtZW51IDogdGhpcy5yb3dBY3Rpb25NZW51W21lbnUubmFtZV07XHJcbiAgICAgIGlmICggaXNOdWxsb3JVbmRlZmluZWQoYW0udmlzaWJsZSkgfHwgYW0udmlzaWJsZSkge1xyXG4gICAgICAgIHRoaXMudmlzaWJsZUFjdGlvbk1lbnVzLnB1c2goe1xyXG4gICAgICAgICAgbmFtZTogbWVudS5uYW1lLFxyXG4gICAgICAgICAgdGV4dDogYW0udGV4dCB8fCBtZW51LnRleHQsXHJcbiAgICAgICAgICBkaXNhYmxlZDogYW0uZGlzYWJsZWQgfHwgbWVudS5kaXNhYmxlZCxcclxuICAgICAgICAgIGljb246IGFtLmljb24gfHwgbWVudS5pY29uLFxyXG4gICAgICAgICAgY29sb3I6IGFtLmNvbG9yIHx8IG1lbnUuY29sb3JcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBtZW51QnV0dG9uX09uQ2xpY2sobWVudTogQ29udGV4dE1lbnVJdGVtKSB7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgdGhpcy5yb3dBY3Rpb25DaGFuZ2UuZW1pdChtZW51KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxuIl19