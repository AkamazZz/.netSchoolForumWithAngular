/**
 * @fileoverview added by tsickle
 * Generated from: lib/dynamic-mat-table/extensions/toolbar/toolbar.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';
export class ToolbarComponent {
    /**
     * @param {?} _el
     */
    constructor(_el) {
        this._el = _el;
        this.itemList = [];
        this.color = null;
        this.direction = 'ltr';
        this.actionClick = new EventEmitter();
        this.normalItemList = [];
        this.floatItemList = [];
    }
    /**
     * @param {?} e
     * @return {?}
     */
    onKeyup(e) {
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.itemList && this.itemList) {
            this.normalItemList = this.itemList.filter((/**
             * @param {?} item
             * @return {?}
             */
            item => item.float === undefined || item.float == false));
            this.floatItemList = this.itemList.filter((/**
             * @param {?} item
             * @return {?}
             */
            item => (item === null || item === void 0 ? void 0 : item.float) == true));
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @param {?} item
     * @return {?}
     */
    item_onClick(item) {
        this.actionClick.emit(item);
    }
}
ToolbarComponent.decorators = [
    { type: Component, args: [{
                selector: 'dm-toolbar',
                template: "<div class=\"toolbar\">\n  <div *ngFor=\"let item of normalItemList\" class=\"item\">\n    <a *ngIf=\"item?.splitter\" class=\"splitter\"></a>\n    <div  \n      matRipple\n      [matRippleColor]=\"color\"\n      class=\"toolbar-item\"\n      (click)=\"item_onClick(item)\"    \n      [matTooltip]=\"item?.tooltip\" \n      matTooltipClass=\"custom-tooltip\">  \n      <mat-icon *ngIf=\"item.matIcon\" [style.color]=\"item?.matIconColor\">{{\n        item.matIcon\n      }}</mat-icon>\n    </div>\n  </div>\n  <div [class.float-right]=\"direction === 'ltr'\" [class.float-left]=\"direction === 'rtl'\">\n    <div *ngFor=\"let item of floatItemList\">\n      <a *ngIf=\"item?.splitter\" class=\"splitter\"></a>\n      <div  \n        matRipple\n        [matRippleColor]=\"color\"\n        class=\"toolbar-item\"\n        (click)=\"item_onClick(item)\"    \n        [matTooltip]=\"item?.tooltip\" \n        matTooltipClass=\"custom-tooltip\">  \n        <mat-icon *ngIf=\"item.matIcon\" [style.color]=\"item?.matIconColor\">\n          {{item.matIcon}}</mat-icon>\n      </div>\n    </div>\n  </div>\n</div> \n<!-- {{ _el?.nativeElement?.scrollWidth}} \n{{ _el?.nativeElement?.offsetWidth}}  -->",
                styles: [":host{background-image:linear-gradient(#f5f5f5,#e4e3e3,#fafafa);min-height:42px;border-radius:8px;border:1px solid #adadad;box-sizing:border-box;overflow:hidden}.toolbar{display:flex;align-items:center;flex-direction:row;align-self:stretch;height:calc(100% - 8px);margin-top:3px}.item{height:100%}.toolbar-item{width:34px;height:100%;border-radius:8px;background-color:#ffffffa6;border:1px solid #b0b0b0;margin-right:8px;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer}.toolbar-item:hover{background-color:#fff!important}.toolbar-item mat-icon{font-size:32px;height:100%;width:100%;text-align:center}.splitter{background-color:#b0b0b0;min-height:100%;min-width:2px;margin-right:8px;float:left;-webkit-user-select:none;-moz-user-select:none;user-select:none}::ng-deep .custom-tooltip{background-color:#fff!important;color:#000!important;border:1px solid #adadad;margin-top:-1px!important;margin-left:5px!important;text-align:center!important;font-family:IRANSans;font-weight:700;font-size:12px;min-width:100px}.float-right{margin-left:auto;display:flex;height:100%}.float-right .toolbar-item{margin-right:4px}.float-left{margin-right:auto;display:flex;height:100%}.float-left .toolbar-item{margin-left:4px}"]
            }] }
];
/** @nocollapse */
ToolbarComponent.ctorParameters = () => [
    { type: ElementRef }
];
ToolbarComponent.propDecorators = {
    itemList: [{ type: Input }],
    color: [{ type: Input }],
    direction: [{ type: Input }],
    actionClick: [{ type: Output }],
    onKeyup: [{ type: HostListener, args: ['document:keyup', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    ToolbarComponent.prototype.itemList;
    /** @type {?} */
    ToolbarComponent.prototype.color;
    /** @type {?} */
    ToolbarComponent.prototype.direction;
    /** @type {?} */
    ToolbarComponent.prototype.actionClick;
    /** @type {?} */
    ToolbarComponent.prototype.normalItemList;
    /** @type {?} */
    ToolbarComponent.prototype.floatItemList;
    /** @type {?} */
    ToolbarComponent.prototype._el;
}
/**
 * @record
 */
export function ToolbarItem() { }
if (false) {
    /** @type {?} */
    ToolbarItem.prototype.id;
    /** @type {?|undefined} */
    ToolbarItem.prototype.name;
    /** @type {?|undefined} */
    ToolbarItem.prototype.tooltip;
    /** @type {?|undefined} */
    ToolbarItem.prototype.matIcon;
    /** @type {?|undefined} */
    ToolbarItem.prototype.matIconColor;
    /** @type {?|undefined} */
    ToolbarItem.prototype.svgIcon;
    /** @type {?|undefined} */
    ToolbarItem.prototype.splitter;
    /** @type {?|undefined} */
    ToolbarItem.prototype.disable;
    /** @type {?|undefined} */
    ToolbarItem.prototype.float;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9keW5hbWljLW1hdC10YWJsZS8iLCJzb3VyY2VzIjpbImxpYi9keW5hbWljLW1hdC10YWJsZS9leHRlbnNpb25zL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQU9uSSxNQUFNLE9BQU8sZ0JBQWdCOzs7O0lBYTNCLFlBQW1CLEdBQWM7UUFBZCxRQUFHLEdBQUgsR0FBRyxDQUFXO1FBWnhCLGFBQVEsR0FBa0IsRUFBRSxDQUFDO1FBQzdCLFVBQUssR0FBVyxJQUFJLENBQUM7UUFDckIsY0FBUyxHQUFrQixLQUFLLENBQUM7UUFDaEMsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBZSxDQUFDO1FBTXhELG1CQUFjLEdBQWtCLEVBQUUsQ0FBQztRQUNuQyxrQkFBYSxHQUFrQixFQUFFLENBQUM7SUFHbEMsQ0FBQzs7Ozs7SUFQRCxPQUFPLENBQUMsQ0FBZ0I7SUFDeEIsQ0FBQzs7Ozs7SUFRRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBRyxPQUFPLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDcEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU07Ozs7WUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLEtBQUssU0FBUyxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksS0FBSyxFQUFDLENBQUM7WUFDckcsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU07Ozs7WUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUEsSUFBSSxhQUFKLElBQUksdUJBQUosSUFBSSxDQUFFLEtBQUssS0FBSSxJQUFJLEVBQUMsQ0FBQztTQUN6RTtJQUNILENBQUM7Ozs7SUFFRCxRQUFRLEtBQUksQ0FBQzs7Ozs7SUFFYixZQUFZLENBQUMsSUFBaUI7UUFDNUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7O1lBaENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsWUFBWTtnQkFDdEIscXJDQUF1Qzs7YUFFeEM7Ozs7WUFObUIsVUFBVTs7O3VCQVEzQixLQUFLO29CQUNMLEtBQUs7d0JBQ0wsS0FBSzswQkFDTCxNQUFNO3NCQUVOLFlBQVksU0FBQyxnQkFBZ0IsRUFBRSxDQUFDLFFBQVEsQ0FBQzs7OztJQUwxQyxvQ0FBc0M7O0lBQ3RDLGlDQUE4Qjs7SUFDOUIscUNBQTBDOztJQUMxQyx1Q0FBd0Q7O0lBTXhELDBDQUFtQzs7SUFDbkMseUNBQWtDOztJQUV0QiwrQkFBcUI7Ozs7O0FBaUJuQyxpQ0FVQzs7O0lBVEMseUJBQVc7O0lBQ1gsMkJBQWM7O0lBQ2QsOEJBQWlCOztJQUNqQiw4QkFBaUI7O0lBQ2pCLG1DQUFzQjs7SUFDdEIsOEJBQWlCOztJQUNqQiwrQkFBbUI7O0lBQ25CLDhCQUFrQjs7SUFDbEIsNEJBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIEhvc3RMaXN0ZW5lciwgSW5wdXQsIE9uQ2hhbmdlcywgT25Jbml0LCBPdXRwdXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZG0tdG9vbGJhcicsXG4gIHRlbXBsYXRlVXJsOiAnLi90b29sYmFyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vdG9vbGJhci5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBUb29sYmFyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBpdGVtTGlzdDogVG9vbGJhckl0ZW1bXSA9IFtdO1xuICBASW5wdXQoKSBjb2xvcjogc3RyaW5nID0gbnVsbDtcbiAgQElucHV0KCkgZGlyZWN0aW9uOiAnbHRyJyB8ICdydGwnID0gJ2x0cic7XG4gIEBPdXRwdXQoKSBhY3Rpb25DbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8VG9vbGJhckl0ZW0+KCk7XG5cbiAgQEhvc3RMaXN0ZW5lcignZG9jdW1lbnQ6a2V5dXAnLCBbJyRldmVudCddKVxuICBvbktleXVwKGU6IEtleWJvYXJkRXZlbnQpIHsgICAgXG4gIH1cblxuICBub3JtYWxJdGVtTGlzdDogVG9vbGJhckl0ZW1bXSA9IFtdO1xuICBmbG9hdEl0ZW1MaXN0OiBUb29sYmFySXRlbVtdID0gW107XG5cbiAgY29uc3RydWN0b3IocHVibGljIF9lbDpFbGVtZW50UmVmKSB7ICAgIFxuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmKGNoYW5nZXMuaXRlbUxpc3QgJiYgdGhpcy5pdGVtTGlzdCkge1xuICAgICAgdGhpcy5ub3JtYWxJdGVtTGlzdCA9IHRoaXMuaXRlbUxpc3QuZmlsdGVyKCBpdGVtID0+IGl0ZW0uZmxvYXQgPT09IHVuZGVmaW5lZCB8fCBpdGVtLmZsb2F0ID09IGZhbHNlKTtcbiAgICAgIHRoaXMuZmxvYXRJdGVtTGlzdCA9IHRoaXMuaXRlbUxpc3QuZmlsdGVyKCBpdGVtID0+IGl0ZW0/LmZsb2F0ID09IHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIG5nT25Jbml0KCkge31cblxuICBpdGVtX29uQ2xpY2soaXRlbTogVG9vbGJhckl0ZW0pIHtcbiAgICB0aGlzLmFjdGlvbkNsaWNrLmVtaXQoaXRlbSk7XG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBUb29sYmFySXRlbSB7XG4gIGlkOiBudW1iZXI7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIHRvb2x0aXA/OiBzdHJpbmc7XG4gIG1hdEljb24/OiBzdHJpbmc7XG4gIG1hdEljb25Db2xvcj86IHN0cmluZztcbiAgc3ZnSWNvbj86IHN0cmluZztcbiAgc3BsaXR0ZXI/OiBib29sZWFuO1xuICBkaXNhYmxlPzogYm9vbGVhbjtcbiAgZmxvYXQ/OiBib29sZWFuO1xufVxuXG5cbiJdfQ==