{"version":3,"file":"dynamic-mat-table.component.d.ts","sources":["dynamic-mat-table.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, AfterViewInit, QueryList, ElementRef, TemplateRef, Renderer2, ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { TableCoreDirective } from '../cores/table.core.directive';\r\nimport { TableService } from './dynamic-mat-table.service';\r\nimport { TableRow } from '../models/table-row.model';\r\nimport { TableField } from '../models/table-field.model';\r\nimport { AbstractFilter } from './extensions/filter/compare/abstract-filter';\r\nimport { TablePagination } from '../models/table-pagination.model';\r\nimport { HeaderFilterComponent } from './extensions/filter/header-filter.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ResizeColumn } from '../models/resize-column.mode';\r\nimport { TableIntl } from '../international/table-Intl';\r\nimport { TableMenuActionChange } from './extensions/table-menu/table-menu.component';\r\nimport { CdkDragDrop, CdkDragStart } from '@angular/cdk/drag-drop';\r\nimport { TableSetting } from '../models/table-setting.model';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { ContextMenuItem } from '../models/context-menu.model';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { MatTooltipDefaultOptions } from '@angular/material/tooltip';\r\nexport declare const tableAnimation: import(\"@angular/animations\").AnimationTriggerMetadata;\r\nexport declare const expandAnimation: import(\"@angular/animations\").AnimationTriggerMetadata;\r\nexport declare const cellTooltipDefaults: MatTooltipDefaultOptions;\r\nexport declare class DynamicMatTableComponent<T extends TableRow> extends TableCoreDirective<T> implements OnInit, AfterViewInit, OnDestroy {\r\n    dialog: MatDialog;\r\n    private renderer;\r\n    languagePack: TableIntl;\r\n    tableService: TableService;\r\n    cdr: ChangeDetectorRef;\r\n    private overlayContainer;\r\n    tbl: any;\r\n    get setting(): TableSetting;\r\n    set setting(value: TableSetting);\r\n    contextMenu: MatMenuTrigger;\r\n    contextMenuPosition: {\r\n        x: string;\r\n        y: string;\r\n    };\r\n    printRef: TemplateRef<any>;\r\n    printContentRef: ElementRef;\r\n    headerFilterList: QueryList<HeaderFilterComponent>;\r\n    private dragDropData;\r\n    private eventsSubscription;\r\n    printing: boolean;\r\n    printTemplate: TemplateRef<any>;\r\n    resizeColumn: ResizeColumn;\r\n    resizableMousemove: () => void;\r\n    resizableMouseup: () => void;\r\n    constructor(dialog: MatDialog, renderer: Renderer2, languagePack: TableIntl, tableService: TableService, cdr: ChangeDetectorRef, overlayContainer: OverlayContainer);\r\n    indexTrackFn: (index: number) => number;\r\n    trackColumn(index: number, item: TableField<T>): string;\r\n    ngOnDestroy(): void;\r\n    refreshUI(): void;\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    get inverseOfTranslation(): number;\r\n    ellipsis(cellRef: any): void;\r\n    rowStyle(row: any): any;\r\n    cellClass(option: any, column: any): any;\r\n    cellStyle(option: any, column: any): any;\r\n    cellIcon(option: any, cellName: any): any;\r\n    filter_onChanged(column: TableField<T>, filter: AbstractFilter[]): void;\r\n    currentContextMenuSender: any;\r\n    onContextMenu(event: MouseEvent, column: TableField<T>, row: any): void;\r\n    onContextMenuItemClick(data: ContextMenuItem): void;\r\n    tableMenuActionChange(e: TableMenuActionChange): void;\r\n    rowMenuActionChange(contextMenuItem: ContextMenuItem, row: any): void;\r\n    doRendering(e: any): void;\r\n    pagination_onChange(e: TablePagination): void;\r\n    reload_onClick(): void;\r\n    onResizeColumn(event: any, index: number, type: 'left' | 'right'): void;\r\n    mouseMove(index: number): void;\r\n    expandRow(rowIndex: number, mode?: boolean): void;\r\n    onRowSelection(e: any, row: any, column: TableField<T>): void;\r\n    onCellClick(e: any, row: any, column: TableField<T>): void;\r\n    onRowDblClick(e: any, row: any): void;\r\n    onRowClick(e: any, row: any): void;\r\n    /************************************ Drag & Drop Column *******************************************/\r\n    dragStarted(event: CdkDragStart): void;\r\n    dropListDropped(event: CdkDragDrop<string[]>): void;\r\n    drop(event: CdkDragDrop<string[]>): void;\r\n    /************************************  *******************************************/\r\n    copyProperty(from: any, to: any): void;\r\n}\r\n"]}